{"ast":null,"code":"import _objectWithoutProperties from \"/home/user/Desktop/new project/fundoo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Practiece.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\n\nclass SimpleDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.props.onClose(this.props.selectedValue);\n    };\n\n    this.handleListItemClick = value => {\n      this.props.onClose(value);\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          onClose = _this$props.onClose,\n          selectedValue = _this$props.selectedValue,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onClose\", \"selectedValue\"]);\n\n    return React.createElement(Dialog, Object.assign({\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\"\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(DialogTitle, {\n      id: \"simple-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Set backup account\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, emails.map(email => React.createElement(ListItem, {\n      button: true,\n      onClick: () => this.handleListItemClick(email),\n      key: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(PersonIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      primary: email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }))), React.createElement(ListItem, {\n      button: true,\n      onClick: () => this.handleListItemClick('addAccount'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(ListItemAvatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }))), React.createElement(ListItemText, {\n      primary: \"add account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      selectedValue: emails[1]\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = value => {\n      this.setState({\n        selectedValue: value,\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Selected: \", this.state.selectedValue), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Open simple dialog\"), React.createElement(SimpleDialogWrapped, {\n      selectedValue: this.state.selectedValue,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SimpleDialogDemo;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Practiece.js"],"names":["React","PropTypes","withStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","emails","styles","avatar","backgroundColor","color","SimpleDialog","Component","handleClose","props","onClose","selectedValue","handleListItemClick","value","render","classes","other","map","email","propTypes","object","isRequired","func","string","SimpleDialogWrapped","SimpleDialogDemo","state","open","handleClickOpen","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nconst emails = ['username@gmail.com', 'user02@gmail.com'];\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n};\n\nclass SimpleDialog extends React.Component {\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n\n  handleListItemClick = value => {\n    this.props.onClose(value);\n  };\n\n  render() {\n    const { classes, onClose, selectedValue, ...other } = this.props;\n\n    return (\n      <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <div>\n          <List>\n            {emails.map(email => (\n              <ListItem button onClick={() => this.handleListItemClick(email)} key={email}>\n                <ListItemAvatar>\n                  <Avatar className={classes.avatar}>\n                    <PersonIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText primary={email} />\n              </ListItem>\n            ))}\n            <ListItem button onClick={() => this.handleListItemClick('addAccount')}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AddIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary=\"add account\" />\n            </ListItem>\n          </List>\n        </div>\n      </Dialog>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  state = {\n    open: false,\n    selectedValue: emails[1],\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = value => {\n    this.setState({ selectedValue: value, open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Typography variant=\"subtitle1\">Selected: {this.state.selectedValue}</Typography>\n        <br />\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open simple dialog\n        </Button>\n        <SimpleDialogWrapped\n          selectedValue={this.state.selectedValue}\n          open={this.state.open}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SimpleDialogDemo;\n"]},"metadata":{},"sourceType":"module"}