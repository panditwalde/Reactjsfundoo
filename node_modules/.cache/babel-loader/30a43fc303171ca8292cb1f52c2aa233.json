{"ast":null,"code":"import _objectWithoutProperties from \"/home/user/Desktop/new project/fundoo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Practiece.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { Divider, TextField, InputBase } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInputBase: {\n      input: {\n        width: \"540px\",\n        height: \"1.875em\",\n        paddingLeft: \"8px\"\n      }\n    }\n  }\n});\n\nclass SimpleDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.props.onClose(this.props.selectedValue);\n    };\n\n    this.handleListItemClick = value => {\n      this.props.onClose(value);\n    };\n\n    this.handleClickClose = () => {\n      console.log();\n      this.setState({\n        open: false\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          onClose = _this$props.onClose,\n          selectedValue = _this$props.selectedValue,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onClose\", \"selectedValue\"]);\n\n    return React.createElement(Dialog, Object.assign({\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\"\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width: \"600px\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        padding: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Collaborators\")), React.createElement(\"span\", {\n      style: {\n        padding: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \" \", React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        padding: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row\",\n        padding: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(PersonAddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(InputBase, {\n      width: \"600px\",\n      id: \"standard-basic\",\n      placeholder: \"Person or email to share with\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end \",\n        flexDirection: \"row\",\n        padding: \" 3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginRight: \"56px\"\n      },\n      onClose: this.handleClickClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = value => {\n      this.setState({\n        selectedValue: value,\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Open simple dialog\"), React.createElement(SimpleDialogWrapped, {\n      selectedValue: this.state.selectedValue,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SimpleDialogDemo;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Practiece.js"],"names":["React","PropTypes","withStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","Divider","TextField","InputBase","PersonAddIcon","MuiThemeProvider","createMuiTheme","styles","avatar","backgroundColor","color","theme","overrides","MuiInputBase","input","width","height","paddingLeft","SimpleDialog","Component","handleClose","props","onClose","selectedValue","handleListItemClick","value","handleClickClose","console","log","setState","open","render","classes","other","display","flexWrap","flexDirection","padding","justifyContent","marginRight","propTypes","object","isRequired","func","string","SimpleDialogWrapped","SimpleDialogDemo","state","handleClickOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { Divider, TextField, InputBase } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInputBase: {\n      input: {\n        width: \"540px\",\n        height: \"1.875em\",\n        paddingLeft: \"8px\"\n      }\n    }\n  }\n});\n\nclass SimpleDialog extends React.Component {\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n\n  handleListItemClick = value => {\n    this.props.onClose(value);\n  };\n\n  handleClickClose = () => {\n    console.log();\n    \n    this.setState({\n      open: false\n    });\n  };\n  render() {\n    const { classes, onClose, selectedValue, ...other } = this.props;\n\n    return (\n      <Dialog\n        onClose={this.handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        {...other}\n      >\n        <MuiThemeProvider theme={theme}>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              width: \"600px\",\n              flexDirection: \"column\"\n            }}\n          >\n            <span style={{ padding: \"2%\" }}>\n              <b>Collaborators</b>\n            </span>\n            <span style={{ padding: \"2%\" }}>\n              {\" \"}\n              <Divider />\n            </span>\n            <span style={{ padding: \"1%\" }}>\n              <Avatar></Avatar>\n            </span>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                flexDirection: \"row\",\n                padding: \"1%\"\n              }}\n            >\n              <span>\n                <Avatar>\n                  <PersonAddIcon />\n                </Avatar>\n              </span>\n              <span>\n                <InputBase\n                  width=\"600px\"\n                  id=\"standard-basic\"\n                  placeholder=\"Person or email to share with\"\n                />\n              </span>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end \",\n                flexDirection: \"row\",\n                padding: \" 3%\"\n              }}\n            >\n              <span\n                style={{ marginRight: \"56px\" }}\n                onClose={this.handleClickClose}\n              >\n                Cancel\n              </span>\n              <span>Save</span>\n            </div>\n          </div>\n        </MuiThemeProvider>\n      </Dialog>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = value => {\n    this.setState({ selectedValue: value, open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <br />\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={this.handleClickOpen}\n        >\n          Open simple dialog\n        </Button>\n        <SimpleDialogWrapped\n          selectedValue={this.state.selectedValue}\n          open={this.state.open}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SimpleDialogDemo;\n"]},"metadata":{},"sourceType":"module"}