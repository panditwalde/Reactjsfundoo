{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/SetColor.js\";\n// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import Popover from \"@material-ui/core/Popover\";\n// import Typography from \"@material-ui/core/Typography\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import {\n//   Card,\n//   Tooltip,\n//   DialogContent,\n//   Button,\n//   IconButton\n// } from \"@material-ui/core\";\n// import PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\n// import { typography } from \"@material-ui/system\";\n// const styles = theme => ({\n//   popover: {\n//     pointerEvents: \"none\"\n//   },\n//   paper: {\n//     padding: theme.spacing.unit\n//   },\n//   button: {\n//     margin: theme.spacing.unit\n//   },\n//   input: {\n//     display: \"none\"\n//   }\n// });\n// const colorsPallete = [\n//   {\n//     colorName: \"White\",\n//     colorCode: \"#ffffff\"\n//   },\n//   {\n//     colorName: \"Red\",\n//     colorCode: \"#ea2e2e\"\n//   },\n//   {\n//     colorName: \"Orange\",\n//     colorCode: \"#ffb600\"\n//   },\n//   {\n//     colorName: \"Yellow\",\n//     colorCode: \"#e1e82e\"\n//   },\n//   {\n//     colorName: \"Green\",\n//     colorCode: \"#ccff90\"\n//   },\n//   {\n//     colorName: \"Teal\",\n//     colorCode: \"#a7ffeb\"\n//   },\n//   {\n//     colorName: \"Blue\",\n//     colorCode: \"#281bd6\"\n//   },\n//   {\n//     colorName: \"Dark blue\",\n//     colorCode: \"#aecbfa\"\n//   },\n//   {\n//     colorName: \"Purple\",\n//     colorCode: \"#d7adfb\"\n//   },\n//   {\n//     colorName: \"Pink\",\n//     colorCode: \"#fdcfe8\"\n//   },\n//   {\n//     colorName: \"Dark Brown\",\n//     colorCode: \"#e6c9a7\"\n//   },\n//   {\n//     colorName: \"Gray\",\n//     colorCode: \"#e8eaed\"\n//   }\n// ];\n// class MouseOverPopover extends React.Component {\n//   state = {\n//     anchorEl: null\n//   };\n//   handlePopoverOpen = event => {\n//     this.setState({ anchorEl: event.currentTarget });\n//     event.stopPropagation();\n//   };\n//   handlePopoverClose = () => {\n//     this.setState({ anchorEl: null });\n//   };\n//   render() {\n//     const { classes } = this.props;\n//     const { anchorEl } = this.state;\n//     const open = Boolean(anchorEl);\n//     return (\n//       <div>\n//         <Typography\n//           aria-owns={open ? \"mouse-over-popover\" : undefined}\n//           aria-haspopup=\"true\"\n//         >\n//           <Tooltip title=\" Change color\">\n//             <PaletteOutlinedIcon onMouseEnter={this.handlePopoverOpen}\n//           />\n//           </Tooltip>\n//         </Typography>\n//         <Popover\n//           style={{ top: \"-16%\" }}\n//           id=\"mouse-over-popover\"\n//           className={classes.popover}\n//           classes={{\n//             paper: classes.paper\n//           }}\n//           open={open}\n//           anchorEl={anchorEl}\n//           anchorOrigin={{\n//             vertical: \"top\",\n//             horizontal: \"left\"\n//           }}\n//           transformOrigin={{\n//             vertical: \"top\",\n//             horizontal: \"left\"\n//           }}\n//         >\n//           <div\n//             style={{\n//               position: \"relative\",\n//               width: \"120px\",\n//               margin: \"auto\",\n//               display: \"flex\",\n//               flexWrap: \"wrap\",\n//               flexDirection: \"row\"\n//             }}\n//           >\n//             {colorsPallete.map(usercolor => (\n//               <div style={{ padding: \"3px\" }}>\n//                 <IconButton\n//                   onClick={this.handleColorChange}\n//                   style={{ backgroundColor: usercolor.colorName }}\n//                 ></IconButton>\n//               </div>\n//             ))}\n//           </div>\n//         </Popover>\n//       </div>\n//     );\n//   }\n// }\n// MouseOverPopover.propTypes = {\n//   classes: PropTypes.object.isRequired\n// };\n// export default withStyles(styles)(MouseOverPopover);\nimport React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Card, Tooltip, DialogContent, Button, IconButton } from \"@material-ui/core\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { setColor } from \"./Service\";\nconst colorsPallete = [{\n  colorName: \"White\",\n  colorCode: \"#ffffff\"\n}, {\n  colorName: \"Red\",\n  colorCode: \"#ea2e2e\"\n}, {\n  colorName: \"Orange\",\n  colorCode: \"#ffb600\"\n}, {\n  colorName: \"Yellow\",\n  colorCode: \"#e1e82e\"\n}, {\n  colorName: \"Green\",\n  colorCode: \"#ccff90\"\n}, {\n  colorName: \"Teal\",\n  colorCode: \"#a7ffeb\"\n}, {\n  colorName: \"Blue\",\n  colorCode: \"#281bd6\"\n}, {\n  colorName: \"Dark blue\",\n  colorCode: \"#aecbfa\"\n}, {\n  colorName: \"Purple\",\n  colorCode: \"#d7adfb\"\n}, {\n  colorName: \"Pink\",\n  colorCode: \"#fdcfe8\"\n}, {\n  colorName: \"Dark Brown\",\n  colorCode: \"#e6c9a7\"\n}, {\n  colorName: \"Gray\",\n  colorCode: \"#e8eaed\"\n}];\n\nclass SimpleMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleColorChange = usercolor => {\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.props.propsColornote;\n      setColor(noteid, usercolor.colorCode).then(Response => {\n        this.props.refresh();\n        console.log(\"color set\");\n      }).catch(err => {\n        console.log(\"  color  not set \");\n      });\n    };\n  }\n\n  render() {\n    const anchorEl = this.state.anchorEl;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \" Change color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(PaletteOutlinedIcon, {\n      onMouseOver: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(Menu, {\n      id: \"simple-menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"120px\",\n        margin: \"auto\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, colorsPallete.map(usercolor => React.createElement(\"div\", {\n      style: {\n        padding: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: () => this.handleColorChange(usercolor),\n      style: {\n        backgroundColor: usercolor.colorName\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default SimpleMenu;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/SetColor.js"],"names":["React","Menu","MenuItem","Card","Tooltip","DialogContent","Button","IconButton","PaletteOutlinedIcon","setColor","colorsPallete","colorName","colorCode","SimpleMenu","Component","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","handleColorChange","usercolor","token","localStorage","getItem","noteid","props","propsColornote","then","Response","refresh","console","log","catch","err","render","Boolean","position","width","margin","display","flexWrap","flexDirection","map","padding","backgroundColor"],"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","sourcesContent":["// import React from \"react\";\n// import PropTypes from \"prop-types\";\n// import Popover from \"@material-ui/core/Popover\";\n// import Typography from \"@material-ui/core/Typography\";\n// import { withStyles } from \"@material-ui/core/styles\";\n// import {\n//   Card,\n//   Tooltip,\n//   DialogContent,\n//   Button,\n//   IconButton\n// } from \"@material-ui/core\";\n// import PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\n\n// import { typography } from \"@material-ui/system\";\n\n// const styles = theme => ({\n//   popover: {\n//     pointerEvents: \"none\"\n//   },\n//   paper: {\n//     padding: theme.spacing.unit\n//   },\n//   button: {\n//     margin: theme.spacing.unit\n//   },\n//   input: {\n//     display: \"none\"\n//   }\n// });\n\n// const colorsPallete = [\n//   {\n//     colorName: \"White\",\n//     colorCode: \"#ffffff\"\n//   },\n//   {\n//     colorName: \"Red\",\n//     colorCode: \"#ea2e2e\"\n//   },\n//   {\n//     colorName: \"Orange\",\n//     colorCode: \"#ffb600\"\n//   },\n//   {\n//     colorName: \"Yellow\",\n//     colorCode: \"#e1e82e\"\n//   },\n//   {\n//     colorName: \"Green\",\n//     colorCode: \"#ccff90\"\n//   },\n//   {\n//     colorName: \"Teal\",\n//     colorCode: \"#a7ffeb\"\n//   },\n//   {\n//     colorName: \"Blue\",\n//     colorCode: \"#281bd6\"\n//   },\n//   {\n//     colorName: \"Dark blue\",\n//     colorCode: \"#aecbfa\"\n//   },\n//   {\n//     colorName: \"Purple\",\n//     colorCode: \"#d7adfb\"\n//   },\n//   {\n//     colorName: \"Pink\",\n//     colorCode: \"#fdcfe8\"\n//   },\n//   {\n//     colorName: \"Dark Brown\",\n//     colorCode: \"#e6c9a7\"\n//   },\n//   {\n//     colorName: \"Gray\",\n//     colorCode: \"#e8eaed\"\n//   }\n// ];\n\n// class MouseOverPopover extends React.Component {\n//   state = {\n//     anchorEl: null\n//   };\n\n//   handlePopoverOpen = event => {\n//     this.setState({ anchorEl: event.currentTarget });\n//     event.stopPropagation();\n//   };\n\n//   handlePopoverClose = () => {\n//     this.setState({ anchorEl: null });\n//   };\n\n//   render() {\n//     const { classes } = this.props;\n//     const { anchorEl } = this.state;\n//     const open = Boolean(anchorEl);\n\n//     return (\n//       <div>\n//         <Typography\n//           aria-owns={open ? \"mouse-over-popover\" : undefined}\n//           aria-haspopup=\"true\"\n\n//         >\n//           <Tooltip title=\" Change color\">\n//             <PaletteOutlinedIcon onMouseEnter={this.handlePopoverOpen}\n//           />\n//           </Tooltip>\n//         </Typography>\n\n//         <Popover\n\n//           style={{ top: \"-16%\" }}\n//           id=\"mouse-over-popover\"\n//           className={classes.popover}\n//           classes={{\n//             paper: classes.paper\n//           }}\n//           open={open}\n//           anchorEl={anchorEl}\n//           anchorOrigin={{\n//             vertical: \"top\",\n//             horizontal: \"left\"\n//           }}\n//           transformOrigin={{\n//             vertical: \"top\",\n//             horizontal: \"left\"\n//           }}\n\n//         >\n//           <div\n//             style={{\n//               position: \"relative\",\n//               width: \"120px\",\n//               margin: \"auto\",\n//               display: \"flex\",\n//               flexWrap: \"wrap\",\n//               flexDirection: \"row\"\n//             }}\n//           >\n//             {colorsPallete.map(usercolor => (\n//               <div style={{ padding: \"3px\" }}>\n//                 <IconButton\n//                   onClick={this.handleColorChange}\n//                   style={{ backgroundColor: usercolor.colorName }}\n//                 ></IconButton>\n//               </div>\n//             ))}\n//           </div>\n//         </Popover>\n//       </div>\n//     );\n//   }\n// }\n\n// MouseOverPopover.propTypes = {\n//   classes: PropTypes.object.isRequired\n// };\n\n// export default withStyles(styles)(MouseOverPopover);\n\nimport React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {\n  Card,\n  Tooltip,\n  DialogContent,\n  Button,\n  IconButton\n} from \"@material-ui/core\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { setColor } from \"./Service\";\n\nconst colorsPallete = [\n  {\n    colorName: \"White\",\n    colorCode: \"#ffffff\"\n  },\n  {\n    colorName: \"Red\",\n    colorCode: \"#ea2e2e\"\n  },\n  {\n    colorName: \"Orange\",\n    colorCode: \"#ffb600\"\n  },\n  {\n    colorName: \"Yellow\",\n    colorCode: \"#e1e82e\"\n  },\n  {\n    colorName: \"Green\",\n    colorCode: \"#ccff90\"\n  },\n  {\n    colorName: \"Teal\",\n    colorCode: \"#a7ffeb\"\n  },\n  {\n    colorName: \"Blue\",\n    colorCode: \"#281bd6\"\n  },\n  {\n    colorName: \"Dark blue\",\n    colorCode: \"#aecbfa\"\n  },\n  {\n    colorName: \"Purple\",\n    colorCode: \"#d7adfb\"\n  },\n  {\n    colorName: \"Pink\",\n    colorCode: \"#fdcfe8\"\n  },\n  {\n    colorName: \"Dark Brown\",\n    colorCode: \"#e6c9a7\"\n  },\n  {\n    colorName: \"Gray\",\n    colorCode: \"#e8eaed\"\n  }\n];\n\nclass SimpleMenu extends React.Component {\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleColorChange = usercolor => {\n      \n    let token = localStorage.getItem(\"Token\");\n    \n    let noteid = this.props.propsColornote;\n\n     setColor(noteid,usercolor.colorCode).then(Response=>{\n\n          this.props.refresh()\n         console.log(\"color set\");\n         \n\n     }) .catch(err=>{\n       console.log(\"  color  not set \");\n       \n     }) \n\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n\n    return (\n      <div>\n        <Tooltip title=\" Change color\">\n          <PaletteOutlinedIcon onMouseOver={this.handleClick} />\n        </Tooltip>\n\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          {\" \"}\n          <div\n            style={{\n              position: \"relative\",\n              width: \"120px\",\n              margin: \"auto\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\"\n            }}\n          >\n            {colorsPallete.map(usercolor => (\n              <div style={{ padding: \"3px\" }}>\n                <IconButton\n                  onClick={() => this.handleColorChange(usercolor)}\n                  style={{ backgroundColor: usercolor.colorName }}\n                ></IconButton>\n              </div>\n            ))}\n          </div>\n        </Menu>\n      </div>\n    );\n  }\n}\n\nexport default SimpleMenu;\n"]},"metadata":{},"sourceType":"module"}