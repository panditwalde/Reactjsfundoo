{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/EditLabel.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DisplayAllLabel } from \"./Service\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.HandlelablevalueChange = event => {\n      this.setState({\n        labelvalue: event.target.value\n      });\n      let noteid = this.props.noteid2;\n      console.log(\"d\" + noteid);\n    };\n\n    this.getAllLabel = () => {\n      console.log(\"lable\");\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllLabel(token).then(Response => {\n        let array = [];\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      }).catch(err => {\n        console.log(\"Note not found\");\n      });\n    };\n\n    this.HandlelabelAddChange = () => {\n      console.log(\"ass\" + this.state.allLable);\n      let token = localStorage.getItem(\"Token\");\n    };\n\n    this.state = {\n      labelvalue: \"\",\n      allLable: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    console.log(\"all label\" + this.state.allLable);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"aria-owns\": open ? \"simple-popper\" : undefined,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Edit labels\"), React.createElement(Popover, {\n      style: {\n        left: \"165.492px\"\n      },\n      id: \"simple-popper\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      wi: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Edit Labels \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"  \", React.createElement(TextField, {\n      id: \"standard-dense\",\n      placeholder: \"Create new label\",\n      margin: \"dense\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Done\")))));\n  }\n\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimplePopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/EditLabel.js"],"names":["React","PropTypes","FormGroup","withStyles","Typography","Button","Popover","Input","InputLabel","InputAdornment","FormControl","TextField","Grid","AccountCircle","SearchIcon","AddRoundedIcon","Divider","IconButton","FormLabel","FormControlLabel","FormHelperText","Checkbox","DisplayAllLabel","styles","theme","typography","margin","spacing","unit","SimplePopover","Component","constructor","props","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","HandlelablevalueChange","labelvalue","target","value","noteid","noteid2","console","log","getAllLabel","token","localStorage","getItem","then","Response","array","data","forEach","element","push","allLable","catch","err","HandlelabelAddChange","UNSAFE_componentWillMount","render","classes","open","Boolean","undefined","left","vertical","horizontal","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Divider, IconButton } from \"@material-ui/core\";\n\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DisplayAllLabel } from \"./Service\";\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      labelvalue: \"\",\n      allLable: []\n    };\n  }\n\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n  HandlelablevalueChange = event => {\n    this.setState({\n      labelvalue: event.target.value\n    });\n    let noteid = this.props.noteid2;\n    console.log(\"d\" + noteid);\n  };\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n  getAllLabel = () => {\n    console.log(\"lable\");\n\n    let token = localStorage.getItem(\"Token\");\n    DisplayAllLabel(token)\n      .then(Response => {\n        let array = [];\n\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      })\n      .catch(err => {\n        console.log(\"Note not found\");\n      });\n  };\n\n  HandlelabelAddChange = () => {\n    console.log(\"ass\" + this.state.allLable);\n\n    let token = localStorage.getItem(\"Token\");\n  };\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    console.log(\"all label\"+this.state.allLable);\n    \n\n    return (\n      <div>\n        <div\n          aria-owns={open ? \"simple-popper\" : undefined}\n          onClick={this.handleClick}\n        >\n          Edit labels\n        </div>\n        <Popover\n          style={{ left: \"165.492px\" }}\n          id=\"simple-popper\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n         \n            <Typography>\n             <div wi>\n            <div>Edit Labels </div>\n          \n          <div>  <TextField\n          id=\"standard-dense\"\n          placeholder=\"Create new label\"\n          margin=\"dense\"\n        /></div>\n          \n          <Divider />\n          <div>Done</div>\n          </div>\n            </Typography>\n       \n        </Popover>\n      </div>\n    );\n  }\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}