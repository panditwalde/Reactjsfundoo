{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Addlabel.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DisplayAllLabel, addLabelWithnote } from \"./Service\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider, IconButton } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleClose1 = () => {\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.handleAdd = label => {\n      console.log(\"add\" + label);\n    };\n\n    this.HandlelablevalueChange = event => {\n      this.setState({\n        labelvalue: event.target.value\n      });\n      let noteid = this.props.noteid2;\n      console.log(\"d\" + noteid);\n    };\n\n    this.getAllLabel = () => {\n      console.log(\"lable\");\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllLabel(token).then(Response => {\n        let array = [];\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      }).catch(err => {\n        console.log(\"Note not found\");\n      });\n    };\n\n    this.HandlelabelAddChange = () => {\n      console.log(\"ddd\");\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.props.noteid2;\n      let labeldto = {};\n      labeldto.lable_title = this.state.labelvalue;\n      this.state.alllabel1.push(this.state.labelvalue);\n      this.props.onSelectLabel1(this.state.alllabel1);\n      labeldto.noteid = noteid;\n      addLabelWithnote(labeldto, token).then(Response => {\n        console.log(\"label add with note\");\n        this.getAllLabel();\n        this.setState({\n          opensnackbar: true\n        });\n        this.props.refresh();\n      }).catch(err => {\n        console.log(\"label add not with note\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn;\n    this.state = {\n      labelvalue: \"\",\n      allLable: [],\n      alllabel1: [],\n      opensnackbar: false\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    console.log(\"all label\" + this.state.allLable);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"aria-owns\": open ? \"simple-popper\" : undefined,\n      onClick: this.handleClick,\n      style: {\n        paddingRight: \"12px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Add label\"), React.createElement(Popover, {\n      style: {\n        left: \"165.492px\",\n        top: \"-81px\"\n      },\n      id: \"simple-popper\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"4.5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Label note\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Enter label name\",\n      onChange: this.HandlelablevalueChange,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }))), this.state.allLable !== \"\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, this.state.allLable.map(label => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onClick: () => this.handleAdd(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), label.lable_title))) : null, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), this.state.labelvalue !== \"\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.HandlelabelAddChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(AddRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), \"Create\", React.createElement(\"b\", {\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"\\\"\", this.state.labelvalue, \"\\\"\")) : null)), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, \"new label Created\"),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimplePopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Addlabel.js"],"names":["React","PropTypes","withStyles","Popover","Input","InputAdornment","FormControl","SearchIcon","AddRoundedIcon","Checkbox","DisplayAllLabel","addLabelWithnote","Snackbar","CloseIcon","Button","Divider","IconButton","styles","theme","typography","margin","spacing","unit","SimplePopover","Component","constructor","props","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","handleClose1","opensnackbar","handleAdd","label","console","log","HandlelablevalueChange","labelvalue","target","value","noteid","noteid2","getAllLabel","token","localStorage","getItem","then","Response","array","data","forEach","element","push","allLable","catch","err","HandlelabelAddChange","labeldto","lable_title","alllabel1","onSelectLabel1","refresh","loggedIn","UNSAFE_componentWillMount","render","classes","open","Boolean","undefined","paddingRight","left","top","vertical","horizontal","padding","disableUnderline","map","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DisplayAllLabel, addLabelWithnote } from \"./Service\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider, IconButton } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn;\n    this.state = {\n      labelvalue: \"\",\n      allLable: [],\n      alllabel1: [],\n      opensnackbar: false\n    };\n  }\n\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n  handleClose1 = () => {\n    this.setState({\n      opensnackbar: false\n    });\n  };\n\n  handleAdd = label => {\n\n    console.log(\"add\"+label);\n    \n  \n  };\n  HandlelablevalueChange = event => {\n    this.setState({\n      labelvalue: event.target.value\n    });\n    let noteid = this.props.noteid2;\n    console.log(\"d\" + noteid);\n  };\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n  getAllLabel = () => {\n    console.log(\"lable\");\n\n    let token = localStorage.getItem(\"Token\");\n    DisplayAllLabel(token)\n      .then(Response => {\n        let array = [];\n\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      })\n      .catch(err => {\n        console.log(\"Note not found\");\n      });\n  };\n\n  HandlelabelAddChange = () => {\n    console.log(\"ddd\");\n\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.props.noteid2;\n    let labeldto = {};\n    labeldto.lable_title = this.state.labelvalue;\n\n    this.state.alllabel1.push(this.state.labelvalue);\n    this.props.onSelectLabel1(this.state.alllabel1);\n\n    labeldto.noteid = noteid;\n    addLabelWithnote(labeldto, token)\n      .then(Response => {\n        console.log(\"label add with note\");\n        this.getAllLabel();\n        this.setState({ opensnackbar: true });\n        this.props.refresh();\n      })\n      .catch(err => {\n        console.log(\"label add not with note\");\n      });\n  };\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    console.log(\"all label\" + this.state.allLable);\n\n    return (\n      <div>\n        <div\n          aria-owns={open ? \"simple-popper\" : undefined}\n          onClick={this.handleClick}\n          style={{ paddingRight: \"12px\" }}\n        >\n          Add label\n        </div>\n        <Popover\n          style={{ left: \"165.492px\", top: \"-81px\" }}\n          id=\"simple-popper\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          <div style={{ padding: \"4.5%\" }}>\n            <div>Label note</div>\n            <div>\n              <FormControl className={classes.margin}>\n                <Input\n                  placeholder=\"Enter label name\"\n                  onChange={this.HandlelablevalueChange}\n                  fullWidth\n                  margin=\"normal\"\n                  InputProps={{\n                    disableUnderline: true\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            </div>\n            {this.state.allLable !== \"\" ? (\n              <div>\n                {this.state.allLable.map(label => (\n                  <div>\n                    <Checkbox onClick={()=>this.handleAdd()} />\n\n                    {label.lable_title}\n                  </div>\n                ))}\n              </div>\n            ) : null}\n            <Divider />\n            {this.state.labelvalue !== \"\" ? (\n              <div>\n                <IconButton onClick={this.HandlelabelAddChange}>\n                  <AddRoundedIcon />\n                </IconButton>\n                Create\n                <b\n                  fullWidth\n                  margin=\"normal\"\n                  InputProps={{\n                    disableUnderline: true\n                  }}\n                >\n                  \"{this.state.labelvalue}\"\n                </b>\n              </div>\n            ) : null}\n          </div>\n          {/* </Typography> */}\n        </Popover>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">new label Created</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.handleClose1}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}