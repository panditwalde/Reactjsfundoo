{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/TrashNote.js\";\nimport React, { Component } from \"react\";\nimport { Card, Tooltip } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport { DisplayAllNotes } from \"./Service\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\nimport Restoretrash from \"./Restoretrash\";\nimport DeleteNotepermanent from \"./DeleteNotepermanent\";\nexport class TrashNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        let array = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === true) {\n            array.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handledisplaynote = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleclosenote = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false,\n      more: false,\n      allNote: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: \"800px\",\n        position: \"relative\",\n        margin: \"auto\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"105px\",\n        paddingLeft: \"13%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\nexport default TrashNote;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/TrashNote.js"],"names":["React","Component","Card","Tooltip","DisplayAllNotes","DeleteForeverIcon","RestoreFromTrashIcon","Restoretrash","DeleteNotepermanent","TrashNote","constructor","props","getAllNotes","token","localStorage","getItem","then","Response","array","data","forEach","element","trash","push","setState","allNote","catch","err","console","log","handledisplaynote","open","handleclosenote","state","more","UNSAFE_componentWillMount","render","width","position","margin","display","flexWrap","flexDirection","paddingTop","paddingLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,mBAA9B;AACA,OAAO,6BAAP;AACA,SAASC,eAAT,QAAgC,WAAhC;AAEA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AAEA,OAAO,MAAMC,SAAN,SAAwBR,SAAxB,CAAkC;AACvCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,WAVmB,GAUL,MAAM;AAClB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAEAX,MAAAA,eAAe,CAACS,KAAD,CAAf,CACGG,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIC,KAAK,GAAG,EAAZ;AACAD,QAAAA,QAAQ,CAACE,IAAT,CAAcA,IAAd,CAAmBC,OAAnB,CAA2BC,OAAO,IAAI;AACpC,cAAIA,OAAO,CAACC,KAAR,KAAkB,IAAtB,EAA4B;AAC1BJ,YAAAA,KAAK,CAACK,IAAN,CAAWF,OAAX;AACD;AACF,SAJD;AAKA,aAAKG,QAAL,CAAc;AACZC,UAAAA,OAAO,EAAEP;AADG,SAAd;AAGD,OAXH,EAYGQ,KAZH,CAYSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAdH;AAeD,KA5BkB;;AAAA,SAiCnBC,iBAjCmB,GAiCC,MAAM;AACxB,WAAKN,QAAL,CAAc;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAnCkB;;AAAA,SAoCnBC,eApCmB,GAoCD,MAAM;AACtB,WAAKR,QAAL,CAAc;AAAEO,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAtCkB;;AAGjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,IAAI,EAAE,KADK;AAEXG,MAAAA,IAAI,EAAE,KAFK;AAGXT,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKD;;AAsBDU,EAAAA,yBAAyB,GAAG;AAC1B,SAAKvB,WAAL;AACD;;AAQDwB,EAAAA,MAAM,GAAG;AACP,WACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,QAAQ,EAAE,UAFL;AAGLC,QAAAA,MAAM,EAAE,MAHH;AAILC,QAAAA,OAAO,EAAE,MAJJ;AAKLC,QAAAA,QAAQ,EAAE,MALL;AAMLC,QAAAA,aAAa,EAAE,KANV;AAOLC,QAAAA,UAAU,EAAE,OAPP;AAQLC,QAAAA,WAAW,EAAE;AARR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD;;AA3DsC;AA8DzC,eAAenC,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Tooltip } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport { DisplayAllNotes } from \"./Service\";\n\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport RestoreFromTrashIcon from \"@material-ui/icons/RestoreFromTrash\";\nimport Restoretrash from \"./Restoretrash\";\nimport DeleteNotepermanent from \"./DeleteNotepermanent\";\n\nexport class TrashNote extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      more: false,\n      allNote: []\n    };\n  }\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        let array = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === true) {\n            array.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n  handledisplaynote = () => {\n    this.setState({ open: true });\n  };\n  handleclosenote = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"800px\",\n          position: \"relative\",\n          margin: \"auto\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          flexDirection: \"row\",\n          paddingTop: \"105px\",\n          paddingLeft: \"13%\"\n        }}\n       \n      >\n       \n      </div>\n    );\n  }\n}\n\nexport default TrashNote;\n"]},"metadata":{},"sourceType":"module"}