{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport \"../Cssfile/ResetPassword.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nexport class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(state => ({\n        showPassword: !state.showPassword\n      }));\n    };\n\n    this.resetpasswordhandle = () => {\n      console.log(\"ddgfgge\");\n      let error = this.state.error;\n      let Passwordvalid = this.state.password;\n      let confirmpassword = this.state.confirmpassword;\n      let isvalid = this.state.isvalid;\n\n      if (Passwordvalid === \"\") {\n        isvalid = false;\n        error[\"password\"] = \"password is required\";\n      }\n\n      if (Passwordvalid === \"\") {\n        isvalid = false;\n        error[\"confirmpassword\"] = \"confirm password is required\";\n      }\n\n      this.setState({\n        error: error\n      });\n      return isvalid;\n    };\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(this.state.password);\n    };\n\n    this.handlecfrmpasswordChange = event => {\n      this.setState({\n        confirmpassword: event.target.value\n      });\n      console.log(this.state.confirmpassword);\n    };\n\n    this.handleresetpasswordChange = () => {\n      if (this.resetpasswordhandle() == true) {\n        console.log(\"handleregister\");\n\n        if (this.state.password != this.state.confPassword) {\n          alert(\"both passwords should be same\");\n        } else {}\n      }\n    };\n\n    this.state = {\n      showPassword: false,\n      password: \"\",\n      confirmpassword: \"\",\n      isvalid: true,\n      error: {}\n    };\n    this.resetpasswordhandle = this.resetpasswordhandle.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"resetPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fundoo1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"f\"), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"u\"), React.createElement(\"span\", {\n      style: {\n        color: \"orange\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"n\"), React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"span\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"o\"), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"o\")), React.createElement(\"div\", {\n      className: \"resetPasswordtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"resetpassword\"))), React.createElement(\"div\", {\n      className: \"resetpassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-adornment-password\",\n      margin: \"dense\",\n      name: \"password\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange(\"password\"),\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          sytle: {\n            width: \"1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        })))\n      },\n      onClick: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.error.Passwordvalid), React.createElement(\"div\", {\n      className: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      margin: \"dense\",\n      name: \"confirmpassword\",\n      size: \"small\",\n      id: \"outlined-adornment-password\",\n      variant: \"outlined\",\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \"confirm\",\n      value: this.state.confirmpassword,\n      onChange: this.handleChange(\"password\"),\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          sytle: {\n            width: \"1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        })))\n      },\n      onClick: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.error.confirmpassword), React.createElement(\"div\", {\n      className: \"Resetbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleresetpasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"submit\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\nexport default ResetPassword;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/ResetPassword.js"],"names":["React","Component","TextField","Button","makeStyles","IconButton","Input","FilledInput","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","ResetPassword","constructor","props","handleChange","prop","event","setState","target","value","handleClickShowPassword","state","showPassword","resetpasswordhandle","console","log","error","Passwordvalid","password","confirmpassword","isvalid","handlePasswordChange","handlecfrmpasswordChange","handleresetpasswordChange","confPassword","alert","bind","render","color","endAdornment","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,8BAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAO,MAAMC,aAAN,SAA4Bd,SAA5B,CAAsC;AAS3Ce,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SARnBC,YAQmB,GARJC,IAAI,IAAIC,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AAAE,SAACF,IAAD,GAAQC,KAAK,CAACE,MAAN,CAAaC;AAAvB,OAAd;AACD,KAMkB;;AAAA,SAJnBC,uBAImB,GAJO,MAAM;AAC9B,WAAKH,QAAL,CAAcI,KAAK,KAAK;AAAEC,QAAAA,YAAY,EAAE,CAACD,KAAK,CAACC;AAAvB,OAAL,CAAnB;AACD,KAEkB;;AAAA,SAanBC,mBAbmB,GAaE,MAAI;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,UAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAvB;AACA,UAAIC,aAAa,GAAG,KAAKN,KAAL,CAAWO,QAA/B;AACA,UAAIC,eAAe,GAAG,KAAKR,KAAL,CAAWQ,eAAjC;AACA,UAAIC,OAAO,GAAG,KAAKT,KAAL,CAAWS,OAAzB;;AACA,UAAIH,aAAa,KAAK,EAAtB,EAA0B;AACxBG,QAAAA,OAAO,GAAG,KAAV;AACAJ,QAAAA,KAAK,CAAC,UAAD,CAAL,GAAoB,sBAApB;AACD;;AAED,UAAIC,aAAa,KAAK,EAAtB,EAA0B;AACxBG,QAAAA,OAAO,GAAG,KAAV;AACAJ,QAAAA,KAAK,CAAC,iBAAD,CAAL,GAA2B,8BAA3B;AACD;;AACD,WAAKT,QAAL,CAAc;AACZS,QAAAA,KAAK,EAAEA;AADK,OAAd;AAGA,aAAOI,OAAP;AACD,KAjCkB;;AAAA,SAmCnBC,oBAnCmB,GAmCIf,KAAK,IAAI;AAC9B,WAAKC,QAAL,CAAc;AACZW,QAAAA,QAAQ,EAAEZ,KAAK,CAACE,MAAN,CAAaC;AADX,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWO,QAAvB;AACD,KAxCkB;;AAAA,SA0CnBI,wBA1CmB,GA0CQhB,KAAK,IAAI;AAClC,WAAKC,QAAL,CAAc;AACZY,QAAAA,eAAe,EAAEb,KAAK,CAACE,MAAN,CAAaC;AADlB,OAAd;AAGAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWQ,eAAvB;AACD,KA/CkB;;AAAA,SAiDnBI,yBAjDmB,GAiDS,MAAM;AAChC,UAAI,KAAKV,mBAAL,MAA8B,IAAlC,EAAwC;AAEtCC,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AAEA,YAAI,KAAKJ,KAAL,CAAWO,QAAX,IAAuB,KAAKP,KAAL,CAAWa,YAAtC,EAAoD;AAClDC,UAAAA,KAAK,CAAC,+BAAD,CAAL;AACD,SAFD,MAEO,CACN;AACF;AACF,KA3DkB;;AAGjB,SAAKd,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,KADH;AAEXM,MAAAA,QAAQ,EAAC,EAFE;AAGXC,MAAAA,eAAe,EAAC,EAHL;AAIXC,MAAAA,OAAO,EAAC,IAJG;AAKXJ,MAAAA,KAAK,EAAC;AALK,KAAb;AAQA,SAAKH,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBa,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAmDDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,EAIE;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAJF,EAKE;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALF,EAME;AAAM,MAAA,KAAK,EAAE;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WANF,CADF,EASE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CATF,EAcE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,6BADL;AAEE,MAAA,MAAM,EAAC,OAFT;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,OAAO,EAAC,UALV;AAME,MAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,YAAX,GAA0B,MAA1B,GAAmC,UAN3C;AAOE,MAAA,KAAK,EAAC,UAPR;AAQE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWO,QARpB;AASE,MAAA,QAAQ,EAAE,KAAKd,YAAL,CAAkB,UAAlB,CATZ;AAUE,MAAA,UAAU,EAAE;AACVyB,QAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAA+B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,wBAAW,4BADb;AAEE,UAAA,OAAO,EAAE,KAAKpB,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,KAAKC,KAAL,CAAWC,YAAX,GACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAGC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,CADF;AAFQ,OAVd;AA0BE,MAAA,OAAO,EAAE,KAAKS,oBA1BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,EA4CE;AAAM,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKjB,KAAL,CAAWK,KAAX,CAAiBC,aAAjD,CA5CF,EA6CE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAC,OADT;AAEE,MAAA,IAAI,EAAC,iBAFP;AAGE,MAAA,IAAI,EAAC,OAHP;AAIE,MAAA,EAAE,EAAC,6BAJL;AAKE,MAAA,OAAO,EAAC,UALV;AAME,MAAA,IAAI,EAAE,KAAKN,KAAL,CAAWC,YAAX,GAA0B,MAA1B,GAAmC,UAN3C;AAOE,MAAA,KAAK,EAAC,SAPR;AAQE,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWQ,eARpB;AASE,MAAA,QAAQ,EAAE,KAAKf,YAAL,CAAkB,UAAlB,CATZ;AAUE,MAAA,UAAU,EAAE;AACVyB,QAAAA,YAAY,EACV,oBAAC,cAAD;AAAgB,UAAA,QAAQ,EAAC,KAAzB;AAA+B,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,UAAD;AACE,wBAAW,4BADb;AAEE,UAAA,OAAO,EAAE,KAAKpB,uBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,KAAKC,KAAL,CAAWC,YAAX,GACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,GAGC,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,CADF;AAFQ,OAVd;AA0BE,MAAA,OAAO,EAAE,KAAKS,oBA1BhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA7CF,EA2EE;AAAM,MAAA,KAAK,EAAE;AAAEO,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgC,KAAKjB,KAAL,CAAWK,KAAX,CAAiBG,eAAjD,CA3EF,EA6EE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAC,WADV;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,OAAO,EAAE,KAAKI,yBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAQE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CA7EF,CADF;AA4FD;;AArK0C;AAwK7C,eAAetB,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Cssfile/ResetPassword.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Input from \"@material-ui/core/Input\";\nimport FilledInput from \"@material-ui/core/FilledInput\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nexport class ResetPassword extends Component {\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPassword: false,\n      password:\"\",\n      confirmpassword:\"\",\n      isvalid:true,\n      error:{}\n    };\n\n    this.resetpasswordhandle = this.resetpasswordhandle.bind(this);\n  }\n  resetpasswordhandle =()=>{\n    console.log(\"ddgfgge\");\n    \n    let error = this.state.error;\n    let Passwordvalid = this.state.password;\n    let confirmpassword = this.state.confirmpassword;\n    let isvalid = this.state.isvalid;\n    if (Passwordvalid === \"\") {\n      isvalid = false;\n      error[\"password\"] = \"password is required\";\n    }\n\n    if (Passwordvalid === \"\") {\n      isvalid = false;\n      error[\"confirmpassword\"] = \"confirm password is required\";\n    }\n    this.setState({\n      error: error\n    });\n    return isvalid;\n  };\n\n  handlePasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n    console.log(this.state.password);\n  };\n\n  handlecfrmpasswordChange = event => {\n    this.setState({\n      confirmpassword: event.target.value\n    });\n    console.log(this.state.confirmpassword);\n  };\n  \n  handleresetpasswordChange = () => {\n    if (this.resetpasswordhandle() == true) {\n\n      console.log(\"handleregister\");\n\n      if (this.state.password != this.state.confPassword) {\n        alert(\"both passwords should be same\");\n      } else {\n      }\n    }\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"resetPassword\">\n        <div className=\"fundoo1\">\n          <span style={{ color: \"blue\" }}>f</span>\n          <span style={{ color: \"red\" }}>u</span>\n          <span style={{ color: \"orange\" }}>n</span>\n          <span style={{ color: \"blue\" }}>d</span>\n          <span style={{ color: \"green\" }}>o</span>\n          <span style={{ color: \"red\" }}>o</span>\n        </div>\n        <div className=\"resetPasswordtitle\">\n          <h2>\n            <b>resetpassword</b>\n          </h2>\n        </div>\n        <div className=\"resetpassword1\">\n          <TextField\n            id=\"outlined-adornment-password\"\n            margin=\"dense\"\n            name=\"password\"\n            size=\"small\"\n            variant=\"outlined\"\n            type={this.state.showPassword ? \"text\" : \"password\"}\n            label=\"Password\"\n            value={this.state.password}\n            onChange={this.handleChange(\"password\")}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\" sytle={{ width: \"1px\" }}>\n                  <IconButton\n                    aria-label=\"Toggle password visibility\"\n                    onClick={this.handleClickShowPassword}\n                  >\n                    {this.state.showPassword ? (\n                      <VisibilityOff />\n                    ) : (\n                      <Visibility />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            onClick={this.handlePasswordChange}\n          />\n        </div>\n        <span style={{ color: \"red\" }}>{this.state.error.Passwordvalid}</span>\n        <div className=\"password2\">\n          <TextField\n            margin=\"dense\"\n            name=\"confirmpassword\"\n            size=\"small\"\n            id=\"outlined-adornment-password\"\n            variant=\"outlined\"\n            type={this.state.showPassword ? \"text\" : \"password\"}\n            label=\"confirm\"\n            value={this.state.confirmpassword}\n            onChange={this.handleChange(\"password\")}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\" sytle={{ width: \"1px\" }}>\n                  <IconButton\n                    aria-label=\"Toggle password visibility\"\n                    onClick={this.handleClickShowPassword}\n                  >\n                    {this.state.showPassword ? (\n                      <VisibilityOff />\n                    ) : (\n                      <Visibility />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            onClick={this.handlePasswordChange}\n          />\n        </div>\n        <span style={{ color: \"red\" }}>{this.state.error.confirmpassword}</span>\n\n        <div className=\"Resetbutton\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleresetpasswordChange}\n          >\n            submit\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}