{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/SetColor.js\";\nimport React, { Component } from \"react\";\nexport class SetColor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      \"aria-owns\": open ? 'mouse-over-popover' : undefined,\n      \"aria-haspopup\": \"true\",\n      onMouseEnter: this.handlePopoverOpen,\n      onMouseLeave: this.handlePopoverClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Hover with a Popover.\"), React.createElement(Popover, {\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      onClose: this.handlePopoverClose,\n      disableRestoreFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"I use Popover.\"))));\n  }\n\n}\nexport default SetColor;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/SetColor.js"],"names":["React","Component","SetColor","constructor","props","state","render","open","undefined","handlePopoverOpen","handlePopoverClose","classes","popover","paper","anchorEl","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHN,EASO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACV,oBAAC,UAAD;AACE,mBAAWC,IAAI,GAAG,oBAAH,GAA0BC,SAD3C;AAEE,uBAAc,MAFhB;AAGE,MAAA,YAAY,EAAE,KAAKC,iBAHrB;AAIE,MAAA,YAAY,EAAE,KAAKC,kBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADU,EASV,oBAAC,OAAD;AACE,MAAA,EAAE,EAAC,oBADL;AAEE,MAAA,SAAS,EAAEC,OAAO,CAACC,OAFrB;AAGE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAEF,OAAO,CAACE;AADR,OAHX;AAME,MAAA,IAAI,EAAEN,IANR;AAOE,MAAA,QAAQ,EAAEO,QAPZ;AAQE,MAAA,YAAY,EAAE;AACZC,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OARhB;AAYE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OAZnB;AAgBE,MAAA,OAAO,EAAE,KAAKN,kBAhBhB;AAiBE,MAAA,mBAAmB,MAjBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAmBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAnBF,CATU,CATP,CAAP;AA0CD;;AAlDqC;AAqDxC,eAAeR,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nexport class SetColor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  render() {\n    return <div>\n\n                 \n                 <span>\n\n\n                 </span>\n\n                 \n                  <div>\n        <Typography\n          aria-owns={open ? 'mouse-over-popover' : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={this.handlePopoverOpen}\n          onMouseLeave={this.handlePopoverClose}\n        >\n          Hover with a Popover.\n        </Typography>\n        <Popover\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          classes={{\n            paper: classes.paper,\n          }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          onClose={this.handlePopoverClose}\n          disableRestoreFocus\n        >\n          <Typography>I use Popover.</Typography>\n        </Popover>\n      </div>\n\n    </div>;\n  }\n}\n\nexport default SetColor;\n"]},"metadata":{},"sourceType":"module"}