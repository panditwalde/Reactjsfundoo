{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/SetColor.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Card, Tooltip, DialogContent, Button, IconButton } from \"@material-ui/core\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport Fab from '@material-ui/core/Fab';\nimport { typography } from \"@material-ui/system\";\n\nconst styles = theme => ({\n  popover: {\n    pointerEvents: \"none\"\n  },\n  paper: {\n    padding: theme.spacing.unit\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  input: {\n    display: 'none'\n  }\n});\n\nconst colorsPallete = [{\n  colorName: \"White\",\n  colorCode: \"#ffffff\"\n}, {\n  colorName: \"Red\",\n  colorCode: \"#ea2e2e\"\n}, {\n  colorName: \"Orange\",\n  colorCode: \"#ffb600\"\n}, {\n  colorName: \"Yellow\",\n  colorCode: \"#e1e82e\"\n}, {\n  colorName: \"Green\",\n  colorCode: \"#ccff90\"\n}, {\n  colorName: \"Teal\",\n  colorCode: \"#a7ffeb\"\n}, {\n  colorName: \"Blue\",\n  colorCode: \"#281bd6\"\n}, {\n  colorName: \"Dark blue\",\n  colorCode: \"#aecbfa\"\n}, {\n  colorName: \"Purple\",\n  colorCode: \"#d7adfb\"\n}, {\n  colorName: \"Pink\",\n  colorCode: \"#fdcfe8\"\n}, {\n  colorName: \"Dark Brown\",\n  colorCode: \"#e6c9a7\"\n}, {\n  colorName: \"Gray\",\n  colorCode: \"#e8eaed\"\n}];\n\nclass MouseOverPopover extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handlePopoverOpen = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handlePopoverClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      \"aria-owns\": open ? \"mouse-over-popover\" : undefined,\n      \"aria-haspopup\": \"true\",\n      onMouseEnter: this.handlePopoverOpen,\n      onMouseLeave: this.handlePopoverClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \" Change color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(PaletteOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(Popover, {\n      style: {\n        top: '-14%'\n      },\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      onClose: this.handlePopoverClose,\n      disableRestoreFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        margin: \"auto\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, colorsPallete.map(usercolor => React.createElement(IconButton, {\n      sty: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nMouseOverPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MouseOverPopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/SetColor.js"],"names":["React","PropTypes","Popover","Typography","withStyles","Card","Tooltip","DialogContent","Button","IconButton","PaletteOutlinedIcon","Fab","typography","styles","theme","popover","pointerEvents","paper","padding","spacing","unit","button","margin","input","display","colorsPallete","colorName","colorCode","MouseOverPopover","Component","state","anchorEl","handlePopoverOpen","event","setState","currentTarget","handlePopoverClose","render","classes","props","open","Boolean","undefined","top","vertical","horizontal","position","flexWrap","flexDirection","map","usercolor","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Card, Tooltip, DialogContent, Button, IconButton } from \"@material-ui/core\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\n\nimport Fab from '@material-ui/core/Fab';\nimport { typography } from \"@material-ui/system\";\n\nconst styles = theme => ({\n  popover: {\n    pointerEvents: \"none\"\n  },\n  paper: {\n    padding: theme.spacing.unit\n  },\n  button: {\n    margin: theme.spacing.unit,\n  },\n  input: {\n    display: 'none',\n  },\n});\n\n\n\n\nconst colorsPallete = [\n  {\n  colorName: \"White\",\n  colorCode: \"#ffffff\"\n  },\n  {\n  colorName: \"Red\",\n  colorCode: \"#ea2e2e\"\n  },\n  {\n  colorName: \"Orange\",\n  colorCode: \"#ffb600\"\n  },\n  {\n  colorName: \"Yellow\",\n  colorCode: \"#e1e82e\"\n  },\n  {\n  colorName: \"Green\",\n  colorCode: \"#ccff90\"\n  },\n  {\n  colorName: \"Teal\",\n  colorCode: \"#a7ffeb\"\n  },\n  {\n  colorName: \"Blue\",\n  colorCode: \"#281bd6\"\n  },\n  {\n  colorName: \"Dark blue\",\n  colorCode: \"#aecbfa\"\n  },\n  {\n  colorName: \"Purple\",\n  colorCode: \"#d7adfb\"\n  },\n  {\n  colorName: \"Pink\",\n  colorCode: \"#fdcfe8\"\n  },\n  {\n  colorName: \"Dark Brown\",\n  colorCode: \"#e6c9a7\"\n  },\n  {\n  colorName: \"Gray\",\n  colorCode: \"#e8eaed\"\n  }\n  ];\n\nclass MouseOverPopover extends React.Component {\n\n \n  state = {\n    anchorEl: null\n  };\n\n  handlePopoverOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handlePopoverClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <Typography\n          aria-owns={open ? \"mouse-over-popover\" : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={this.handlePopoverOpen}\n          onMouseLeave={this.handlePopoverClose}\n        >\n          <Tooltip title=\" Change color\">\n                      <PaletteOutlinedIcon />\n                    </Tooltip>\n        </Typography>\n        <Popover  style={{top:'-14%'}}\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          classes={{\n            paper: classes.paper\n          }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n          }}\n          onClose={this.handlePopoverClose}\n          disableRestoreFocus\n        >\n        <div\n          style={{ \n          position: \"relative\",\n          margin: \"auto\",\n          display: \"flex\",\n          flexWrap: \"wrap\",\n          flexDirection: \"row\",}}\n        > \n              { colorsPallete.map(usercolor => (\n\n                  <IconButton\n                   sty\n                  >\n\n                  </IconButton>\n                ))}\n      \n        </div>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nMouseOverPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(MouseOverPopover);\n"]},"metadata":{},"sourceType":"module"}