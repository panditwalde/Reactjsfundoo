{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/AddArchive.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport { addInArchive } from \"./Service\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { Redirect } from 'react-router-dom';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { ADD_ARCHIVE } from \"../Redux/actionType\";\n\nconst styles = theme => ({\n  popover: {\n    pointerEvents: \"none\"\n  },\n  paper: {\n    padding: theme.spacing.unit\n  }\n});\n\nclass MouseOverPopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handlePopoverOpen = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose1 = () => {\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.handlePopoverClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleaddArchiveChange = () => {\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.props.propsarchivenote;\n      this.props.onSelectArchive(true);\n      addInArchive(noteid, token).then(Response => {\n        this.props.refresh();\n        console.log(\"note is archive\");\n        this.setState({\n          opensnackbar: true\n        });\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn = true;\n\n    if (_token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      loggedIn,\n      opensnackbar: false\n    };\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      className: this.props.view ? null : \"footerpadding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \" Archive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(ArchiveOutlinedIcon, {\n      onClick: this.handleaddArchiveChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose1,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Note Archived\"),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nMouseOverPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    view: state.view\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addArchive: () => dispatch(ADD_ARCHIVE())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MouseOverPopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/AddArchive.js"],"names":["React","PropTypes","Typography","withStyles","ArchiveOutlinedIcon","addInArchive","Tooltip","Redirect","Snackbar","CloseIcon","Button","Divider","IconButton","connect","ADD_ARCHIVE","styles","theme","popover","pointerEvents","paper","padding","spacing","unit","MouseOverPopover","Component","constructor","props","state","anchorEl","handlePopoverOpen","event","setState","currentTarget","handleClose1","opensnackbar","handlePopoverClose","handleaddArchiveChange","token","localStorage","getItem","noteid","propsarchivenote","onSelectArchive","then","Response","refresh","console","log","catch","err","loggedIn","render","open","Boolean","view","vertical","horizontal","propTypes","classes","object","isRequired","mapStateToProps","mapDispatchToProps","dispatch","addArchive"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport { addInArchive } from \"./Service\";\nimport { Tooltip } from \"@material-ui/core\";\nimport {Redirect} from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { ADD_ARCHIVE } from \"../Redux/actionType\";\n\nconst styles = theme => ({\n  popover: {\n    pointerEvents: \"none\"\n  },\n  paper: {\n    padding: theme.spacing.unit\n  }\n});\n\nclass MouseOverPopover extends React.Component {\n  constructor(props) {\n    super(props)\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n    this.state = {\n      loggedIn,\n      opensnackbar:false,\n\n    }\n  }\n  \n  state = {\n    anchorEl: null\n  };\n\n  handlePopoverOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose1 = () => {\n    this.setState({\n      opensnackbar:false    });\n  };\n  handlePopoverClose = () => {\n    this.setState({ anchorEl: null });\n  };\n  handleaddArchiveChange = () => {\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.props.propsarchivenote;\n    this.props.onSelectArchive(true);\n\n\n    addInArchive(noteid, token)\n      .then(Response => {\n        this.props.refresh()\n       \n\n        console.log(\"note is archive\");\n        this.setState({opensnackbar:true})\n\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  render() {\n\n    \n    if (this.state.loggedIn === false) {\n\n      return <Redirect to=\"/login\"/>  }\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div className= {this.props.view ?(null):(\"footerpadding\")} >\n        {/* <Typography\n          aria-owns={open ? \"mouse-over-popover\" : undefined}\n          aria-haspopup=\"true\"\n          onMouseEnter={this.handlePopoverOpen}\n          onMouseLeave={this.handlePopoverClose}\n         \n        > */}\n\n            <Tooltip title=\" Archive\">\n              <ArchiveOutlinedIcon  onClick={this.handleaddArchiveChange}    />\n            </Tooltip>\n        {/* </Typography> */}\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose1}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Note Archived</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose1}>\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nMouseOverPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    view: state.view\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addArchive: () => dispatch(ADD_ARCHIVE())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MouseOverPopover);\n"]},"metadata":{},"sourceType":"module"}