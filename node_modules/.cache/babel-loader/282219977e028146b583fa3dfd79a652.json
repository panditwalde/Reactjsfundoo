{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Addlabel.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.HandlelablevalueChange = event => {\n      this.setState({\n        labelvalue: event.target.value\n      });\n      let noteid = this.props.noteid2;\n      console.log(\"d\" + noteid);\n    };\n\n    this.HandlelabelAddChange = () => {\n      console.log(\"addddggg\");\n      let token = localStorage.getItem(\"Token\");\n    };\n\n    this.state = {\n      labelvalue: \"\"\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"aria-owns\": open ? \"simple-popper\" : undefined,\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \" \", \"Add label\"), React.createElement(Popover, {\n      style: {\n        left: \"165.492px\"\n      },\n      id: \"simple-popper\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Label note\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Enter label name\",\n      onChange: this.HandlelablevalueChange,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      control: React.createElement(Checkbox, {\n        onChange: this.handleChange,\n        value: \"antoine\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), this.state.labelvalue !== \"\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.HandlelabelAddChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(AddRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Create\", React.createElement(\"b\", {\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"\\\"\", this.state.labelvalue, \"\\\"\"))) : null)));\n  }\n\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimplePopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Addlabel.js"],"names":["React","PropTypes","FormGroup","withStyles","Typography","Button","Popover","Input","InputLabel","InputAdornment","FormControl","TextField","Grid","AccountCircle","SearchIcon","AddRoundedIcon","Divider","IconButton","FormLabel","FormControlLabel","FormHelperText","Checkbox","styles","theme","typography","margin","spacing","unit","SimplePopover","Component","constructor","props","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","HandlelablevalueChange","labelvalue","target","value","noteid","noteid2","console","log","HandlelabelAddChange","token","localStorage","getItem","render","classes","open","Boolean","undefined","left","vertical","horizontal","disableUnderline","handleChange","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Divider, IconButton } from \"@material-ui/core\";\n\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      labelvalue: \"\"\n    };\n  }\n\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n  HandlelablevalueChange = event => {\n    this.setState({\n      labelvalue: event.target.value\n    });\n    let noteid = this.props.noteid2;\n    console.log(\"d\" + noteid);\n  };\n  HandlelabelAddChange = () => {\n    console.log(\"addddggg\");\n\n    let token = localStorage.getItem(\"Token\");\n  };\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <div\n          aria-owns={open ? \"simple-popper\" : undefined}\n          onClick={this.handleClick}\n        >\n          {\" \"}\n          Add label\n        </div>\n        <Popover\n          style={{ left: \"165.492px\" }}\n          id=\"simple-popper\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          {/* <Typography className={classes.typography}> */}\n          <div>\n            <div>Label note</div>\n            <div>\n              <FormControl className={classes.margin}>\n                <Input\n                  placeholder=\"Enter label name\"\n                  onChange={this.HandlelablevalueChange}\n                  fullWidth\n                  margin=\"normal\"\n                  InputProps={{\n                    disableUnderline: true\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            </div>\n            <div>\n              <FormGroup>\n                <FormControlLabel\n                  control={\n                    <Checkbox onChange={this.handleChange} value=\"antoine\" />\n                  }\n                />\n              </FormGroup>\n            </div>\n            <Divider />\n            {this.state.labelvalue !== \"\" ? (\n              <div>\n                <IconButton onClick={this.HandlelabelAddChange}>\n                  <AddRoundedIcon />\n                </IconButton>\n                <span>\n                  Create\n                  <b\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  >\n                    \"{this.state.labelvalue}\"\n                  </b>\n                </span>\n              </div>\n            ) : null}\n          </div>\n          {/* </Typography> */}\n        </Popover>\n      </div>\n    );\n  }\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}