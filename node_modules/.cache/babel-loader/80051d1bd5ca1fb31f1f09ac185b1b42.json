{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js\";\nimport React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    view: state.view\n  };\n};\n\nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n    this.queue = [];\n\n    this.handlesetArchive = archive => {};\n\n    this.processQueue = () => {\n      if (this.queue.length > 0) {\n        this.setState({\n          messageInfo: this.queue.shift(),\n          opensnackbar: true\n        });\n      }\n    };\n\n    this.handleExited = () => {\n      this.processQueue();\n    };\n\n    this.handleReminder = reminder => {};\n\n    this.handleUpdatetitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n      console.log(\"ddd\" + this.state.title);\n    };\n\n    this.handleUpdatedescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n      console.log(this.state.description);\n    };\n\n    this.handleClose1 = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.handleClose = () => {\n      console.log(\"close \");\n      this.setState({\n        dialogOpen: false\n      });\n      let updatenote = {};\n      console.log(this.state.title);\n      console.log(this.state.description);\n      updatenote.title = this.state.title;\n      updatenote.description = this.state.description;\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.state.notearr.id;\n      editNote(updatenote, noteid, token).then(Response => {\n        let message = \"Note update successfully \";\n        console.log(\"update note\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n      }).catch(err => {\n        console.log(\"not update note\");\n      });\n    };\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === false && element.archive === false && element.pin === false) {\n            array.push(element);\n          }\n\n          console.log(array);\n\n          if (element.archive === false && element.trash === false && element.pin === true) {\n            array1.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n        console.log(\"a\" + array);\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleDialogOpen = note => {\n      console.log(note);\n      this.setState({\n        dialogOpen: !this.state.dialogOpen,\n        notearr: note\n      });\n    };\n\n    this.handlesetColor = color => {};\n\n    this.handlepinunpin = noteid => {\n      console.log(\"dd\");\n      let message = \"pin change\";\n      let token = localStorage.getItem(\"Token\");\n      pinUnpin(token, noteid).then(Response => {\n        console.log(\"pinunpin done\");\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.getAllNotes();\n        this.setState({\n          opensnackbar: true\n        });\n      }).catch(err => {\n        console.log(\"not done error\");\n      });\n    };\n\n    this.handleDelete = noteid => {\n      let message = \"remove reminder\";\n      let token = localStorage.getItem(\"Token\");\n      removeReminder(noteid, token).then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.setState({\n          opensnackbar: true\n        });\n      }).catch({// console.log(\"fail..\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn = true;\n\n    if (_token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnackbar: false,\n      messageInfo: {}\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      });\n    }\n\n    const messageInfo = this.state.messageInfo;\n    console.log(\"color\" + this.props.color);\n    console.log(\"archive\" + this.props.archive);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(CreateNote, {\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    })), this.state.allNote.length !== 0 || this.state.pinUnpinArray.length !== 0 ? null : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        opacity: \".3\",\n        width: '800px',\n        alignItems: \"center\",\n        paddingTop: \"19%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(EmojiObjectsOutlinedIcon, {\n      style: {\n        fontSize: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Your  notes appear here\"), \" \"), this.state.pinUnpinArray.length !== 0 ? React.createElement(\"div\", {\n      className: this.props.view ? \"listview\" : \"gridview1\",\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"8%\",\n        paddingLeft: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"PINNED\") : null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, this.state.pinUnpinArray.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"listview\" : \"gridview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"unpin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: '2%'\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.view ? \"footer1\" : \"footer2\" // style={{\n      //   justifyContent: \"flex-start\",\n      //   display: \"flex\",\n      //   padding: \"12px\",\n      //   paddingBottom: \"13px\"\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      className: this.props.view ? null : \"footerpadding\",\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      onSelectReminder: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      onSelectColor: this.handlesetColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      onSelectArchive: this.handlesetArchive,\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      onClick: () => this.handlepinunpin(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      onSelec: this.handlesetArchive,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435\n      },\n      __self: this\n    })))))))), this.state.pinUnpinArray.length !== 0 ? React.createElement(\"div\", {\n      className: this.props.view ? \"listview\" : \"gridview1\",\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"6%\",\n        paddingLeft: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"OTHERS\") : null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\",\n        paddingTop: \"6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, this.state.allNote.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"listview\" : \"gridview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: '2%'\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      style: {\n        paddingTop: '4%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.view ? \"footer1\" : \"footer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      onSelectReminder: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      onSelectColor: this.handlesetColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      onSelectArchive: this.handlesetArchive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    }))))))), React.createElement(Dialog, {\n      open: this.state.dialogOpen,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, this.state.notearr !== null ? React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"484px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: this.state.notearr.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatetitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatedescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }, this.state.notearr.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: this.state.notearr.reminder,\n      onDelete: () => this.handleDelete(this.state.notearr.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 715\n      },\n      __self: this\n    }, this.state.notearr.collabrators != null ? this.state.notearr.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 724\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 734\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      onSelectReminder: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: this.state.notearr.id,\n      propscollbratorid: this.state.notearr.collabrators !== null ? this.state.notearr.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      onSelectColor: this.handlesetColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 757\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      onSelectArchive: this.handlesetArchive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 762\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 768\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 769\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 774\n      },\n      __self: this\n    }, \"close\"))))) : null)), React.createElement(Snackbar, {\n      key: messageInfo.key,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      onExited: this.handleExited,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797\n        },\n        __self: this\n      }, messageInfo.message),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default connect(mapStateToProps)(Displaynotes);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js"],"names":["React","Component","Card","Tooltip","Button","Snackbar","Typography","AddAlertOutlinedIcon","PaletteOutlinedIcon","Dialog","DisplayAllNotes","editNote","removeReminder","pinUnpin","Showmoreoption","EmojiObjectsOutlinedIcon","AddArchive","TextField","SetColor","AddReminder","Chip","CreateNote","Collaborator","AccountCircleIcon","Redirect","withStyles","IconButton","CloseIcon","connect","mapStateToProps","state","view","Displaynotes","constructor","props","queue","handlesetArchive","archive","processQueue","length","setState","messageInfo","shift","opensnackbar","handleExited","handleReminder","reminder","handleUpdatetitle","event","title","target","value","console","log","handleUpdatedescription","description","handleClose1","reason","handleClose","dialogOpen","updatenote","token","localStorage","getItem","noteid","notearr","id","then","Response","message","getAllNotes","push","key","Date","getTime","catch","err","array","array1","data","forEach","element","trash","pin","allNote","pinUnpinArray","handleDialogOpen","note","handlesetColor","color","handlepinunpin","handleDelete","loggedIn","open","more","UNSAFE_componentWillMount","render","display","flexDirection","justifyContent","opacity","width","alignItems","paddingTop","fontSize","flexWrap","paddingLeft","map","padding","boxShadow","backgroundColor","borderRadius","margin","disableUnderline","collabrators","col","paddingBottom","vertical","horizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,QAAhC,EAA0CC,UAA1C,QAA4D,mBAA5D;AACA,OAAO,6BAAP;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,cAApC,EAAoDC,QAApD,QAAoE,WAApE;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,eAAe,GAAEC,KAAK,IAAE;AAC3B,SAAO;AACFC,IAAAA,IAAI,EAACD,KAAK,CAACC;AADT,GAAP;AAGF,CAJD;;AAMA,OAAO,MAAMC,YAAN,SAA2B/B,SAA3B,CAAqC;AAE1CgC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SADnBC,KACmB,GADX,EACW;;AAAA,SAwBnBC,gBAxBmB,GAwBAC,OAAO,IAAI,CAC7B,CAzBkB;;AAAA,SA2BnBC,YA3BmB,GA2BJ,MAAM;AACnB,UAAI,KAAKH,KAAL,CAAWI,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAKC,QAAL,CAAc;AACZC,UAAAA,WAAW,EAAE,KAAKN,KAAL,CAAWO,KAAX,EADD;AAEZC,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KAlCkB;;AAAA,SAmCnBC,YAnCmB,GAmCJ,MAAM;AACnB,WAAKN,YAAL;AACD,KArCkB;;AAAA,SAuCnBO,cAvCmB,GAuCFC,QAAQ,IAAI,CAC5B,CAxCkB;;AAAA,SAyCnBC,iBAzCmB,GAyCCC,KAAK,IAAI;AAC3B,WAAKR,QAAL,CAAc;AACZS,QAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaC;AADR,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,KAAKvB,KAAL,CAAWmB,KAA/B;AACD,KA9CkB;;AAAA,SAgDnBK,uBAhDmB,GAgDON,KAAK,IAAI;AACjC,WAAKR,QAAL,CAAc;AACZe,QAAAA,WAAW,EAAEP,KAAK,CAACE,MAAN,CAAaC;AADd,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWyB,WAAvB;AACD,KArDkB;;AAAA,SAuDnBC,YAvDmB,GAuDJ,CAACR,KAAD,EAAQS,MAAR,KAAmB;AAChC,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACD,WAAKjB,QAAL,CAAc;AAAEG,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,KA5DkB;;AAAA,SA6DnBe,WA7DmB,GA6DL,MAAM;AAClBN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAKb,QAAL,CAAc;AACZmB,QAAAA,UAAU,EAAE;AADA,OAAd;AAKA,UAAIC,UAAU,GAAG,EAAjB;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWmB,KAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAL,CAAWyB,WAAvB;AAEAK,MAAAA,UAAU,CAACX,KAAX,GAAmB,KAAKnB,KAAL,CAAWmB,KAA9B;AACAW,MAAAA,UAAU,CAACL,WAAX,GAAyB,KAAKzB,KAAL,CAAWyB,WAApC;AACA,UAAIM,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIC,MAAM,GAAG,KAAKlC,KAAL,CAAWmC,OAAX,CAAmBC,EAAhC;AAEAvD,MAAAA,QAAQ,CAACiD,UAAD,EAAaI,MAAb,EAAqBH,KAArB,CAAR,CACGM,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIC,OAAO,GAAC,2BAAZ;AACAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AAEA,aAAKiB,WAAL;AACA,aAAKnC,KAAL,CAAWoC,IAAX,CAAgB;AACdF,UAAAA,OADc;AAEdG,UAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFS,SAAhB;AAKD,OAXH,EAYGC,KAZH,CAYSC,GAAG,IAAI;AACZxB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OAdH;AAeD,KA5FkB;;AAAA,SA8FnBiB,WA9FmB,GA8FL,MAAM;AAClB,UAAIT,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAEArD,MAAAA,eAAe,CAACmD,KAAD,CAAf,CACGM,IADH,CACQC,QAAQ,IAAI;AAChB,YAAIS,KAAK,GAAG,EAAZ;AACA,YAAIC,MAAM,GAAG,EAAb;AACAV,QAAAA,QAAQ,CAACW,IAAT,CAAcA,IAAd,CAAmBC,OAAnB,CAA2BC,OAAO,IAAI;AACpC,cACEA,OAAO,CAACC,KAAR,KAAkB,KAAlB,IACAD,OAAO,CAAC5C,OAAR,KAAoB,KADpB,IAEA4C,OAAO,CAACE,GAAR,KAAgB,KAHlB,EAIE;AACAN,YAAAA,KAAK,CAACN,IAAN,CAAWU,OAAX;AACD;;AACD7B,UAAAA,OAAO,CAACC,GAAR,CAAYwB,KAAZ;;AACA,cACEI,OAAO,CAAC5C,OAAR,KAAoB,KAApB,IACA4C,OAAO,CAACC,KAAR,KAAkB,KADlB,IAEAD,OAAO,CAACE,GAAR,KAAgB,IAHlB,EAIE;AACAL,YAAAA,MAAM,CAACP,IAAP,CAAYU,OAAZ;AACD;AACF,SAhBD;AAiBA,aAAKzC,QAAL,CAAc;AACZ4C,UAAAA,OAAO,EAAEP;AADG,SAAd;AAIAzB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAMwB,KAAlB;AAEA,aAAKrC,QAAL,CAAc;AACZ6C,UAAAA,aAAa,EAAEP;AADH,SAAd;AAGA1B,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAM,KAAKvB,KAAL,CAAWuD,aAA7B;AACD,OA/BH,EAgCGV,KAhCH,CAgCSC,GAAG,IAAI;AACZxB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAlCH;AAmCD,KApIkB;;AAAA,SAsInBiC,gBAtImB,GAsIAC,IAAI,IAAI;AACzBnC,MAAAA,OAAO,CAACC,GAAR,CAAYkC,IAAZ;AACA,WAAK/C,QAAL,CAAc;AACZmB,QAAAA,UAAU,EAAE,CAAC,KAAK7B,KAAL,CAAW6B,UADZ;AAEZM,QAAAA,OAAO,EAAEsB;AAFG,OAAd;AAID,KA5IkB;;AAAA,SA8InBC,cA9ImB,GA8IFC,KAAK,IAAI,CAEzB,CAhJkB;;AAAA,SAkJnBC,cAlJmB,GAkJF1B,MAAM,IAAI;AACzBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AAGG,UAAIgB,OAAO,GAAC,YAAZ;AAEH,UAAIR,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAlD,MAAAA,QAAQ,CAACgD,KAAD,EAAQG,MAAR,CAAR,CACGG,IADH,CACQC,QAAQ,IAAI;AAChBhB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,aAAKlB,KAAL,CAAWoC,IAAX,CAAgB;AACdF,UAAAA,OADc;AAEdG,UAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFS,SAAhB;AAKA,aAAKJ,WAAL;AACA,aAAK9B,QAAL,CAAc;AAACG,UAAAA,YAAY,EAAC;AAAd,SAAd;AACD,OAVH,EAWGgC,KAXH,CAWSC,GAAG,IAAI;AACZxB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OAbH;AAcD,KAvKkB;;AAAA,SAyKnBsC,YAzKmB,GAyKJ3B,MAAM,IAAI;AAEvB,UAAIK,OAAO,GAAC,iBAAZ;AAEA,UAAIR,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACAnD,MAAAA,cAAc,CAACoD,MAAD,EAASH,KAAT,CAAd,CACGM,IADH,CACQC,QAAQ,IAAI;AAChBhB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAKiB,WAAL;AACA,aAAKnC,KAAL,CAAWoC,IAAX,CAAgB;AACdF,UAAAA,OADc;AAEdG,UAAAA,GAAG,EAAE,IAAIC,IAAJ,GAAWC,OAAX;AAFS,SAAhB;AAIA,aAAKlC,QAAL,CAAc;AAACG,UAAAA,YAAY,EAAC;AAAd,SAAd;AACD,OATH,EAUGgC,KAVH,CAUS,CACL;AADK,OAVT;AAaD,KA3LkB;;AAEjB,QAAId,MAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAI6B,QAAQ,GAAG,IAAf;;AACA,QAAI/B,MAAK,IAAI,IAAb,EAAmB;AACjB+B,MAAAA,QAAQ,GAAG,KAAX;AACD;;AAGD,SAAK9D,KAAL,GAAa;AACX+D,MAAAA,IAAI,EAAE,KADK;AAEXlC,MAAAA,UAAU,EAAE,KAFD;AAGXmC,MAAAA,IAAI,EAAE,KAHK;AAIXV,MAAAA,OAAO,EAAE,EAJE;AAKXnB,MAAAA,OAAO,EAAE,IALE;AAMXhB,MAAAA,KAAK,EAAE,EANI;AAOXM,MAAAA,WAAW,EAAE,EAPF;AAQX8B,MAAAA,aAAa,EAAE,EARJ;AASXO,MAAAA,QATW;AAUXjD,MAAAA,YAAY,EAAC,KAVF;AAWXF,MAAAA,WAAW,EAAE;AAXF,KAAb;AAaD;;AAuKDsD,EAAAA,yBAAyB,GAAG;AAC1B,SAAKzB,WAAL;AACD;;AAED0B,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKlE,KAAL,CAAW8D,QAAX,KAAwB,KAA5B,EAAmC;AAEjC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAiC;;AAH5B,UAIGnD,WAJH,GAImB,KAAKX,KAJxB,CAIGW,WAJH;AAMFW,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAQ,KAAKnB,KAAL,CAAWuD,KAA/B;AACArC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAU,KAAKnB,KAAL,CAAWG,OAAjC;AAGL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKiC,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAMG,KAAKxC,KAAL,CAAWsD,OAAX,CAAmB7C,MAAnB,KAA8B,CAA9B,IAAmC,KAAKT,KAAL,CAAWuD,aAAX,CAAyB9C,MAAzB,KAAkC,CAArE,GAAyE,IAAzE,GACG;AACE,MAAA,KAAK,EAAE;AACL0D,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,aAAa,EAAE,QAFV;AAGLC,QAAAA,cAAc,EAAE,QAHX;AAILC,QAAAA,OAAO,EAAE,IAJJ;AAKLC,QAAAA,KAAK,EAAC,OALD;AAMLC,QAAAA,UAAU,EAAE,QANP;AAOLC,QAAAA,UAAU,EAAE;AAPP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,wBAAD;AAA0B,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAW8D,GAX9D,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAZF,EAaP,GAbO,CAPN,EAwBG,KAAK1E,KAAL,CAAWuD,aAAX,CAAyB9C,MAAzB,KAAoC,CAApC,GACC;AAAK,MAAA,SAAS,EAAG,KAAKL,KAAL,CAAWH,IAAX,GAAkB,UAAlB,GAA+B,WAAhD;AACE,MAAA,KAAK,EAAE;AACLkE,QAAAA,OAAO,EAAE,MADJ;AAELI,QAAAA,KAAK,EAAE,OAFF;AAGLI,QAAAA,QAAQ,EAAE,MAHL;AAILP,QAAAA,aAAa,EAAE,KAJV;AAKLK,QAAAA,UAAU,EAAE,IALP;AAMLG,QAAAA,WAAW,EAAE;AANR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAaG,IArCN,EAuCE;AACE,MAAA,KAAK,EAAE;AACLT,QAAAA,OAAO,EAAE,MADJ;AAELI,QAAAA,KAAK,EAAE,OAFF;AAGLI,QAAAA,QAAQ,EAAE,MAHL;AAILP,QAAAA,aAAa,EAAE,KAJV;AAKLQ,QAAAA,WAAW,EAAE;AALR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAK5E,KAAL,CAAWuD,aAAX,CAAyBsB,GAAzB,CAA6BpB,IAAI,IAChC;AAAQ,MAAA,SAAS,EAAE,YAAnB;AAAiC,MAAA,KAAK,EAAE;AAAEqB,QAAAA,OAAO,EAAE;AAAX,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACA,MAAA,SAAS,EAAG,KAAK1E,KAAL,CAAWH,IAAX,GAAkB,UAAlB,GAA+B,UAD3C;AAEE,MAAA,KAAK,EAAE;AACL8E,QAAAA,SAAS,EAAE,6BADN;AAELC,QAAAA,eAAe,EAAEvB,IAAI,CAACE,KAFjB;AAGLsB,QAAAA,YAAY,EAAE;AAHT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AACE,MAAA,KAAK,EAAE;AACLd,QAAAA,OAAO,EAAE,MADJ;AAELE,QAAAA,cAAc,EAAE,eAFX;AAGLS,QAAAA,OAAO,EAAC;AAHH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKtB,gBAAL,CAAsBC,IAAtB,CADjB;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,KAAK,EAAEzB,IAAI,CAACtC,KAJd;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,MANX;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,UAAU,EAAE;AACVgE,QAAAA,gBAAgB,EAAE;AADR,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EAsBE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKvB,cAAL,CAAoBH,IAAI,CAACrB,EAAzB,CAFjB;AAGE,MAAA,KAAK,EAAE;AAACqC,QAAAA,UAAU,EAAC;AAAZ,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,CAAC,EAAC,4EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CALF,CAtBF,CARF,EAmDE;AACE,MAAA,KAAK,EAAE;AACLJ,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLW,QAAAA,OAAO,EAAC;AAHH,OADT;AAME,MAAA,OAAO,EAAE,MAAM,KAAKtB,gBAAL,CAAsBC,IAAtB,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,GARH,EASE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,KAAK,EAAEzB,IAAI,CAAChC,WAHd;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACV0D,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CAnDF,EAwEE;AACE,MAAA,KAAK,EAAE;AACLd,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGX,IAAI,CAACzC,QAAL,IAAiB,IAAjB,GACC;AACE,MAAA,KAAK,EAAE;AACLqD,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEa,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,KAAK,EAAEvB,IAAI,CAACzC,QAFd;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAK6C,YAAL,CAAkBJ,IAAI,CAACrB,EAAvB,CAHlB;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAcG,IArBN,EAsBE;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLS,QAAAA,WAAW,EAAE;AAHR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGnB,IAAI,CAAC2B,YAAL,IAAqB,IAArB,GACG3B,IAAI,CAAC2B,YAAL,CAAkBP,GAAlB,CAAsBQ,GAAG,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADH,GAQG,IAfN,CAtBF,CAxEF,EAiHE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAG,KAAKjF,KAAL,CAAWH,IAAX,GAAkB,SAAlB,GAA8B,SAAhD,CAEE;AACA;AACA;AACA;AACA;AACA;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,WAAD;AACG,MAAA,SAAS,EAAG,KAAKG,KAAL,CAAWH,IAAX,GAAkB,IAAlB,GAAyB,eADxC;AAEE,MAAA,iBAAiB,EAAEwD,IAAI,CAACrB,EAF1B;AAGE,MAAA,OAAO,EAAE,KAAKI,WAHhB;AAIE,MAAA,gBAAgB,EAAE,KAAKzB,cAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAeE,oBAAC,YAAD;AACE,MAAA,iBAAiB,EAAE0C,IAAI,CAACrB,EAD1B;AAEE,MAAA,iBAAiB,EACfqB,IAAI,CAAC2B,YAAL,KAAsB,IAAtB,GAA6B3B,IAAI,CAAC2B,YAAlC,GAAiD,IAHrD;AAKE,MAAA,OAAO,EAAE,KAAK5C,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAuBE,oBAAC,QAAD;AACE,MAAA,cAAc,EAAEiB,IAAI,CAACrB,EADvB;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,MAAA,aAAa,EAAE,KAAKkB,cAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,EA4BE,oBAAC,UAAD;AACA,MAAA,eAAe,EAAE,KAAKpD,gBADtB;AAEE,MAAA,gBAAgB,EAAEmD,IAAI,CAACrB,EAFzB;AAGE,MAAA,OAAO,EAAE,KAAKI,WAHhB;AAIE,MAAA,OAAO,EAAE,MAAM,KAAKoB,cAAL,CAAoBH,IAAI,CAACrB,EAAzB,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BF,EAiCE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAEqB,IAAI,CAACrB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAK9B,gBAFhB;AAGE,MAAA,OAAO,EAAE,KAAKkC,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjCF,CADF,CAjHF,CADF,CADD,CATH,CAvCF,EAkNG,KAAKxC,KAAL,CAAWuD,aAAX,CAAyB9C,MAAzB,KAAoC,CAApC,GACC;AAAK,MAAA,SAAS,EAAG,KAAKL,KAAL,CAAWH,IAAX,GAAkB,UAAlB,GAA+B,WAAhD;AACE,MAAA,KAAK,EAAE;AACLkE,QAAAA,OAAO,EAAE,MADJ;AAELI,QAAAA,KAAK,EAAE,OAFF;AAGLI,QAAAA,QAAQ,EAAE,MAHL;AAILP,QAAAA,aAAa,EAAE,KAJV;AAKLK,QAAAA,UAAU,EAAE,IALP;AAMLG,QAAAA,WAAW,EAAE;AANR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAaG,IA/NN,EAiOE;AACE,MAAA,KAAK,EAAE;AACLT,QAAAA,OAAO,EAAE,MADJ;AAELI,QAAAA,KAAK,EAAE,OAFF;AAGLI,QAAAA,QAAQ,EAAE,MAHL;AAILP,QAAAA,aAAa,EAAE,KAJV;AAKLQ,QAAAA,WAAW,EAAE,IALR;AAMLH,QAAAA,UAAU,EAAE;AANP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,KAAKzE,KAAL,CAAWsD,OAAX,CAAmBuB,GAAnB,CAAuBpB,IAAI,IAC3B;AAAQ,MAAA,SAAS,EAAE,YAAnB;AAAiC,MAAA,KAAK,EAAE;AAAEqB,QAAAA,OAAO,EAAE;AAAX,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,IAAD;AACA,MAAA,SAAS,EAAG,KAAK1E,KAAL,CAAWH,IAAX,GAAkB,UAAlB,GAA+B,UAD3C;AAEE,MAAA,KAAK,EAAE;AACL8E,QAAAA,SAAS,EAAE,6BADN;AAELC,QAAAA,eAAe,EAAEvB,IAAI,CAACE,KAFjB;AAGLsB,QAAAA,YAAY,EAAE;AAHT,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AACE,MAAA,KAAK,EAAE;AACLd,QAAAA,OAAO,EAAE,MADJ;AAELE,QAAAA,cAAc,EAAE,eAFX;AAGLS,QAAAA,OAAO,EAAC;AAHH,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKtB,gBAAL,CAAsBC,IAAtB,CADjB;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,KAAK,EAAEzB,IAAI,CAACtC,KAJd;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,MANX;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,UAAU,EAAE;AACVgE,QAAAA,gBAAgB,EAAE;AADR,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EAsBE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKvB,cAAL,CAAoBH,IAAI,CAACrB,EAAzB,CAFjB;AAGE,MAAA,KAAK,EAAE;AAACqC,QAAAA,UAAU,EAAC;AAAZ,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAC,4BAAX;AAAwC,MAAA,KAAK,EAAC,IAA9C;AAAmD,MAAA,MAAM,EAAC,IAA1D;AAA+D,MAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACf;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe,EAEf;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,6GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFe,CADA,CALF,CAtBF,CARF,EA4CE;AACE,MAAA,KAAK,EAAE;AACLJ,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLW,QAAAA,OAAO,EAAC;AAHH,OADT;AAME,MAAA,OAAO,EAAE,MAAM,KAAKtB,gBAAL,CAAsBC,IAAtB,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQG,GARH,EASE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEyB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,KAAK,EAAEzB,IAAI,CAAChC,WAHd;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACV0D,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CA5CF,EAiEE;AACE,MAAA,KAAK,EAAE;AACLd,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGX,IAAI,CAACzC,QAAL,IAAiB,IAAjB,GACC;AACE,MAAA,KAAK,EAAE;AACLqD,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEa,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,KAAK,EAAEvB,IAAI,CAACzC,QAFd;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAK6C,YAAL,CAAkBJ,IAAI,CAACrB,EAAvB,CAHlB;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAcG,IArBN,EAsBE;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLS,QAAAA,WAAW,EAAE;AAHR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGnB,IAAI,CAAC2B,YAAL,IAAqB,IAArB,GACG3B,IAAI,CAAC2B,YAAL,CAAkBP,GAAlB,CAAsBQ,GAAG,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADH,GAQG,IAfN,CAtBF,CAjEF,EA0GE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA6B,MAAA,KAAK,EAAE;AAACZ,QAAAA,UAAU,EAAC;AAAZ,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAG,KAAKrE,KAAL,CAAWH,IAAX,GAAkB,SAAlB,GAA8B,SAD5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE,oBAAC,WAAD;AACE,MAAA,iBAAiB,EAAEwD,IAAI,CAACrB,EAD1B;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,MAAA,gBAAgB,EAAE,KAAKzB,cAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EASE,oBAAC,YAAD;AACE,MAAA,iBAAiB,EAAE0C,IAAI,CAACrB,EAD1B;AAEE,MAAA,iBAAiB,EACfqB,IAAI,CAAC2B,YAAL,KAAsB,IAAtB,GAA6B3B,IAAI,CAAC2B,YAAlC,GAAiD,IAHrD;AAKE,MAAA,OAAO,EAAE,KAAK5C,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAiBE,oBAAC,QAAD;AACE,MAAA,cAAc,EAAEiB,IAAI,CAACrB,EADvB;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,MAAA,aAAa,EAAE,KAAKkB,cAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAsBE,oBAAC,UAAD;AACE,MAAA,gBAAgB,EAAED,IAAI,CAACrB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,MAAA,eAAe,EAAE,KAAKlC,gBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EA4BE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAEmD,IAAI,CAACrB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,CADF,CA1GF,CADA,CADA,CAVH,EA+JE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKxC,KAAL,CAAW6B,UADnB;AAEE,MAAA,OAAO,EAAE,KAAKD,WAFhB;AAGE,yBAAgB,qBAHlB;AAIE,MAAA,KAAK,EAAE;AAAE2C,QAAAA,KAAK,EAAE;AAAT,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKvE,KAAL,CAAWmC,OAAX,KAAuB,IAAvB,GACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAE2C,QAAAA,OAAO,EAAE;AAAX,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLP,QAAAA,KAAK,EAAE,OADF;AAELQ,QAAAA,SAAS,EAAE,6BAFN;AAGLC,QAAAA,eAAe,EAAE,KAAKhF,KAAL,CAAWmC,OAAX,CAAmBwB;AAH/B,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AACE,MAAA,KAAK,EAAE;AACLQ,QAAAA,OAAO,EAAE,MADJ;AAELE,QAAAA,cAAc,EAAE;AAFX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,YAAY,EAAE,KAAKlF,KAAL,CAAWmC,OAAX,CAAmBhB,KAHnC;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACVgE,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAUE,MAAA,QAAQ,EAAE,KAAKlE,iBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAqBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,CAAC,EAAC,6GAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF,CArBF,CAPF,EA6CE;AACE,MAAA,KAAK,EAAE;AACLoD,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,YAAY,EAAE,KAAKlF,KAAL,CAAWmC,OAAX,CAAmBV,WAHnC;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACV0D,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAUE,MAAA,QAAQ,EAAE,KAAK3D,uBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA7CF,EAgEE;AACA,MAAA,KAAK,EAAE;AACL6C,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLC,QAAAA,aAAa,EAAE;AAHV,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOC,KAAKpE,KAAL,CAAWmC,OAAX,CAAmBnB,QAAnB,IAA+B,IAA/B,GACC;AACE,MAAA,KAAK,EAAE;AACLqD,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAEa,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,KAAK,EAAE,KAAKhF,KAAL,CAAWmC,OAAX,CAAmBnB,QAF5B;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAK6C,YAAL,CAAkB,KAAK7D,KAAL,CAAWmC,OAAX,CAAmBC,EAArC,CAHlB;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAcG,IArBJ,EAsBA;AACE,MAAA,KAAK,EAAE;AACLiC,QAAAA,cAAc,EAAE,aADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLS,QAAAA,WAAW,EAAE;AAHR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAK5E,KAAL,CAAWmC,OAAX,CAAmBiD,YAAnB,IAAmC,IAAnC,GACG,KAAKpF,KAAL,CAAWmC,OAAX,CAAmBiD,YAAnB,CAAgCP,GAAhC,CAAoCQ,GAAG,IACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADH,GAQG,IAfN,CAtBA,CAhEF,EAyGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLhB,QAAAA,cAAc,EAAE,eADX;AAELF,QAAAA,OAAO,EAAE,MAFJ;AAGLM,QAAAA,UAAU,EAAE,MAHP;AAILa,QAAAA,aAAa,EAAE;AAJV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASD,oBAAC,WAAD;AACA,MAAA,iBAAiB,EAAE,KAAKtF,KAAL,CAAWmC,OAAX,CAAmBC,EADtC;AAEA,MAAA,OAAO,EAAE,KAAKI,WAFd;AAGA,MAAA,gBAAgB,EAAE,KAAKzB,cAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATC,EAeH,oBAAC,YAAD;AACE,MAAA,iBAAiB,EAAE,KAAKf,KAAL,CAAWmC,OAAX,CAAmBC,EADxC;AAEE,MAAA,iBAAiB,EAChB,KAAKpC,KAAL,CAAWmC,OAAX,CAAmBiD,YAAnB,KAAoC,IAApC,GAA2C,KAAKpF,KAAL,CAAWmC,OAAX,CAAmBiD,YAA9D,GAA6E,IAHhF;AAKE,MAAA,OAAO,EAAE,KAAK5C,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfG,EAsBE,oBAAC,QAAD;AACH,MAAA,cAAc,EAAE,KAAKxC,KAAL,CAAWmC,OAAX,CAAmBC,EADhC;AAEH,MAAA,OAAO,EAAE,KAAKI,WAFX;AAGH,MAAA,aAAa,EAAE,KAAKkB,cAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,EA2BE,oBAAC,UAAD;AACH,MAAA,gBAAgB,EAAE,KAAK1D,KAAL,CAAWmC,OAAX,CAAmBC,EADlC;AAEH,MAAA,OAAO,EAAE,KAAKI,WAFX;AAGH,MAAA,eAAe,EAAE,KAAKlC,gBAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,EAiCE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACH,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAE,KAAKN,KAAL,CAAWmC,OAAX,CAAmBC,EADvC;AAEE,MAAA,OAAO,EAAE,KAAKI,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG,CAjCF,EAuCE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKZ,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvCF,CADF,CAzGF,CADF,CADD,GA0JG,IAhKN,CA/JF,CAjOF,EAmiBE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEjB,WAAW,CAAC+B,GADnB;AAEE,MAAA,YAAY,EAAE;AACZ6C,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAFhB;AAME,MAAA,IAAI,EAAE,KAAKxF,KAAL,CAAWa,YANnB;AAOE,MAAA,gBAAgB,EAAE,IAPpB;AAQE,MAAA,OAAO,EAAE,KAAKe,WARhB;AASE,MAAA,QAAQ,EAAE,KAAKd,YATjB;AAUE,MAAA,YAAY,EAAE;AACZ,4BAAoB;AADR,OAVhB;AAaE,MAAA,OAAO,EAAE;AAAM,QAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuBH,WAAW,CAAC4B,OAAnC,CAbX;AAcE,MAAA,MAAM,EAAE,CACN,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,WAAzB;AAAqC,QAAA,IAAI,EAAC,OAA1C;AAAkD,QAAA,OAAO,EAAE,KAAKb,YAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADM,EAIN,oBAAC,UAAD;AACE,QAAA,GAAG,EAAC,OADN;AAEE,sBAAW,OAFb;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,KAAKA,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CAJM,CAdV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAniBF,CADF;AAokBD;;AAjxByC;AAoxB5C,eAAe5B,OAAO,CAACC,eAAD,CAAP,CAA0BG,YAA1B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\n\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport {Redirect} from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {connect} from 'react-redux'\nconst mapStateToProps= state=>{\n   return {\n        view:state.view\n   }\n}\n\nexport class Displaynotes extends Component {\n  queue = [];\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n  \n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnackbar:false,\n      messageInfo: {},\n    };\n  }\n\n  handlesetArchive = archive => {\n  };\n\n  processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift(),\n        opensnackbar: true,\n      });\n    }\n  };\n  handleExited = () => {\n    this.processQueue();\n  };\n\n  handleReminder = reminder => {\n  };\n  handleUpdatetitle = event => {\n    this.setState({\n      title: event.target.value\n    });\n    console.log(\"ddd\" + this.state.title);\n  };\n\n  handleUpdatedescription = event => {\n    this.setState({\n      description: event.target.value\n    });\n    console.log(this.state.description);\n  };\n\n  handleClose1 = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ opensnackbar: false });\n  };\n  handleClose = () => {\n    console.log(\"close \");\n    this.setState({\n      dialogOpen: false\n    });\n\n   \n    let updatenote = {};\n    console.log(this.state.title);\n    console.log(this.state.description);\n\n    updatenote.title = this.state.title;\n    updatenote.description = this.state.description;\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.state.notearr.id;\n\n    editNote(updatenote, noteid, token)\n      .then(Response => {\n        let message=\"Note update successfully \";\n        console.log(\"update note\");\n\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime(),\n        }); \n\n      })\n      .catch(err => {\n        console.log(\"not update note\");\n      });\n  };\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (\n            element.trash === false &&\n            element.archive === false &&\n            element.pin === false\n          ) {\n            array.push(element);\n          }\n          console.log(array);\n          if (\n            element.archive === false &&\n            element.trash === false &&\n            element.pin === true\n          ) {\n            array1.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n\n        console.log(\"a\" + array);\n\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  handleDialogOpen = note => {\n    console.log(note);\n    this.setState({\n      dialogOpen: !this.state.dialogOpen,\n      notearr: note\n    });\n  };\n\n  handlesetColor = color => {\n   \n  };\n\n  handlepinunpin = noteid => {\n    console.log(\"dd\");\n    \n\n       let message=\"pin change\";\n\n    let token = localStorage.getItem(\"Token\");\n    pinUnpin(token, noteid)\n      .then(Response => {\n        console.log(\"pinunpin done\");\n        this.queue.push({\n          message,\n          key: new Date().getTime(),\n        });       \n        \n        this.getAllNotes();\n        this.setState({opensnackbar:true})\n      })\n      .catch(err => {\n        console.log(\"not done error\");\n      });\n  };\n\n  handleDelete = noteid => {\n    \n    let message=\"remove reminder\";\n\n    let token = localStorage.getItem(\"Token\");\n    removeReminder(noteid, token)\n      .then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime(),\n        });  \n        this.setState({opensnackbar:true})\n      })\n      .catch({\n        // console.log(\"fail..\");\n      });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n\n      return <Redirect to=\"/login\"/>  }\n      const { messageInfo } = this.state;\n\n         console.log(\"color\"+this.props.color);\n         console.log(\"archive\"+this.props.archive);\n\n          \n    return (\n      <div>\n        <div\n        >\n          <CreateNote refresh={this.getAllNotes} />\n        </div>\n\n        {this.state.allNote.length !== 0 || this.state.pinUnpinArray.length!==0 ? null : (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                opacity: \".3\",\n                width:'800px',\n                alignItems: \"center\",\n                paddingTop: \"19%\"\n              }}\n            >\n              <EmojiObjectsOutlinedIcon style={{ fontSize: \"7.5rem\" }} />{\" \"}\n              <b>Your  notes appear here\n</b>{\" \"}\n            </div>\n          )}\n\n        {this.state.pinUnpinArray.length !== 0 ? (\n          <div className= {this.props.view ?(\"listview\"):(\"gridview1\")} \n            style={{\n              display: \"flex\",\n              width: \"800px\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              paddingTop: \"8%\",\n              paddingLeft: \"11%\"\n            }}\n          >\n            PINNED\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\"\n          }}  \n        >\n          {this.state.pinUnpinArray.map(note => (\n            <div    className= \"trashnoted\"  style={{ padding: 5 }}>\n              <Card \n              className= {this.props.view ?(\"listview\"):(\"gridview\")} \n                style={{\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    padding:'2%'\n\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                    style={{paddingTop:'1%'}}\n                  >\n                    <Tooltip title=\"unpin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    padding:'2%'\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}\n                >\n                  {note.reminder != null ? (\n                    <div\n                      style={{\n                        justifyContent: \"spacearound\",\n                        display: \"flex\"\n                      }}\n                    >\n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                    </div>\n                  ) : null}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\",\n                      paddingLeft: \"6px\"\n                    }}\n                  >\n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          <div>\n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"footerarea\">\n                  <div  className= {this.props.view ?(\"footer1\"):(\"footer2\")} \n                     \n                    // style={{\n                    //   justifyContent: \"flex-start\",\n                    //   display: \"flex\",\n                    //   padding: \"12px\",\n                    //   paddingBottom: \"13px\"\n                    // }}\n                  >\n                    <AddReminder\n                       className= {this.props.view ?(null):(\"footerpadding\")}\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectReminder={this.handleReminder}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectColor={this.handlesetColor}\n                    />\n                    <AddArchive\n                    onSelectArchive={this.handlesetArchive}\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                      onClick={() => this.handlepinunpin(note.id)}                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        propsdisplaynote={note.id}\n                        onSelec={this.handlesetArchive}\n                        refresh={this.getAllNotes}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n        </div>\n        {this.state.pinUnpinArray.length !== 0 ? (\n          <div className= {this.props.view ?(\"listview\"):(\"gridview1\")} \n            style={{\n              display: \"flex\",\n              width: \"800px\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              paddingTop: \"6%\",\n              paddingLeft: \"11%\"\n            }}\n          >\n            OTHERS\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\",\n            paddingTop: \"6%\"\n          }}\n        >\n          {this.state.allNote.map(note => (\n           <div    className= \"trashnoted\"  style={{ padding: 5 }}>\n           <Card \n           className= {this.props.view ?(\"listview\"):(\"gridview\")} \n             style={{\n               boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n               backgroundColor: note.color,\n               borderRadius: \"10px\"\n             }}\n           >\n             <div\n               style={{\n                 display: \"flex\",\n                 justifyContent: \"space-between\",\n                 padding:'2%'\n\n               }}\n             >\n               <div>\n                 <TextField\n                   onClick={() => this.handleDialogOpen(note)}\n                   id=\"standard-full-width\"\n                   style={{ margin: 8 }}\n                   value={note.title}\n                   multiline\n                   fullWidth\n                   margin=\"normal\"\n                   InputProps={{\n                     disableUnderline: true\n                   }}\n                 />\n               </div>\n               <div\n                 className=\"footerarea\"\n                 onClick={() => this.handlepinunpin(note.id)}\n                 style={{paddingTop:'1%'}}\n               >\n                 <Tooltip title=\"pin note \">\n                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n  <path fill=\"none\" d=\"M0 0h24v24H0z\"/>\n  <path fill=\"#000\" d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"/>\n</svg>\n\n                 </Tooltip>\n               </div>\n             </div>\n             <div\n               style={{\n                 justifyContent: \"spacearound\",\n                 display: \"flex\",\n                 padding:'2%'\n               }}\n               onClick={() => this.handleDialogOpen(note)}\n             >\n               {\" \"}\n               <TextField\n                 id=\"standard-full-width\"\n                 style={{ margin: 8 }}\n                 value={note.description}\n                 multiline\n                 fullWidth\n                 margin=\"normal\"\n                 InputProps={{\n                   disableUnderline: true\n                 }}\n               />\n             </div>\n             <div\n               style={{\n                 justifyContent: \"spacearound\",\n                 display: \"flex\",\n                 flexDirection: \"row\"\n               }}\n             >\n               {note.reminder != null ? (\n                 <div\n                   style={{\n                     justifyContent: \"spacearound\",\n                     display: \"flex\"\n                   }}\n                 >\n                   <Chip\n                     style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                     label={note.reminder}\n                     onDelete={() => this.handleDelete(note.id)}\n                     variant=\"outlined\"\n                   />\n                 </div>\n               ) : null}\n               <div\n                 style={{\n                   justifyContent: \"spacearound\",\n                   display: \"flex\",\n                   paddingLeft: \"6px\"\n                 }}\n               >\n                 {note.collabrators != null\n                   ? note.collabrators.map(col => (\n                       <div>\n                         <Tooltip title={col}>\n                           <AccountCircleIcon />\n                         </Tooltip>\n                       </div>\n                     ))\n                   : null}\n               </div>\n             </div>\n\n             <div className=\"footerarea\"  style={{paddingTop:'4%'}}>\n               <div\n                 className= {this.props.view ?(\"footer1\"):(\"footer2\")} \n               >\n                 <AddReminder\n                   propsRemindernote={note.id}\n                   refresh={this.getAllNotes}\n                   onSelectReminder={this.handleReminder}\n\n                 />\n                 <Collaborator\n                   propsRemindernote={note.id}\n                   propscollbratorid={\n                     note.collabrators !== null ? note.collabrators : null\n                   }\n                   refresh={this.getAllNotes}\n                 />\n\n                 <SetColor\n                   propsColornote={note.id}\n                   refresh={this.getAllNotes}\n                   onSelectColor={this.handlesetColor}\n                 />\n                 <AddArchive\n                   propsarchivenote={note.id}\n                   refresh={this.getAllNotes}\n                   onSelectArchive={this.handlesetArchive}\n\n                 />\n                 <Tooltip title=\" More\">\n                   <Showmoreoption\n                     propsdisplaynote={note.id}\n                     refresh={this.getAllNotes}\n                   />\n                 </Tooltip>\n               </div>\n             </div>\n           </Card>\n         </div>\n          ))}\n\n          <Dialog\n            open={this.state.dialogOpen}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            style={{ width: \"100%\" }}\n          >\n            {this.state.notearr !== null ? (\n              <div className=\"trashnoted\" style={{ padding: 5 }}>\n                <Card\n                  style={{\n                    width: \"484px\",\n                    boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                    backgroundColor: this.state.notearr.color\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"standard-full-width\"\n                        style={{ margin: 8 }}\n                        defaultValue={this.state.notearr.title}\n                        multiline\n                        fullWidth\n                        margin=\"normal\"\n                        InputProps={{\n                          disableUnderline: true\n                        }}\n                        onChange={this.handleUpdatetitle}\n                      />\n                    </div>\n\n                    <div className=\"footerarea\">\n                      <Tooltip title=\"pin note \">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                          <path\n                            fill=\"#000\"\n                            d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                          />\n                        </svg>\n                      </Tooltip>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <TextField\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      defaultValue={this.state.notearr.description}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                      onChange={this.handleUpdatedescription}\n                    />\n                  </div>\n                  <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}\n                >\n                  {this.state.notearr.reminder != null ? (\n                    <div\n                      style={{\n                        justifyContent: \"spacearound\",\n                        display: \"flex\"\n                      }}\n                    >\n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={this.state.notearr.reminder}\n                        onDelete={() => this.handleDelete(this.state.notearr.id)}\n                        variant=\"outlined\"\n                      />\n                    </div>\n                  ) : null}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\",\n                      paddingLeft: \"6px\"\n                    }}\n                  >\n                    {this.state.notearr.collabrators != null\n                      ? this.state.notearr.collabrators.map(col => (\n                          <div>\n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                </div>\n\n                  <div className=\"footerarea\">\n                    <div\n                      style={{\n                        justifyContent: \"space-between\",\n                        display: \"flex\",\n                        paddingTop: \"13px\",\n                        paddingBottom: \"13px\"\n                      }}\n                    >\n                   \n                   <AddReminder\n                   propsRemindernote={this.state.notearr.id}\n                   refresh={this.getAllNotes}\n                   onSelectReminder={this.handleReminder}\n\n                 />\n                 <Collaborator\n                   propsRemindernote={this.state.notearr.id}\n                   propscollbratorid={\n                    this.state.notearr.collabrators !== null ? this.state.notearr.collabrators : null\n                   }\n                   refresh={this.getAllNotes}\n                 />\n                      <SetColor\n                   propsColornote={this.state.notearr.id}\n                   refresh={this.getAllNotes}\n                   onSelectColor={this.handlesetColor}\n                 />\n                      <AddArchive\n                   propsarchivenote={this.state.notearr.id}\n                   refresh={this.getAllNotes}\n                   onSelectArchive={this.handlesetArchive}\n\n                 />\n                      <Tooltip title=\" More\">\n                   <Showmoreoption\n                     propsdisplaynote={this.state.notearr.id}\n                     refresh={this.getAllNotes}\n                   />\n                 </Tooltip>\n                      <Button onClick={this.handleClose}>close</Button>\n                    </div>\n                   \n\n                  </div>\n                </Card>\n              </div>\n            ) : null}\n          </Dialog>\n        </div>\n        <Snackbar\n          key={messageInfo.key}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{messageInfo.message}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose1}>\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      \n      \n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps) (Displaynotes);\n"]},"metadata":{},"sourceType":"module"}