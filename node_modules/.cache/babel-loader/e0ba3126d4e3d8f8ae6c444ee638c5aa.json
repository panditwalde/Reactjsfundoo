{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displayallreminder.js\";\nimport React, { Component } from \"react\";\nexport class Displayallreminder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdatetitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n      console.log(\"ddd\" + this.state.title);\n    };\n\n    this.handleUpdatedescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n      console.log(this.state.description);\n    };\n\n    this.handleClose = () => {\n      console.log(\"close \");\n      this.setState({\n        dialogOpen: false\n      });\n      let updatenote = {};\n      console.log(this.state.title);\n      console.log(this.state.description);\n      updatenote.title = this.state.title;\n      updatenote.description = this.state.description;\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.state.notearr.id;\n      editNote(updatenote, noteid, token).then(Response => {\n        console.log(\"update note\");\n        this.getAllNotes();\n      }).catch(err => {\n        console.log(\"not update note\");\n      });\n    };\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        console.log(Response.data);\n        let array = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === false && element.archive === false) {\n            console.log(element);\n            array.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleDialogOpen = note => {\n      console.log(note);\n      this.setState({\n        dialogOpen: !this.state.dialogOpen,\n        notearr: note\n      });\n    };\n\n    this.handleDelete = noteid => {\n      let token = localStorage.getItem(\"Token\");\n      removeReminder(noteid, token).then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n      }).catch({// console.log(\"fail..\");\n      });\n    };\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllreminder();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    });\n  }\n\n}\nexport default Displayallreminder;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displayallreminder.js"],"names":["React","Component","Displayallreminder","constructor","props","handleUpdatetitle","event","setState","title","target","value","console","log","state","handleUpdatedescription","description","handleClose","dialogOpen","updatenote","token","localStorage","getItem","noteid","notearr","id","editNote","then","Response","getAllNotes","catch","err","DisplayAllNotes","data","array","forEach","element","trash","archive","push","allNote","handleDialogOpen","note","handleDelete","removeReminder","open","more","UNSAFE_componentWillMount","getAllreminder","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport class Displayallreminder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  handleUpdatetitle = event => {\n    this.setState({\n      title: event.target.value\n    });\n    console.log(\"ddd\" + this.state.title);\n  };\n\n  handleUpdatedescription = event => {\n    this.setState({\n      description: event.target.value\n    });\n    console.log(this.state.description);\n  };\n\n  handleClose = () => {\n    console.log(\"close \");\n    this.setState({\n      dialogOpen: false\n    });\n\n    let updatenote = {};\n    console.log(this.state.title);\n    console.log(this.state.description);\n\n    updatenote.title = this.state.title;\n    updatenote.description = this.state.description;\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.state.notearr.id;\n\n    editNote(updatenote, noteid, token)\n      .then(Response => {\n        console.log(\"update note\");\n        this.getAllNotes();\n      })\n      .catch(err => {\n        console.log(\"not update note\");\n      });\n  };\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        console.log(Response.data);\n        let array = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === false && element.archive === false) {\n            console.log(element);\n            array.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  handleDialogOpen = note => {\n    console.log(note);\n    this.setState({\n      dialogOpen: !this.state.dialogOpen,\n      notearr: note\n    });\n  };\n\n  handleDelete = noteid => {\n    let token = localStorage.getItem(\"Token\");\n    removeReminder(noteid, token)\n      .then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n      })\n      .catch({\n        // console.log(\"fail..\");\n      });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllreminder();\n  }\n\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Displayallreminder;\n"]},"metadata":{},"sourceType":"module"}