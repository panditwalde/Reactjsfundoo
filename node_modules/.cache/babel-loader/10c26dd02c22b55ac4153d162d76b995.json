{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/SetColor.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport toRenderProps from 'recompose/toRenderProps';\nimport withState from 'recompose/withState';\nconst WithState = toRenderProps(withState('anchorEl', 'updateAnchorEl', null));\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nfunction RenderPropsPopover(props) {\n  const classes = props.classes;\n  return React.createElement(WithState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ({\n    anchorEl,\n    updateAnchorEl\n  }) => {\n    const open = Boolean(anchorEl);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Button, {\n      \"aria-owns\": open ? 'render-props-popover' : undefined,\n      \"aria-haspopup\": \"true\",\n      variant: \"contained\",\n      onClick: event => {\n        updateAnchorEl(event.currentTarget);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Open Popover\"), React.createElement(Popover, {\n      id: \"render-props-popover\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: () => {\n        updateAnchorEl(null);\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.typography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"The content of the Popover.\")));\n  });\n}\n\nRenderPropsPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(RenderPropsPopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/SetColor.js"],"names":["React","PropTypes","withStyles","Typography","Button","Popover","toRenderProps","withState","WithState","styles","theme","typography","margin","spacing","unit","RenderPropsPopover","props","classes","anchorEl","updateAnchorEl","open","Boolean","undefined","event","currentTarget","vertical","horizontal","propTypes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,SAAS,GAAGF,aAAa,CAACC,SAAS,CAAC,UAAD,EAAa,gBAAb,EAA+B,IAA/B,CAAV,CAA/B;;AAEA,MAAME,MAAM,GAAGC,KAAK,KAAK;AACvBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAcC,IAAd,GAAqB;AADnB;AADW,CAAL,CAApB;;AAMA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA,QACzBC,OADyB,GACbD,KADa,CACzBC,OADyB;AAGjC,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD,KAAkC;AACjC,UAAMC,IAAI,GAAGC,OAAO,CAACH,QAAD,CAApB;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,mBAAWE,IAAI,GAAG,sBAAH,GAA4BE,SAD7C;AAEE,uBAAc,MAFhB;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,OAAO,EAAEC,KAAK,IAAI;AAChBJ,QAAAA,cAAc,CAACI,KAAK,CAACC,aAAP,CAAd;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAWE,oBAAC,OAAD;AACE,MAAA,EAAE,EAAC,sBADL;AAEE,MAAA,IAAI,EAAEJ,IAFR;AAGE,MAAA,QAAQ,EAAEF,QAHZ;AAIE,MAAA,OAAO,EAAE,MAAM;AACbC,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD,OANH;AAOE,MAAA,YAAY,EAAE;AACZM,QAAAA,QAAQ,EAAE,QADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAPhB;AAWE,MAAA,eAAe,EAAE;AACfD,QAAAA,QAAQ,EAAE,KADK;AAEfC,QAAAA,UAAU,EAAE;AAFG,OAXnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgBE,oBAAC,UAAD;AAAY,MAAA,SAAS,EAAET,OAAO,CAACN,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAhBF,CAXF,CADF;AAgCD,GAnCH,CADF;AAuCD;;AAEDI,kBAAkB,CAACY,SAAnB,GAA+B;AAC7BV,EAAAA,OAAO,EAAEhB,SAAS,CAAC2B,MAAV,CAAiBC;AADG,CAA/B;AAIA,eAAe3B,UAAU,CAACO,MAAD,CAAV,CAAmBM,kBAAnB,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popover from '@material-ui/core/Popover';\nimport toRenderProps from 'recompose/toRenderProps';\nimport withState from 'recompose/withState';\n\nconst WithState = toRenderProps(withState('anchorEl', 'updateAnchorEl', null));\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nfunction RenderPropsPopover(props) {\n  const { classes } = props;\n\n  return (\n    <WithState>\n      {({ anchorEl, updateAnchorEl }) => {\n        const open = Boolean(anchorEl);\n        return (\n          <React.Fragment>\n            <Button\n              aria-owns={open ? 'render-props-popover' : undefined}\n              aria-haspopup=\"true\"\n              variant=\"contained\"\n              onClick={event => {\n                updateAnchorEl(event.currentTarget);\n              }}\n            >\n              Open Popover\n            </Button>\n            <Popover\n              id=\"render-props-popover\"\n              open={open}\n              anchorEl={anchorEl}\n              onClose={() => {\n                updateAnchorEl(null);\n              }}\n              anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n              }}\n              transformOrigin={{\n                vertical: 'top',\n                horizontal: 'center',\n              }}\n            >\n              <Typography className={classes.typography}>The content of the Popover.</Typography>\n            </Popover>\n          </React.Fragment>\n        );\n      }}\n    </WithState>\n  );\n}\n\nRenderPropsPopover.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(RenderPropsPopover);"]},"metadata":{},"sourceType":"module"}