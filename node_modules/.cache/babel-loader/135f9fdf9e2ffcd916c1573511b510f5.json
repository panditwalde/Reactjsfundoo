{"ast":null,"code":"import axios from \"axios\";\nexport function UserRegistration(regDto) {\n  return axios.post(\"http://localhost:8080/register\", regDto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function userLogin(logindto) {\n  return axios.post(\"http://localhost:8080/login\", logindto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function forgotPassword(email) {\n  return axios.post(\"http://localhost:8080/forgotpassword\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      email: email\n    }\n  });\n}\nexport function setNewPassword(token, setpassworddto) {\n  console.log();\n  return axios.post(\"http://localhost:8080/setNewPassword\", setpassworddto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function chanageprofile(file, token) {\n  return axios.post(\"http://localhost:8080/addprofile\", file, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      token: token\n    }\n  });\n}\nexport function deleteNote(noteid, token) {\n  return axios.delete(`http://localhost:8081/deletenote?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function createNote(notedto, token) {\n  return axios.post(\"http://localhost:8081/createnote\", notedto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function DisplayAllNotes(token) {\n  return axios.get(\"http://localhost:8081/getallnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function editNote(notedto, noteid, token) {\n  return axios.put(\"http://localhost:8081/editnote\", notedto, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addIntrash(noteid, token) {\n  return axios.put(\"http://localhost:8081/trash\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addInArchive(noteid, token) {\n  return axios.put(\"http://localhost:8081/archive\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function setColor(noteid, colorCode, token) {\n  return axios.put(\"http://localhost:8081/setcolor\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      noteid: noteid,\n      colorCode: colorCode,\n      token: token\n    }\n  });\n}\nexport function searchNote(note) {\n  return axios.get(\"http://localhost:8081/searchnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      note: note\n    }\n  });\n}\nexport function addLabel(label, token) {\n  return axios.post(\"http://localhost:8081/addlabel\", label, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addLabelWithnote(labeldto, token) {\n  console.log(labeldto.lable_title);\n  console.log(labeldto.noteid);\n  return axios.post(\"http://localhost:8081/addlabelwithnote\", labeldto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function DisplayAllLabel(token) {\n  return axios.get(\"http://localhost:8081/getalllabel\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function deletelabel(labelid, token) {\n  console.log(\"id\" + labelid);\n  console.log(\"token\" + token);\n  return axios.delete(`http://localhost:8081/deletelabel?labelid=${labelid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function editLabel(label_title, label_id, token) {\n  console.log(label_title);\n  console.log(label_id);\n  console.log(token);\n  return axios.put(`http://localhost:8081/updatelabel?label_id=${label_id}&label_title=${label_title}`, null, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addReminder(date, noteid, token) {\n  console.log(date);\n  console.log(noteid);\n  console.log();\n  return axios.put(`http://localhost:8081/addreminder?date=${date}&noteid=${noteid}`, null, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function removeReminder(noteid, token) {\n  console.log(noteid);\n  console.log(token);\n  return axios.delete(`http://localhost:8081/removereminder?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addCollabrator(collabraotoremail, noteid, token) {\n  console.log(collabraotoremail);\n  console.log(noteid);\n  return axios.put(`http://localhost:8081/addCollabrator?collabraotoremail=${collabraotoremail}&noteid=${noteid}`, null, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function removeCollabrator(email, noteid, token) {\n  console.log(\"e\" + email);\n  console.log(\"n\" + noteid);\n  console.log(token);\n  return axios.delete(`http://localhost:8081/removeCollabrator?email=${email}&noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function pinUnpin(token, noteid) {\n  return axios.put(\"http://localhost:8081/pinunpin\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Service.js"],"names":["axios","UserRegistration","regDto","post","headers","userLogin","logindto","forgotPassword","email","setNewPassword","token","setpassworddto","console","log","chanageprofile","file","deleteNote","noteid","delete","createNote","notedto","DisplayAllNotes","get","editNote","put","params","addIntrash","addInArchive","setColor","colorCode","searchNote","note","addLabel","label","addLabelWithnote","labeldto","lable_title","DisplayAllLabel","deletelabel","labelid","editLabel","label_title","label_id","addReminder","date","removeReminder","addCollabrator","collabraotoremail","removeCollabrator","pinUnpin"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport function UserRegistration(regDto) {\n  return axios.post(\"http://localhost:8080/register\", regDto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function userLogin(logindto) {\n  return axios.post(\"http://localhost:8080/login\", logindto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function forgotPassword(email) {\n  return axios.post(\n    \"http://localhost:8080/forgotpassword\",\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        email: email\n      }\n    }\n  );\n}\n\nexport function setNewPassword(token, setpassworddto) {\n\n  console.log();\n  \n  \n  return axios.post(\"http://localhost:8080/setNewPassword\", setpassworddto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function chanageprofile(file, token) {\n  return axios.post(\"http://localhost:8080/addprofile\", file, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      token: token\n    }\n  });\n}\n\nexport function deleteNote(noteid, token) {\n  return axios.delete(`http://localhost:8081/deletenote?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function createNote(notedto, token) {\n  return axios.post(\"http://localhost:8081/createnote\", notedto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function DisplayAllNotes(token) {\n  return axios.get(\"http://localhost:8081/getallnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function editNote(notedto, noteid, token) {\n  return axios.put(\"http://localhost:8081/editnote\", notedto, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function addIntrash(noteid, token) {\n  return axios.put(\n    \"http://localhost:8081/trash\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function addInArchive(noteid, token) {\n  return axios.put(\n    \"http://localhost:8081/archive\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function setColor(noteid, colorCode, token) {\n  return axios.put(\n    \"http://localhost:8081/setcolor\",\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        noteid: noteid,\n        colorCode: colorCode,\n        token: token\n      }\n    }\n  );\n}\n\nexport function searchNote(note) {\n  return axios.get(\n    \"http://localhost:8081/searchnote\",\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        note: note\n      }\n    }\n  );\n}\nexport function addLabel(label, token) {\n  return axios.post(\"http://localhost:8081/addlabel\", label, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addLabelWithnote(labeldto, token) {\n  console.log(labeldto.lable_title);\n\n  console.log(labeldto.noteid);\n\n  return axios.post(\"http://localhost:8081/addlabelwithnote\", labeldto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function DisplayAllLabel(token) {\n  return axios.get(\"http://localhost:8081/getalllabel\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function deletelabel(labelid, token) {\n  console.log(\"id\" + labelid);\n  console.log(\"token\" + token);\n\n  return axios.delete(`http://localhost:8081/deletelabel?labelid=${labelid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function editLabel(label_title, label_id, token) {\n  console.log(label_title);\n  console.log(label_id);\n  console.log(token);\n\n  return axios.put(\n    `http://localhost:8081/updatelabel?label_id=${label_id}&label_title=${label_title}`,\n    null,\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function addReminder(date, noteid, token) {\n  console.log(date);\n  console.log(noteid);\n  console.log();\n\n  return axios.put(\n    `http://localhost:8081/addreminder?date=${date}&noteid=${noteid}`,\n    null,\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function removeReminder(noteid, token) {\n  console.log(noteid);\n  console.log(token);\n\n  return axios.delete(`http://localhost:8081/removereminder?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function addCollabrator(collabraotoremail, noteid, token) {\n  console.log(collabraotoremail);\n  console.log(noteid);\n\n  return axios.put(\n    `http://localhost:8081/addCollabrator?collabraotoremail=${collabraotoremail}&noteid=${noteid}`,\n    null,\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function removeCollabrator(email, noteid, token) {\n  console.log(\"e\" + email);\n  console.log(\"n\" + noteid);\n  console.log(token);\n\n  return axios.delete(\n    `http://localhost:8081/removeCollabrator?email=${email}&noteid=${noteid}`,\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function pinUnpin(token, noteid) {\n  return axios.put(\n    \"http://localhost:8081/pinunpin\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}