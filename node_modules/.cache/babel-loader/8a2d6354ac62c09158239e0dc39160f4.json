{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Archive.js\";\nimport React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport { connect } from 'react-redux';\nimport UnArchive from \"./UnArchive\";\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\n\nconst mapStateToProps = state => {\n  return {\n    view: state.view\n  };\n};\n\nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n    this.queue = [];\n\n    this.processQueue = () => {\n      if (this.queue.length > 0) {\n        this.setState({\n          messageInfo: this.queue.shift(),\n          opensnackbar: true\n        });\n      }\n    };\n\n    this.handleExited = () => {\n      this.processQueue();\n    };\n\n    this.handleUpdatetitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n      console.log(\"ddd\" + this.state.title);\n    };\n\n    this.handleUpdatedescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n      console.log(this.state.description);\n    };\n\n    this.handleClose1 = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.handleClose = () => {\n      console.log(\"close \");\n      this.setState({\n        dialogOpen: false\n      });\n      let updatenote = {};\n      console.log(this.state.title);\n      console.log(this.state.description);\n      updatenote.title = this.state.title;\n      updatenote.description = this.state.description;\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.state.notearr.id;\n      editNote(updatenote, noteid, token).then(Response => {\n        console.log(\"update note\");\n        this.getAllNotes();\n      }).catch(err => {\n        console.log(\"not update note\");\n      });\n    };\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (element.archive === true && element.trash === false) {\n            array.push(element);\n          }\n\n          console.log(array);\n        });\n        this.setState({\n          allNote: array\n        });\n        console.log(\"a\" + array);\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleDialogOpen = note => {\n      console.log(note);\n      this.setState({\n        dialogOpen: !this.state.dialogOpen,\n        notearr: note\n      });\n    };\n\n    this.handlepinunpin = noteid => {\n      let message = \"pin change\";\n      let token = localStorage.getItem(\"Token\");\n      pinUnpin(token, noteid).then(Response => {\n        console.log(\"pinunpin done\");\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.getAllNotes();\n        this.setState({\n          opensnackbar: true\n        });\n      }).catch(err => {\n        console.log(\"not done error\");\n      });\n    };\n\n    this.handleDelete = noteid => {\n      let message = \"remove reminder\";\n      let token = localStorage.getItem(\"Token\");\n      removeReminder(noteid, token).then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.setState({\n          opensnackbar: true\n        });\n      }).catch({// console.log(\"fail..\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn = true;\n\n    if (_token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnackbar: false,\n      messageInfo: {}\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      });\n    }\n\n    const messageInfo = this.state.messageInfo;\n    console.log(\"aa rha hai\" + this.props.view);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\",\n        paddingTop: '12%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"        \", this.state.allNote == null ? React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"  \", React.createElement(ArchiveOutlinedIcon, {\n      sty: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), \" Your archived notes appear here\") : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: 'column',\n        justifyContent: 'center',\n        opacity: '.7',\n        alignItems: 'center',\n        paddingLeft: '25%',\n        paddingTop: '24%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, \"  \", React.createElement(ArchiveOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), \" Your archived notes appear here\"), this.state.allNote.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"listview\" : \"gridview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: '2%'\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        padding: \"12px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }), React.createElement(UnArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }))))))), React.createElement(Dialog, {\n      open: this.state.dialogOpen,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, this.state.notearr !== null ? React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"484px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: this.state.notearr.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatetitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatedescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: this.state.notearr.reminder,\n      onDelete: () => this.handleDelete(this.state.notearr.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-around\",\n        display: \"flex\",\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Remind me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(AddAlertOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      title: \"Collaborator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      fill: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \" Change color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, React.createElement(PaletteOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525\n      },\n      __self: this\n    })), React.createElement(AddArchive, {\n      propsarchivenote: this.state.notearr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: this.state.notearr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    }, \"close\"))))) : null)), React.createElement(Snackbar, {\n      key: messageInfo.key,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      onExited: this.handleExited,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554\n        },\n        __self: this\n      }, messageInfo.message),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 556\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 565\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default connect(mapStateToProps)(Displaynotes);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Archive.js"],"names":["React","Component","Card","Tooltip","Button","Snackbar","Typography","AddAlertOutlinedIcon","PaletteOutlinedIcon","Dialog","DisplayAllNotes","editNote","removeReminder","pinUnpin","Showmoreoption","AddArchive","TextField","SetColor","AddReminder","Chip","CreateNote","Collaborator","AccountCircleIcon","Redirect","withStyles","IconButton","CloseIcon","UnarchiveIcon","connect","UnArchive","ArchiveOutlinedIcon","mapStateToProps","state","view","Displaynotes","constructor","props","queue","processQueue","length","setState","messageInfo","shift","opensnackbar","handleExited","handleUpdatetitle","event","title","target","value","console","log","handleUpdatedescription","description","handleClose1","reason","handleClose","dialogOpen","updatenote","token","localStorage","getItem","noteid","notearr","id","then","Response","getAllNotes","catch","err","array","array1","data","forEach","element","archive","trash","push","allNote","pinUnpinArray","handleDialogOpen","note","handlepinunpin","message","key","Date","getTime","handleDelete","loggedIn","open","more","UNSAFE_componentWillMount","render","display","width","flexWrap","flexDirection","paddingLeft","paddingTop","justifyContent","opacity","alignItems","map","padding","boxShadow","backgroundColor","color","borderRadius","margin","disableUnderline","reminder","collabrators","col","paddingBottom","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport {Redirect} from 'react-router-dom'\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport UnarchiveIcon from '@material-ui/icons/Unarchive';\nimport {connect} from 'react-redux'\nimport UnArchive from \"./UnArchive\";\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\n\nconst mapStateToProps= state=>{\n   return {\n        view:state.view\n   }\n}\n\nexport class Displaynotes extends Component {\n  queue = [];\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n  \n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnackbar:false,\n      messageInfo: {},\n    };\n  }\n\n\n  processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift(),\n        opensnackbar: true,\n      });\n    }\n  };\n  handleExited = () => {\n    this.processQueue();\n  };\n\n  handleUpdatetitle = event => {\n    this.setState({\n      title: event.target.value\n    });\n    console.log(\"ddd\" + this.state.title);\n  };\n\n  handleUpdatedescription = event => {\n    this.setState({\n      description: event.target.value\n    });\n    console.log(this.state.description);\n  };\n\n  handleClose1 = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    this.setState({ opensnackbar: false });\n  };\n  handleClose = () => {\n    console.log(\"close \");\n    this.setState({\n      dialogOpen: false\n    });\n\n   \n    let updatenote = {};\n    console.log(this.state.title);\n    console.log(this.state.description);\n\n    updatenote.title = this.state.title;\n    updatenote.description = this.state.description;\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.state.notearr.id;\n\n    editNote(updatenote, noteid, token)\n      .then(Response => {\n        console.log(\"update note\");\n        this.getAllNotes();\n      })\n      .catch(err => {\n        console.log(\"not update note\");\n      });\n  };\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (element.archive === true && element.trash === false) {\n            array.push(element);\n          }\n          console.log(array);\n         \n        });\n        this.setState({\n          allNote: array\n        });\n\n        console.log(\"a\" + array);\n\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  handleDialogOpen = note => {\n    console.log(note);\n    this.setState({\n      dialogOpen: !this.state.dialogOpen,\n      notearr: note\n    });\n  };\n\n  handlepinunpin = noteid => {\n\n       let message=\"pin change\";\n\n    let token = localStorage.getItem(\"Token\");\n    pinUnpin(token, noteid)\n      .then(Response => {\n        console.log(\"pinunpin done\");\n        this.queue.push({\n          message,\n          key: new Date().getTime(),\n        });       \n        \n        this.getAllNotes();\n        this.setState({opensnackbar:true})\n      })\n      .catch(err => {\n        console.log(\"not done error\");\n      });\n  };\n\n  handleDelete = noteid => {\n    \n    let message=\"remove reminder\";\n\n    let token = localStorage.getItem(\"Token\");\n    removeReminder(noteid, token)\n      .then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime(),\n        });  \n        this.setState({opensnackbar:true})\n      })\n      .catch({\n        // console.log(\"fail..\");\n      });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n\n      return <Redirect to=\"/login\"/>  }\n      const { messageInfo } = this.state;\n\n         console.log(\"aa rha hai\"+this.props.view);\n          \n    return (\n      <div>\n       \n\n       \n\n      \n       \n\n        <div\n           style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\"\n            ,paddingTop:'12%'\n          }}  \n        >        {this.state.allNote == null?( <div \n          style={{\n            display: \"flex\",\n           flexDirection:'column',\n           justifyContent:'center',\n\n\n          }}\n        >  <ArchiveOutlinedIcon  sty/> Your archived notes appear here</div>):(<div style={{\n          display: \"flex\",\n         flexDirection:'column',\n         justifyContent:'center',\n         opacity:'.7',\n         alignItems: 'center',\n         paddingLeft: '25%',\n         paddingTop:'24%'\n         \n\n        }}>  <ArchiveOutlinedIcon /> Your archived notes appear here</div>)}\n          {this.state.allNote.map(note => (\n           <div    className= \"trashnoted\"  style={{ padding: 5 }}>\n           <Card \n           className= {this.props.view ?(\"listview\"):(\"gridview\")} \n             style={{\n               boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n               backgroundColor: note.color,\n               borderRadius: \"10px\"\n             }}\n           >\n             <div\n               style={{\n                 display: \"flex\",\n                 justifyContent: \"space-between\",\n                 padding:'2%'\n\n               }}\n             >\n               <div>\n                 <TextField\n                   onClick={() => this.handleDialogOpen(note)}\n                   id=\"standard-full-width\"\n                   style={{ margin: 8 }}\n                   value={note.title}\n                   multiline\n                   fullWidth\n                   margin=\"normal\"\n                   InputProps={{\n                     disableUnderline: true\n                   }}\n                 />\n               </div>\n               <div\n                 className=\"footerarea\"\n                 onClick={() => this.handlepinunpin(note.id)}\n                 style={{paddingTop:'1%'}}\n               >\n                 <Tooltip title=\"pin note \">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                          <path\n                            fill=\"#000\"\n                            d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                          />\n                        </svg>\n                      </Tooltip>\n               </div>\n             </div>\n             <div\n               style={{\n                 justifyContent: \"spacearound\",\n                 display: \"flex\",\n                 padding:'2%'\n               }}\n               onClick={() => this.handleDialogOpen(note)}\n             >\n               {\" \"}\n               <TextField\n                 id=\"standard-full-width\"\n                 style={{ margin: 8 }}\n                 value={note.description}\n                 multiline\n                 fullWidth\n                 margin=\"normal\"\n                 InputProps={{\n                   disableUnderline: true\n                 }}\n               />\n             </div>\n             <div\n               style={{\n                 justifyContent: \"spacearound\",\n                 display: \"flex\",\n                 flexDirection: \"row\"\n               }}\n             >\n               {note.reminder != null ? (\n                 <div\n                   style={{\n                     justifyContent: \"spacearound\",\n                     display: \"flex\"\n                   }}\n                 >\n                   <Chip\n                     style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                     label={note.reminder}\n                     onDelete={() => this.handleDelete(note.id)}\n                     variant=\"outlined\"\n                   />\n                 </div>\n               ) : null}\n               <div\n                 style={{\n                   justifyContent: \"spacearound\",\n                   display: \"flex\",\n                   paddingLeft: \"6px\"\n                 }}\n               >\n                 {note.collabrators != null\n                   ? note.collabrators.map(col => (\n                       <div>\n                         <Tooltip title={col}>\n                           <AccountCircleIcon />\n                         </Tooltip>\n                       </div>\n                     ))\n                   : null}\n               </div>\n             </div>\n\n             <div className=\"footerarea\">\n               <div\n                 style={{\n                   justifyContent: \"space-between\",\n                   display: \"flex\",\n                   padding: \"12px\",\n                   paddingBottom: \"13px\"\n                 }}\n               >\n                 <AddReminder\n                   propsRemindernote={note.id}\n                   refresh={this.getAllNotes}\n                 />\n                 <Collaborator\n                   propsRemindernote={note.id}\n                   propscollbratorid={\n                     note.collabrators !== null ? note.collabrators : null\n                   }\n                   refresh={this.getAllNotes}\n                 />\n\n                 <SetColor\n                   propsColornote={note.id}\n                   refresh={this.getAllNotes}\n                 />\n                 <UnArchive\n                   propsarchivenote={note.id}\n                   refresh={this.getAllNotes}\n                 />\n                 <Tooltip title=\" More\">\n                   <Showmoreoption\n                     propsdisplaynote={note.id}\n                     refresh={this.getAllNotes}\n                   />\n                 </Tooltip>\n               </div>\n             </div>\n           </Card>\n         </div>\n          ))}\n\n          <Dialog\n            open={this.state.dialogOpen}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            style={{ width: \"100%\" }}\n          >\n            {this.state.notearr !== null ? (\n              <div className=\"trashnoted\" style={{ padding: 5 }}>\n                <Card\n                  style={{\n                    width: \"484px\",\n                    boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                    backgroundColor: this.state.notearr.color\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"standard-full-width\"\n                        style={{ margin: 8 }}\n                        defaultValue={this.state.notearr.title}\n                        multiline\n                        fullWidth\n                        margin=\"normal\"\n                        InputProps={{\n                          disableUnderline: true\n                        }}\n                        onChange={this.handleUpdatetitle}\n                      />\n                    </div>\n\n                    <div className=\"footerarea\">\n                      <Tooltip title=\"pin note \">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                          <path\n                            fill=\"#000\"\n                            d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                          />\n                        </svg>\n                      </Tooltip>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <TextField\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      defaultValue={this.state.notearr.description}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                      onChange={this.handleUpdatedescription}\n                    />\n                  </div>\n                  {/* {this.state.notearr.reminder !== null ? ( */}\n                  {/* <div>\n\n                     <Chip\n                       style={{ backgroundColor: \"#dedede\" }}\n                       label=\"Deletable Secondary Chip\"\n                       onDelete={this.handleDelete}\n                       variant=\"outlined\"\n                     />\n                   </div> */}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <Chip\n                      style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                      label={this.state.notearr.reminder}\n                      onDelete={() => this.handleDelete(this.state.notearr.id)}\n                      variant=\"outlined\"\n                    />\n                  </div>\n\n                  {/* ):(null)\n                 } */}\n\n                  <div className=\"footerarea\">\n                    <div\n                      style={{\n                        justifyContent: \"space-around\",\n                        display: \"flex\",\n                        paddingTop: \"13px\",\n                        paddingBottom: \"13px\"\n                      }}\n                    >\n                      <Tooltip title=\"Remind me\">\n                        <AddAlertOutlinedIcon />\n                      </Tooltip>\n                      <Tooltip title=\"Collaborator\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"#000\"\n                        >\n                          <path d=\"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\" />\n                        </svg>\n                      </Tooltip>\n                      <Tooltip title=\" Change color\">\n                        <PaletteOutlinedIcon />\n                      </Tooltip>\n                      <AddArchive propsarchivenote={this.state.notearr.id} />\n                      <Tooltip title=\" More\">\n                        <Showmoreoption\n                          propsdisplaynote={this.state.notearr.id}\n                        />\n                      </Tooltip>\n                      <Button onClick={this.handleClose}>close</Button>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            ) : null}\n          </Dialog>\n        </div>\n        <Snackbar\n          key={messageInfo.key}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{messageInfo.message}</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose1}>\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      \n      \n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps) (Displaynotes);\n"]},"metadata":{},"sourceType":"module"}