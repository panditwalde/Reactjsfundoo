{"ast":null,"code":"// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\n// import NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\n// import DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n// import EditOutlinedIcon from '@material-ui/icons/EditOutlined';\n// import EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\n// const drawerWidth = 240;\n// const styles = theme => ({\n//   root: {\n//     display: 'flex',\n//   },\n//   appBar: {\n//     transition: theme.transitions.create(['margin', 'width'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     marginLeft: drawerWidth,\n//     transition: theme.transitions.create(['margin', 'width'], {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//   },\n//   menuButton: {\n//     marginLeft: 12,\n//     marginRight: 20,\n//   },\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: drawerWidth,\n//   },\n//   drawerHeader: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     padding: '0 8px',\n//     ...theme.mixins.toolbar,\n//     justifyContent: 'flex-end',\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing.unit * 3,\n//     transition: theme.transitions.create('margin', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     marginLeft: -drawerWidth,\n//   },\n//   contentShift: {\n//     transition: theme.transitions.create('margin', {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//     marginLeft: 0,\n//   },\n// });\n// class PersistentDrawerLeft extends React.Component {\n//   constructor(props) {\n//       super(props)\n//       this.state = {\n//           e open:fals\n//       }\n//   }\n//   handleDrawerOpen = () => {\n//     this.setState({ open: true });\n//   };\n//   handleDrawerClose = () => {\n//     this.setState({ open: false });\n//   };\n//   render() {\n//     const { classes } = this.props;\n//     const { open } = this.state;\n//     return (\n//       <div className={classes.root}>\n//         <CssBaseline />\n//           <Toolbar disableGutters={!open}>\n//             {/* <IconButton style={{width:'0px'}}\n//               color=\"inherit\"\n//               aria-label=\"Open drawer\"\n//               onClick={this.state.open?this.handleDrawerClose:this.handleDrawerOpen}\n//             > */}\n//               <MenuIcon \n//               color=\"inherit\"\n//               aria-label=\"Open drawer\"\n//               onClick={this.state.open?this.handleDrawerClose:this.handleDrawerOpen}/>\n//             {/* </IconButton> */}\n//           </Toolbar>\n//         <Drawer   \n//           className={classes.drawer}\n//           variant=\"persistent\"\n//           anchor=\"left\"\n//           open={open}\n//           classes={{\n//             paper: classes.drawerPaper,\n//           }}\n//         >\n//           <Divider />\n//           <List>\n//             {['Notes', 'Reminder'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <EmojiObjectsOutlinedIcon /> : <NotificationsOutlinedIcon />}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n//           <Divider />\n//           <List>\n//           {['abc', 'Edit lables'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <LabelOutlinedIcon /> : <EditOutlinedIcon />}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n//           <Divider />\n//           <List>\n//             {['Archive', 'Trash'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <DeleteOutlineOutlinedIcon />}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n//         </Drawer>\n//         <main\n//         >\n//           <div className={classes.drawerHeader} />\n//         </main>\n//       </div>\n//     );\n//   }\n// }\n// PersistentDrawerLeft.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   theme: PropTypes.object.isRequired,\n// };\n// export default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Drawer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React from 'react';\n// import PropTypes from 'prop-types';\n// import { withStyles } from '@material-ui/core/styles';\n// import Drawer from '@material-ui/core/Drawer';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import List from '@material-ui/core/List';\n// import Divider from '@material-ui/core/Divider';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\n// import ListItem from '@material-ui/core/ListItem';\n// import ListItemIcon from '@material-ui/core/ListItemIcon';\n// import ListItemText from '@material-ui/core/ListItemText';\n// import InboxIcon from '@material-ui/icons/MoveToInbox';\n// import LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\n// import NotificationsOutlinedIcon from '@material-ui/icons/NotificationsOutlined';\n// import DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n// import EditOutlinedIcon from '@material-ui/icons/EditOutlined';\n// import EmojiObjectsOutlinedIcon from '@material-ui/icons/EmojiObjectsOutlined';\n// const drawerWidth = 240;\n\n// const styles = theme => ({\n//   root: {\n//     display: 'flex',\n//   },\n//   appBar: {\n//     transition: theme.transitions.create(['margin', 'width'], {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//   },\n//   appBarShift: {\n//     width: `calc(100% - ${drawerWidth}px)`,\n//     marginLeft: drawerWidth,\n//     transition: theme.transitions.create(['margin', 'width'], {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n\n//     }),\n//   },\n//   menuButton: {\n//     marginLeft: 12,\n//     marginRight: 20,\n//   },\n//   hide: {\n//     display: 'none',\n//   },\n//   drawer: {\n//     width: drawerWidth,\n//     flexShrink: 0,\n//   },\n//   drawerPaper: {\n//     width: drawerWidth,\n//   },\n//   drawerHeader: {\n//     display: 'flex',\n//     alignItems: 'center',\n//     padding: '0 8px',\n//     ...theme.mixins.toolbar,\n//     justifyContent: 'flex-end',\n//   },\n//   content: {\n//     flexGrow: 1,\n//     padding: theme.spacing.unit * 3,\n//     transition: theme.transitions.create('margin', {\n//       easing: theme.transitions.easing.sharp,\n//       duration: theme.transitions.duration.leavingScreen,\n//     }),\n//     marginLeft: -drawerWidth,\n//   },\n//   contentShift: {\n//     transition: theme.transitions.create('margin', {\n//       easing: theme.transitions.easing.easeOut,\n//       duration: theme.transitions.duration.enteringScreen,\n//     }),\n//     marginLeft: 0,\n//   },\n// });\n\n// class PersistentDrawerLeft extends React.Component {\n//   constructor(props) {\n//       super(props)\n  \n//       this.state = {\n//           e open:fals\n//       }\n//   }\n  \n\n//   handleDrawerOpen = () => {\n//     this.setState({ open: true });\n//   };\n\n//   handleDrawerClose = () => {\n//     this.setState({ open: false });\n//   };\n\n \n//   render() {\n//     const { classes } = this.props;\n//     const { open } = this.state;\n\n//     return (\n//       <div className={classes.root}>\n//         <CssBaseline />\n       \n//           <Toolbar disableGutters={!open}>\n//             {/* <IconButton style={{width:'0px'}}\n//               color=\"inherit\"\n//               aria-label=\"Open drawer\"\n//               onClick={this.state.open?this.handleDrawerClose:this.handleDrawerOpen}\n//             > */}\n//               <MenuIcon \n//               color=\"inherit\"\n//               aria-label=\"Open drawer\"\n//               onClick={this.state.open?this.handleDrawerClose:this.handleDrawerOpen}/>\n             \n//             {/* </IconButton> */}\n            \n//           </Toolbar>\n       \n//         <Drawer   \n//           className={classes.drawer}\n//           variant=\"persistent\"\n//           anchor=\"left\"\n//           open={open}\n//           classes={{\n//             paper: classes.drawerPaper,\n//           }}\n//         >\n         \n//           <Divider />\n//           <List>\n            \n//             {['Notes', 'Reminder'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <EmojiObjectsOutlinedIcon /> : <NotificationsOutlinedIcon />}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n\n//           </List>\n//           <Divider />\n//           <List>\n//           {['abc', 'Edit lables'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <LabelOutlinedIcon /> : <EditOutlinedIcon />}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n           \n//           <Divider />\n//           <List>\n//             {['Archive', 'Trash'].map((text, index) => (\n//               <ListItem button key={text}>\n//                 <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <DeleteOutlineOutlinedIcon />}</ListItemIcon>\n//                 <ListItemText primary={text} />\n//               </ListItem>\n//             ))}\n//           </List>\n         \n//         </Drawer>\n//         <main\n          \n//         >\n//           <div className={classes.drawerHeader} />\n          \n         \n//         </main>\n//       </div>\n//     );\n//   }\n// }\n\n// PersistentDrawerLeft.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   theme: PropTypes.object.isRequired,\n// };\n\n// export default withStyles(styles, { withTheme: true })(PersistentDrawerLeft);"]},"metadata":{},"sourceType":"module"}