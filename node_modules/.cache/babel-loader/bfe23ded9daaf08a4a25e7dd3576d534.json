{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js\";\nimport React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin, deletelabel } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\n\nconst mapStateToProps = state => {\n  return {\n    view: state.view,\n    openDrawer: state.openDrawer\n  };\n};\n\nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n    this.queue = [];\n\n    this.handlesetArchive = archive => {};\n\n    this.handlesetLabel = labels => {\n      console.log(\"display\" + labels);\n      this.setState({\n        labelarray: labels\n      });\n    };\n\n    this.processQueue = () => {\n      if (this.queue.length > 0) {\n        this.setState({\n          messageInfo: this.queue.shift(),\n          opensnackbar: true\n        });\n      }\n    };\n\n    this.handleExited = () => {\n      this.processQueue();\n    };\n\n    this.handleDeleteLabel = id => {\n      console.log(id);\n      let token = localStorage.getItem(\"Token\");\n      deletelabel(id, token).then(Response => {\n        console.log(\"remove label\");\n        this.setState({\n          opensnackbar: true,\n          Snackbarmsg: 'remove label'\n        });\n        this.getAllNotes();\n      }).catch(err => {\n        console.log(\"remove label\");\n      });\n    };\n\n    this.handleReminder = reminder => {};\n\n    this.handleUpdatetitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n      console.log(\"ddd\" + this.state.title);\n    };\n\n    this.handleUpdatedescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n      console.log(this.state.description);\n    };\n\n    this.handleClose1 = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.handleClose = () => {\n      console.log(\"close \");\n      this.setState({\n        dialogOpen: false\n      });\n      let updatenote = {};\n      console.log(this.state.title);\n      console.log(this.state.description);\n      updatenote.title = this.state.title;\n      updatenote.description = this.state.description;\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.state.notearr.id;\n      editNote(updatenote, noteid, token).then(Response => {\n        let message = \"Note update successfully \";\n        console.log(\"update note\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.setState({\n          opensnackbar: true,\n          Snackbarmsg: message\n        });\n      }).catch(err => {\n        console.log(\"not update note\");\n      });\n    };\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === false && element.archive === false && element.pin === false) {\n            array.push(element);\n          }\n\n          console.log(array);\n\n          if (element.archive === false && element.trash === false && element.pin === true) {\n            array1.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n        console.log(\"a\" + array);\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleDialogOpen = note => {\n      console.log(note);\n      this.setState({\n        dialogOpen: !this.state.dialogOpen,\n        notearr: note\n      });\n    };\n\n    this.handlesetColor = color => {};\n\n    this.handlepinunpin = noteid => {\n      console.log(\"dd\");\n      let message = \"pin change\";\n      let token = localStorage.getItem(\"Token\");\n      pinUnpin(token, noteid).then(Response => {\n        console.log(\"pinunpin done\");\n        this.getAllNotes();\n        this.setState({\n          opensnackbar: true,\n          Snackbarmsg: message\n        });\n      }).catch(err => {\n        console.log(\"not done error\");\n      });\n    };\n\n    this.handleDelete = noteid => {\n      let message = \"remove reminder\";\n      let token = localStorage.getItem(\"Token\");\n      removeReminder(noteid, token).then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.setState({\n          opensnackbar: true,\n          Snackbarmsg: message\n        });\n      }).catch({// console.log(\"fail..\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn = true;\n\n    if (_token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnackbar: false,\n      messageInfo: {},\n      Snackbarmsg: '',\n      labelarray: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n    console.log(\"ddd\" + this.props.drawer);\n    console.log(\"ddd\" + this.props.view);\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      });\n    }\n\n    const messageInfo = this.state.messageInfo;\n    console.log(this.state.pinUnpinArray);\n    console.log(this.props.openDrawer);\n    return React.createElement(\"div\", {\n      className: this.props.openDrawer ? \"draweropen\" : \"drawerclose\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(CreateNote, {\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), this.state.allNote.length !== 0 || this.state.pinUnpinArray.length !== 0 ? null : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        opacity: \".3\",\n        width: \"800px\",\n        alignItems: \"center\",\n        paddingTop: \"19%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(EmojiObjectsOutlinedIcon, {\n      style: {\n        fontSize: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Your notes appear here\"), \" \"), this.state.pinUnpinArray.length !== 0 ? React.createElement(\"div\", {\n      className: this.props.view ? \"listview\" : \"gridview1\",\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"8%\",\n        paddingLeft: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"PINNED\") : null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, this.state.pinUnpinArray.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"listview\" : \"gridview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\",\n        border: \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"unpin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: \"2%\"\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacebetween\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: 'wrap'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder // label={moment(note.reminder).format('YYYY MMM D, HH:mm A')}\n      ,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401\n      },\n      __self: this\n    }) : null, note.listOfLabels.length !== 1 ? note.listOfLabels.map(col => col.lable_title !== null ? React.createElement(\"div\", {\n      className: \"hoverChip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      size: \"small\",\n      label: col.lable_title,\n      style: {\n        width: \"fit-content\"\n      },\n      icon: React.createElement(\"div\", {\n        className: \"clearButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }, React.createElement(ClearIcon, {\n        onClick: () => this.handleDeleteLabel(col.id),\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      })),\n      clickable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    })) : null) : null, note.collabrators != null ? note.collabrators.map(col => React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }))) : null), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.view ? \"footer1\" : \"footer2\" // style={{\n      //   justifyContent: \"flex-start\",\n      //   display: \"flex\",\n      //   padding: \"12px\",\n      //   paddingBottom: \"13px\"\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      className: this.props.view ? null : \"footerpadding\",\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      onSelectReminder: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      onSelectColor: this.handlesetColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      onSelectArchive: this.handlesetArchive,\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      onClick: () => this.handlepinunpin(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      onSelectLabel: this.handlesetLabel,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    })))))))), this.state.pinUnpinArray.length !== 0 ? React.createElement(\"div\", {\n      className: this.props.view ? \"listview\" : \"gridview1\",\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"6%\",\n        paddingLeft: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514\n      },\n      __self: this\n    }, \"OTHERS\") : null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\",\n        paddingTop: \"6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, this.state.allNote.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"listview\" : \"gridview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: \"2%\"\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacebetween\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: 'wrap',\n        paddingLeft: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 613\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder // label={moment(note.reminder).format('YYYY MMM D, HH:mm A')}\n      ,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }) : null, note.listOfLabels.length !== 1 ? note.listOfLabels.map(col => col.lable_title !== null ? React.createElement(Chip, {\n      onClick: () => this.handleDeleteLabel(col.id),\n      size: \"small\",\n      label: col.lable_title,\n      style: {},\n      icon: React.createElement(\"div\", {\n        className: \"clearButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(ClearIcon, {\n        onClick: () => this.handleDeleteLabel(col.id),\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 656\n        },\n        __self: this\n      })),\n      clickable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }) : null) : null, note.collabrators != null ? note.collabrators.map(col => React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }))) : null), React.createElement(\"div\", {\n      className: \"footerarea\",\n      style: {\n        paddingTop: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 684\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.view ? \"footer1\" : \"footer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      onSelectReminder: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 691\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      onSelectColor: this.handlesetColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 699\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      onSelectArchive: this.handlesetArchive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 704\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 709\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      onSelectLabel: this.handlesetLabel,\n      propsdisplaynote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 710\n      },\n      __self: this\n    }))))))), React.createElement(Dialog, {\n      open: this.state.dialogOpen,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 722\n      },\n      __self: this\n    }, this.state.notearr !== null ? React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 729\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"484px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: this.state.notearr.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 730\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 743\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatetitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 758\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 759\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 766\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 767\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatedescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 781\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacebetween\",\n        display: \"flex\",\n        flexDirection: \"row\",\n        flexWrap: 'wrap'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 794\n      },\n      __self: this\n    }, this.state.notearr.reminder != null ? React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: this.state.notearr.reminder // label={moment(note.reminder).format('YYYY MMM D, HH:mm A')}\n      ,\n      onDelete: () => this.handleDelete(this.state.notearr.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 804\n      },\n      __self: this\n    }) : null, this.state.notearr.listOfLabels.length !== 1 ? this.state.notearr.listOfLabels.map(col => col.lable_title !== null ? React.createElement(Chip, {\n      onClick: () => this.handleDeleteLabel(col.id),\n      size: \"small\",\n      label: col.lable_title,\n      style: {\n        width: \"95px\"\n      },\n      icon: React.createElement(\"div\", {\n        className: \"clearButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 833\n        },\n        __self: this\n      }, React.createElement(ClearIcon, {\n        onClick: () => this.handleDeleteLabel(col.id),\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      })),\n      clickable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824\n      },\n      __self: this\n    }) : null) : null, this.state.notearr.collabrators != null ? this.state.notearr.collabrators.map(col => React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 853\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 854\n      },\n      __self: this\n    }))) : null), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 862\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-between\",\n        display: \"flex\",\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 863\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      onSelectReminder: this.handleReminder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 871\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: this.state.notearr.id,\n      propscollbratorid: this.state.notearr.collabrators !== null ? this.state.notearr.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 876\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      onSelectColor: this.handlesetColor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      onSelectArchive: this.handlesetArchive,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 890\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 895\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: this.state.notearr.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 896\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901\n      },\n      __self: this\n    }, \"close\"))))) : null)), React.createElement(Snackbar, {\n      key: messageInfo.key,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      onExited: this.handleExited,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, this.state.Snackbarmsg),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 924\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 909\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default connect(mapStateToProps, null)(Displaynotes);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js"],"names":["React","Component","Card","Tooltip","Button","Snackbar","Typography","AddAlertOutlinedIcon","PaletteOutlinedIcon","Dialog","DisplayAllNotes","editNote","removeReminder","pinUnpin","deletelabel","Showmoreoption","EmojiObjectsOutlinedIcon","ClearIcon","AddArchive","TextField","SetColor","AddReminder","Chip","CreateNote","Collaborator","AccountCircleIcon","Redirect","withStyles","IconButton","CloseIcon","connect","moment","mapStateToProps","state","view","openDrawer","Displaynotes","constructor","props","queue","handlesetArchive","archive","handlesetLabel","labels","console","log","setState","labelarray","processQueue","length","messageInfo","shift","opensnackbar","handleExited","handleDeleteLabel","id","token","localStorage","getItem","then","Response","Snackbarmsg","getAllNotes","catch","err","handleReminder","reminder","handleUpdatetitle","event","title","target","value","handleUpdatedescription","description","handleClose1","reason","handleClose","dialogOpen","updatenote","noteid","notearr","message","push","key","Date","getTime","array","array1","data","forEach","element","trash","pin","allNote","pinUnpinArray","handleDialogOpen","note","handlesetColor","color","handlepinunpin","handleDelete","loggedIn","open","more","UNSAFE_componentWillMount","drawer","render","display","flexDirection","justifyContent","opacity","width","alignItems","paddingTop","fontSize","flexWrap","paddingLeft","map","padding","boxShadow","backgroundColor","borderRadius","border","margin","disableUnderline","listOfLabels","col","lable_title","collabrators","paddingBottom","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin, deletelabel } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport EmojiObjectsOutlinedIcon from \"@material-ui/icons/EmojiObjectsOutlined\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Redirect } from \"react-router-dom\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment'\n\nconst mapStateToProps = state => {\n  return {\n    view: state.view,\n    openDrawer:state.openDrawer\n  };\n};\n\nexport class Displaynotes extends Component {\n  queue = [];\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnackbar: false,\n      messageInfo: {},\n      Snackbarmsg:'',\n      labelarray: []\n    };\n  }\n\n  handlesetArchive = archive => {};\n\n  handlesetLabel = labels => {\n    console.log(\"display\" + labels);\n\n    this.setState({\n      labelarray: labels\n    });\n  };\n\n  processQueue = () => {\n    if (this.queue.length > 0) {\n      this.setState({\n        messageInfo: this.queue.shift(),\n        opensnackbar: true\n      });\n    }\n  };\n  handleExited = () => {\n    this.processQueue();\n  };\n\n  handleDeleteLabel=(id)=>{\n    console.log(id);\n    \n\n    let token = localStorage.getItem(\"Token\");\n      \n     deletelabel(id,token).then(Response=>{\n       console.log(\"remove label\");\n       this.setState({ opensnackbar: true ,Snackbarmsg:'remove label'});\n\n         this.getAllNotes()\n     }).catch(err=>{\n      console.log(\"remove label\");\n     })\n\n\n  }\n\n  handleReminder = reminder => {};\n  handleUpdatetitle = event => {\n    this.setState({\n      title: event.target.value\n    });\n    console.log(\"ddd\" + this.state.title);\n  };\n\n  handleUpdatedescription = event => {\n    this.setState({\n      description: event.target.value\n    });\n    console.log(this.state.description);\n  };\n\n  handleClose1 = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    this.setState({ opensnackbar: false });\n  };\n  handleClose = () => {\n    console.log(\"close \");\n    this.setState({\n      dialogOpen: false\n    });\n\n    let updatenote = {};\n    console.log(this.state.title);\n    console.log(this.state.description);\n\n    updatenote.title = this.state.title;\n    updatenote.description = this.state.description;\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.state.notearr.id;\n\n    editNote(updatenote, noteid, token)\n      .then(Response => {\n        let message = \"Note update successfully \";\n        console.log(\"update note\");\n  \n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.setState({ opensnackbar: true ,Snackbarmsg:message});\n\n      })\n      .catch(err => {\n        console.log(\"not update note\");\n      });\n  };\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (\n            element.trash === false &&\n            element.archive === false &&\n            element.pin === false\n          ) {\n            array.push(element);\n          }\n          console.log(array);\n          if (\n            element.archive === false &&\n            element.trash === false &&\n            element.pin === true\n          ) {\n            array1.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n\n        console.log(\"a\" + array);\n\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  handleDialogOpen = note => {\n    console.log(note);\n    this.setState({\n      dialogOpen: !this.state.dialogOpen,\n      notearr: note\n    });\n  };\n\n  handlesetColor = color => {};\n\n  handlepinunpin = noteid => {\n    console.log(\"dd\");\n\n    let message = \"pin change\";\n\n    let token = localStorage.getItem(\"Token\");\n    pinUnpin(token, noteid)\n      .then(Response => {\n        console.log(\"pinunpin done\");\n     \n\n        this.getAllNotes();\n        this.setState({ opensnackbar: true ,Snackbarmsg:message});\n      })\n      .catch(err => {\n        console.log(\"not done error\");\n      });\n  };\n\n  handleDelete = noteid => {\n    let message = \"remove reminder\";\n\n    let token = localStorage.getItem(\"Token\");\n    removeReminder(noteid, token)\n      .then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n        this.queue.push({\n          message,\n          key: new Date().getTime()\n        });\n        this.setState({ opensnackbar: true ,Snackbarmsg:message});\n      })\n      .catch({\n        // console.log(\"fail..\");\n      });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n    console.log(\"ddd\"+this.props.drawer);\n    console.log(\"ddd\"+this.props.view);\n\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return <Redirect to=\"/login\" />;\n    }\n    const { messageInfo } = this.state;\n    \n        console.log(this.state.pinUnpinArray);\n        console.log(this.props.openDrawer);\n\n        \n\n    return (\n      <div  \n      className={this.props.openDrawer ? \"draweropen\": \"drawerclose\"}\n      >\n        <div>\n          <CreateNote refresh={this.getAllNotes} />\n        </div>\n\n        {this.state.allNote.length !== 0 ||\n        this.state.pinUnpinArray.length !== 0 ? null : (\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              opacity: \".3\",\n              width: \"800px\",\n              alignItems: \"center\",\n              paddingTop: \"19%\"\n            }}\n          >\n            <EmojiObjectsOutlinedIcon style={{ fontSize: \"7.5rem\" }} />{\" \"}\n            <b>Your notes appear here</b>{\" \"}\n          </div>\n        )}\n\n        {this.state.pinUnpinArray.length !== 0 ? (\n          <div\n            className={this.props.view ? \"listview\" : \"gridview1\"}\n            style={{\n              display: \"flex\",\n              width: \"800px\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              paddingTop: \"8%\",\n              paddingLeft: \"11%\"\n            }}\n          >\n            PINNED\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\"\n          }}\n        >\n          {this.state.pinUnpinArray.map(note => (\n            <div className=\"trashnoted\" style={{ padding: 5 }}>\n              <Card\n                className={this.props.view ? \"listview\" : \"gridview\"}\n                style={{\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\",\n                  \n                  border:\"2px\"\n\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    padding: \"2%\"\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                    style={{ paddingTop: \"1%\" }}\n                  >\n                    <Tooltip title=\"unpin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    padding: \"2%\"\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n\n\n                {/* { note.reminder != null  || note.listOfLabels.length !== 1 || note.collabrators != null?():(null) } */}\n                <div\n                  style={{\n                    justifyContent: \"spacebetween\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap:'wrap'\n                  }}\n                >\n                  {note.reminder != null ? (\n                    \n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        // label={moment(note.reminder).format('YYYY MMM D, HH:mm A')}\n\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                \n                  ) : null}\n\n                 \n                     \n                    {note.listOfLabels.length !== 1\n                       \n                        \n                      ? (note.listOfLabels.map(col => (\n                           \n                          \n                         \n                         col.lable_title!==null?(   <div  className=\"hoverChip\"><Chip\n                          \n                        \n                        size=\"small\"\n                        label={col.lable_title}\n                        style={{\n                        width: \"fit-content\"\n                        }}\n                        icon={\n                        <div className=\"clearButton\">\n                      \n        \n                        <ClearIcon\n                        onClick={() =>\n                        this.handleDeleteLabel(col.id)\n                        }\n                        fontSize=\"small\"\n                        />\n                        </div>\n                        }\n                        clickable={true}\n                        /></div>):(null)\n                       \n                        )))\n                      : null}\n                \n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          \n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                         \n                        ))\n                      : null}\n                  \n                </div>\n\n\n\n\n\n\n                <div className=\"footerarea\">\n                  <div\n                    className={this.props.view ? \"footer1\" : \"footer2\"}\n\n                    // style={{\n                    //   justifyContent: \"flex-start\",\n                    //   display: \"flex\",\n                    //   padding: \"12px\",\n                    //   paddingBottom: \"13px\"\n                    // }}\n                  >\n                    <AddReminder\n                      className={this.props.view ? null : \"footerpadding\"}\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectReminder={this.handleReminder}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectColor={this.handlesetColor}\n                    />\n                    <AddArchive\n                      onSelectArchive={this.handlesetArchive}\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                      onClick={() => this.handlepinunpin(note.id)}\n                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        propsdisplaynote={note.id}\n                        onSelectLabel={this.handlesetLabel}\n                        refresh={this.getAllNotes}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n        </div>\n        {this.state.pinUnpinArray.length !== 0 ? (\n          <div\n            className={this.props.view ? \"listview\" : \"gridview1\"}\n            style={{\n              display: \"flex\",\n              width: \"800px\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              paddingTop: \"6%\",\n              paddingLeft: \"11%\"\n            }}\n          >\n            OTHERS\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\",\n            paddingTop: \"6%\"\n          }}\n        >\n          {this.state.allNote.map(note => (\n            <div className=\"trashnoted\" style={{ padding: 5 }}>\n              <Card\n                className={this.props.view ? \"listview\" : \"gridview\"}\n                style={{\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    padding: \"2%\"\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                    style={{ paddingTop: \"1%\" }}\n                  >\n                    <Tooltip title=\"pin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    padding: \"2%\"\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n\n                <div\n                  style={{\n                    justifyContent: \"spacebetween\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap:'wrap',\n                    paddingLeft: \"5%\",\n\n                  }}\n                >\n                  {note.reminder != null ? (\n                    \n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        // label={moment(note.reminder).format('YYYY MMM D, HH:mm A')}\n\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                \n                  ) : null}\n\n                 \n                     \n                    {note.listOfLabels.length !== 1\n                       \n                        \n                      ? (note.listOfLabels.map(col => (\n                           \n                         \n                     \n                         col.lable_title!==null?( <Chip\n                        onClick={() =>\n                          this.handleDeleteLabel(col.id) }\n                        size=\"small\"\n                        label={col.lable_title}\n                        style={{\n                        }}\n                        icon={\n                        <div className=\"clearButton\">\n\n\n                        <ClearIcon\n                        onClick={() =>\n                        this.handleDeleteLabel(col.id)\n                        }\n                        fontSize=\"small\"\n                        />\n                        </div>\n                        }\n                        clickable={true}\n                        />):(null)\n                       \n                        )))\n                      : null}\n                \n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          \n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                         \n                        ))\n                      : null}\n                  \n                </div>\n\n\n\n                <div className=\"footerarea\" style={{ paddingTop: \"4%\" }}>\n                  <div className={this.props.view ? \"footer1\" : \"footer2\"}>\n                    <AddReminder\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectReminder={this.handleReminder}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectColor={this.handlesetColor}\n                    />\n                    <AddArchive\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                      onSelectArchive={this.handlesetArchive}\n                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        onSelectLabel={this.handlesetLabel}\n                        propsdisplaynote={note.id}\n                        refresh={this.getAllNotes}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n\n          <Dialog\n            open={this.state.dialogOpen}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            style={{ width: \"100%\", }}\n          >\n            {this.state.notearr !== null ? (\n              <div className=\"trashnoted\" style={{ padding: 5 }}>\n                <Card\n                  style={{\n                    width: \"484px\",\n                    boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                    backgroundColor: this.state.notearr.color\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"standard-full-width\"\n                        style={{ margin: 8 }}\n                        defaultValue={this.state.notearr.title}\n                        multiline\n                        fullWidth\n                        margin=\"normal\"\n                        InputProps={{\n                          disableUnderline: true\n                        }}\n                        onChange={this.handleUpdatetitle}\n                      />\n                    </div>\n\n                    <div className=\"footerarea\">\n                      <Tooltip title=\"pin note \">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                          <path\n                            fill=\"#000\"\n                            d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                          />\n                        </svg>\n                      </Tooltip>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <TextField\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      defaultValue={this.state.notearr.description}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                      onChange={this.handleUpdatedescription}\n                    />\n                  </div>\n                 <div\n                  style={{\n                    justifyContent: \"spacebetween\",\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    flexWrap:'wrap'\n                  }}\n                >\n                  {this.state.notearr.reminder != null ? (\n                    \n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={this.state.notearr.reminder}\n                        // label={moment(note.reminder).format('YYYY MMM D, HH:mm A')}\n\n                        onDelete={() => this.handleDelete(this.state.notearr.id)}\n                        variant=\"outlined\"\n                      />\n                \n                  ) : null}\n\n                 \n                     \n                    {this.state.notearr.listOfLabels.length !== 1\n                       \n                        \n                      ? (this.state.notearr.listOfLabels.map(col => (\n                           \n                         \n                     \n                         col.lable_title!==null?( <Chip\n                        onClick={() =>\n                          this.handleDeleteLabel(col.id) }\n                        size=\"small\"\n                        label={col.lable_title}\n                        style={{\n                        width: \"95px\"\n                        }}\n                        icon={\n                        <div className=\"clearButton\">\n\n\n                        <ClearIcon\n                        onClick={() =>\n                        this.handleDeleteLabel(col.id)\n                        }\n                        fontSize=\"small\"\n                        />\n                        </div>\n                        }\n                        clickable={true}\n                        />):(null)\n                       \n                        )))\n                      : null}\n                \n                    {this.state.notearr.collabrators != null\n                      ? this.state.notearr.collabrators.map(col => (\n                          \n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                         \n                        ))\n                      : null}\n                  \n                </div>\n\n                  <div className=\"footerarea\">\n                    <div\n                      style={{\n                        justifyContent: \"space-between\",\n                        display: \"flex\",\n                        paddingTop: \"13px\",\n                        paddingBottom: \"13px\"\n                      }}\n                    >\n                      <AddReminder\n                        propsRemindernote={this.state.notearr.id}\n                        refresh={this.getAllNotes}\n                        onSelectReminder={this.handleReminder}\n                      />\n                      <Collaborator\n                        propsRemindernote={this.state.notearr.id}\n                        propscollbratorid={\n                          this.state.notearr.collabrators !== null\n                            ? this.state.notearr.collabrators\n                            : null\n                        }\n                        refresh={this.getAllNotes}\n                      />\n                      <SetColor\n                        propsColornote={this.state.notearr.id}\n                        refresh={this.getAllNotes}\n                        onSelectColor={this.handlesetColor}\n                      />\n                      <AddArchive\n                        propsarchivenote={this.state.notearr.id}\n                        refresh={this.getAllNotes}\n                        onSelectArchive={this.handlesetArchive}\n                      />\n                      <Tooltip title=\" More\">\n                        <Showmoreoption\n                          propsdisplaynote={this.state.notearr.id}\n                          refresh={this.getAllNotes}\n                        />\n                      </Tooltip>\n                      <Button onClick={this.handleClose}>close</Button>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            ) : null}\n          </Dialog>\n        </div>\n        <Snackbar\n          key={messageInfo.key}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{this.state.Snackbarmsg}</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.handleClose1}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps,null)(Displaynotes);\n"]},"metadata":{},"sourceType":"module"}