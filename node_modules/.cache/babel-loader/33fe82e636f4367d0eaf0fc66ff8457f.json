{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js\";\nimport React, { Component } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport CheckBoxOutlinedIcon from \"@material-ui/icons/CheckBoxOutlined\";\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport MoreVertOutlinedIcon from \"@material-ui/icons/MoreVertOutlined\";\nimport ReplayOutlinedIcon from \"@material-ui/icons/ReplayOutlined\";\nimport RedoOutlinedIcon from \"@material-ui/icons/RedoOutlined\";\nimport { DisplayAllNotes } from \"./Service\";\nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handledisplaynote = () => {\n      this.setState({\n        open: true\n      });\n      console.log(this.state.open);\n    };\n\n    this.handleclosenote = () => {\n      this.setState({\n        open: false\n      });\n      console.log(this.state.open);\n    };\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        console.log(Response.data.data);\n        this.setState({\n          allNote: Response.data.data\n        });\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.state = {\n      open: false,\n      allNote: []\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"displaynotemain\",\n      onMouseEnter: this.handledisplaynote,\n      onMouseLeave: this.handleclosenote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.allNote.map(note => {}));\n  }\n\n}\nexport default Displaynotes;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js"],"names":["React","Component","Card","ImageOutlinedIcon","CheckBoxOutlinedIcon","CreateOutlinedIcon","AddAlertOutlinedIcon","PaletteOutlinedIcon","ArchiveOutlinedIcon","MoreVertOutlinedIcon","ReplayOutlinedIcon","RedoOutlinedIcon","DisplayAllNotes","Displaynotes","constructor","props","handledisplaynote","setState","open","console","log","state","handleclosenote","getAllNotes","token","localStorage","getItem","then","Response","data","allNote","catch","err","UNSAFE_componentWillMount","render","map","note"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAO,6BAAP;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,eAAT,QAAgC,WAAhC;AACA,OAAO,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAC1Ca,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,iBARmB,GAQC,MAAM;AACxB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,IAAvB;AACD,KAXkB;;AAAA,SAYnBI,eAZmB,GAYD,MAAM;AACtB,WAAKL,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWH,IAAvB;AACD,KAfkB;;AAAA,SAiBnBK,WAjBmB,GAiBL,MAAM;AAClB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAEAd,MAAAA,eAAe,CAACY,KAAD,CAAf,CACGG,IADH,CACQC,QAAQ,IAAI;AAChBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,IAAT,CAAcA,IAA1B;AACA,aAAKZ,QAAL,CAAc;AACZa,UAAAA,OAAO,EAACF,QAAQ,CAACC,IAAT,CAAcA;AADV,SAAd;AAOD,OAVH,EAWGE,KAXH,CAWSC,GAAG,IAAI;AACZb,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAbH;AAcD,KAlCkB;;AAGjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,IAAI,EAAE,KADK;AAEXY,MAAAA,OAAO,EAAE;AAFE,KAAb;AAID;;AA4BDG,EAAAA,yBAAyB,GACzB;AACE,SAAKV,WAAL;AACD;;AACDW,EAAAA,MAAM,GAAG;AAKP,WACE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEI,MAAA,YAAY,EAAE,KAAKlB,iBAFvB;AAGE,MAAA,YAAY,EAAE,KAAKM,eAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKK,KAAKD,KAAL,CAAWS,OAAX,CAAmBK,GAAnB,CAAwBC,IAAI,IAAE,CAI9B,CAJA,CALL,CADF;AAiBD;;AA9DyC;AAiE5C,eAAevB,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport ImageOutlinedIcon from \"@material-ui/icons/ImageOutlined\";\nimport CheckBoxOutlinedIcon from \"@material-ui/icons/CheckBoxOutlined\";\nimport CreateOutlinedIcon from \"@material-ui/icons/CreateOutlined\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport MoreVertOutlinedIcon from \"@material-ui/icons/MoreVertOutlined\";\nimport ReplayOutlinedIcon from \"@material-ui/icons/ReplayOutlined\";\nimport RedoOutlinedIcon from \"@material-ui/icons/RedoOutlined\";\nimport { DisplayAllNotes } from \"./Service\";\nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      allNote: []\n    };\n  }\n  handledisplaynote = () => {\n    this.setState({ open: true });\n    console.log(this.state.open);\n  };\n  handleclosenote = () => {\n    this.setState({ open: false });\n    console.log(this.state.open);\n  };\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        console.log(Response.data.data);\n        this.setState({\n          allNote:Response.data.data\n\n\n\n\n        })\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n  UNSAFE_componentWillMount()\n  {\n    this.getAllNotes()\n  }\n  render() {\n\n          \n     \n       \n    return (\n      <div\n        className=\"displaynotemain\"\n          onMouseEnter={this.handledisplaynote}\n        onMouseLeave={this.handleclosenote}\n      >\n         { this.state.allNote.map((note=>{\n           \n                       \n         \n          }\n           ))}\n\n       \n        {}\n      </div>\n    );\n  }\n}\n\nexport default Displaynotes;\n"]},"metadata":{},"sourceType":"module"}