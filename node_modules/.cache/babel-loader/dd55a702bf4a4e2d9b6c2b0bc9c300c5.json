{"ast":null,"code":"import axios from \"axios\";\nexport function UserRegistration(regDto) {\n  return axios.post(\"http://localhost:8080/register\", regDto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function userLogin(logindto) {\n  return axios.post(\"http://localhost:8080/login\", logindto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function forgotPassword(email) {\n  return axios.post(\"http://localhost:8080/forgotpassword\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      email: email\n    }\n  });\n}\nexport function setNewPassword(token, setnewassword) {\n  return axios.post(\"http://localhost:8080/setNewPassword\", setnewassword, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function chanageprofile(file, token) {\n  return axios.post(\"http://localhost:8080/addprofile\", file, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      token: token\n    }\n  });\n}\nexport function deleteNote(noteid, token) {\n  return axios.delete(`http://localhost:8081/deletenote?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function createNote(notedto, token) {\n  console.log(notedto.collabrator);\n  return axios.post(\"http://localhost:8081/createnote\", notedto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function DisplayAllNotes(token) {\n  return axios.get(\"http://localhost:8081/getallnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function editNote(notedto, noteid, token) {\n  return axios.put(\"http://localhost:8081/editnote\", notedto, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addIntrash(noteid, token) {\n  return axios.put(\"http://localhost:8081/trash\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addInArchive(noteid, token) {\n  return axios.put(\"http://localhost:8081/archive\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function setColor(noteid, colorCode, token) {\n  return axios.put(\"http://localhost:8081/setcolor\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      noteid: noteid,\n      colorCode: colorCode,\n      token: token\n    }\n  });\n}\nexport function searchNote(note) {\n  let token = localStorage.getItem(\"Token\");\n  return axios.get(\"http://localhost:8081/searchnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      note: note,\n      token: token\n    }\n  });\n}\nexport function addLabel(label, token) {\n  return axios.post(\"http://localhost:8081/addlabel\", label, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addLabelWithnote(labeldto, token) {\n  console.log(labeldto.lable_title);\n  console.log(labeldto.noteid);\n  return axios.post(\"http://localhost:8081/addlabelwithnote\", labeldto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function DisplayAllLabel(token) {\n  return axios.get(\"http://localhost:8081/getalllabel\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function deletelabel(labelid, token) {\n  console.log(\"id\" + labelid);\n  console.log(\"token\" + token);\n  return axios.delete(`http://localhost:8081/deletelabel?labelid=${labelid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function editLabel(label_title, label_id, token) {\n  console.log(label_title);\n  console.log(label_id);\n  console.log(token);\n  return axios.put(`http://localhost:8081/updatelabel?label_id=${label_id}&label_title=${label_title}`, null, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addReminder(date, noteid, token) {\n  console.log(date);\n  console.log(noteid);\n  console.log();\n  return axios.put(`http://localhost:8081/addreminder?date=${date}&noteid=${noteid}`, null, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function removeReminder(noteid, token) {\n  console.log(noteid);\n  console.log(token);\n  return axios.delete(`http://localhost:8081/removereminder?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addCollabrator(collabraotoremail, noteid, token) {\n  console.log(collabraotoremail);\n  console.log(noteid);\n  return axios.put(`http://localhost:8081/addCollabrator?collabraotoremail=${collabraotoremail}&noteid=${noteid}`, null, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function removeCollabrator(email, noteid, token) {\n  console.log(\"e\" + email);\n  console.log(\"n\" + noteid);\n  console.log(token);\n  return axios.delete(`http://localhost:8081/removeCollabrator?email=${email}&noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function pinUnpin(token, noteid) {\n  return axios.put(\"http://localhost:8081/pinunpin\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function labelWithNote(labelid, token) {\n  console.log(\"id\" + labelid);\n  console.log(\"token\" + token);\n  return axios.get(`http://localhost:8081/labelwithnote?labelid=${labelid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function updateLabelWithNote(labelid, noteid, token) {\n  console.log(\"label id\" + labelid);\n  console.log(\"noteid id\" + noteid);\n  console.log(\"token\" + token);\n  return axios.put(`http://localhost:8081/UpdatelabelWithNotes?labelid=${labelid}&noteid=${noteid}&`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Service.js"],"names":["axios","UserRegistration","regDto","post","headers","userLogin","logindto","forgotPassword","email","setNewPassword","token","setnewassword","chanageprofile","file","deleteNote","noteid","delete","createNote","notedto","console","log","collabrator","DisplayAllNotes","get","editNote","put","params","addIntrash","addInArchive","setColor","colorCode","searchNote","note","localStorage","getItem","addLabel","label","addLabelWithnote","labeldto","lable_title","DisplayAllLabel","deletelabel","labelid","editLabel","label_title","label_id","addReminder","date","removeReminder","addCollabrator","collabraotoremail","removeCollabrator","pinUnpin","labelWithNote","updateLabelWithNote"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport function UserRegistration(regDto) {\n  return axios.post(\"http://localhost:8080/register\", regDto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function userLogin(logindto) {\n  return axios.post(\"http://localhost:8080/login\", logindto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function forgotPassword(email) {\n  return axios.post(\n    \"http://localhost:8080/forgotpassword\",\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        email: email\n      }\n    }\n  );\n}\n\nexport function setNewPassword(token, setnewassword) {\n\n  \n  \n  return axios.post(\"http://localhost:8080/setNewPassword\", setnewassword, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function chanageprofile(file, token) {\n  return axios.post(\"http://localhost:8080/addprofile\", file, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n      token: token\n    }\n  });\n}\n\nexport function deleteNote(noteid, token) {\n  return axios.delete(`http://localhost:8081/deletenote?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function createNote(notedto, token) {\n     console.log(notedto.collabrator);\n     \n  return axios.post(\"http://localhost:8081/createnote\", notedto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function DisplayAllNotes(token) {\n  return axios.get(\"http://localhost:8081/getallnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function editNote(notedto, noteid, token) {\n  return axios.put(\"http://localhost:8081/editnote\", notedto, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function addIntrash(noteid, token) {\n  return axios.put(\n    \"http://localhost:8081/trash\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function addInArchive(noteid, token) {\n  return axios.put(\n    \"http://localhost:8081/archive\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function setColor(noteid, colorCode, token) {\n  return axios.put(\n    \"http://localhost:8081/setcolor\",\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        noteid: noteid,\n        colorCode: colorCode,\n        token: token\n      }\n    }\n  );\n}\n\nexport function searchNote(note) {\n  let token = localStorage.getItem(\"Token\");\n\n  return axios.get(\n    \"http://localhost:8081/searchnote\",\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        note: note,\n        token: token\n      }\n    }\n  );\n}\nexport function addLabel(label, token) {\n  return axios.post(\"http://localhost:8081/addlabel\", label, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addLabelWithnote(labeldto, token) {\n  console.log(labeldto.lable_title);\n\n  console.log(labeldto.noteid);\n\n  return axios.post(\"http://localhost:8081/addlabelwithnote\", labeldto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function DisplayAllLabel(token) {\n  return axios.get(\"http://localhost:8081/getalllabel\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function deletelabel(labelid, token) {\n  console.log(\"id\" + labelid);\n  console.log(\"token\" + token);\n\n  return axios.delete(`http://localhost:8081/deletelabel?labelid=${labelid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function editLabel(label_title, label_id, token) {\n  console.log(label_title);\n  console.log(label_id);\n  console.log(token);\n\n  return axios.put(\n    `http://localhost:8081/updatelabel?label_id=${label_id}&label_title=${label_title}`,\n    null,\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function addReminder(date, noteid, token) {\n  console.log(date);\n  console.log(noteid);\n  console.log();\n\n  return axios.put(\n    `http://localhost:8081/addreminder?date=${date}&noteid=${noteid}`,\n    null,\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function removeReminder(noteid, token) {\n  console.log(noteid);\n  console.log(token);\n\n  return axios.delete(`http://localhost:8081/removereminder?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function addCollabrator(collabraotoremail, noteid, token) {\n  console.log(collabraotoremail);\n  console.log(noteid);\n\n  return axios.put(\n    `http://localhost:8081/addCollabrator?collabraotoremail=${collabraotoremail}&noteid=${noteid}`,\n    null,\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function removeCollabrator(email, noteid, token) {\n  console.log(\"e\" + email);\n  console.log(\"n\" + noteid);\n  console.log(token);\n\n  return axios.delete(\n    `http://localhost:8081/removeCollabrator?email=${email}&noteid=${noteid}`,\n\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function pinUnpin(token, noteid) {\n  return axios.put(\n    \"http://localhost:8081/pinunpin\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function labelWithNote(labelid, token) {\n  console.log(\"id\" + labelid);\n  console.log(\"token\" + token);\n\n  return axios.get(`http://localhost:8081/labelwithnote?labelid=${labelid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\n\nexport function updateLabelWithNote(labelid,noteid,token) {\n  console.log(\"label id\" + labelid);\n  console.log(\"noteid id\" + noteid);\n  console.log(\"token\" + token);\n\n  return axios.put(`http://localhost:8081/UpdatelabelWithNotes?labelid=${labelid}&noteid=${noteid}&`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}"]},"metadata":{},"sourceType":"module"}