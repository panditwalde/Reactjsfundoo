{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Addlabel.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Divider } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.HandlelablevalueChange = event => {\n      this.setState({\n        labelvalue: event.target.value\n      });\n    };\n\n    this.state = {\n      labelvalue: ''\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Button, {\n      \"aria-owns\": open ? \"simple-popper\" : undefined,\n      \"aria-haspopup\": \"true\",\n      variant: \"contained\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Add label\"), React.createElement(Popover, {\n      style: {\n        left: \"165.492px\"\n      },\n      id: \"simple-popper\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: classes.typography,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Label note\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Enter label name\",\n      onChange: this.HandlelablevalueChange,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), this.state.labelvalue !== '' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(AddRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"  Create \", React.createElement(\"b\", {\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"\\\"\", this.state.labelvalue, \"\\\"\"))) : null))));\n  }\n\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimplePopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Addlabel.js"],"names":["React","PropTypes","withStyles","Typography","Button","Popover","Input","InputLabel","InputAdornment","FormControl","TextField","Grid","AccountCircle","SearchIcon","AddRoundedIcon","Divider","styles","theme","typography","margin","spacing","unit","SimplePopover","Component","constructor","props","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","HandlelablevalueChange","labelvalue","target","value","render","classes","open","Boolean","undefined","left","vertical","horizontal","disableUnderline","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport { Divider } from \"@material-ui/core\";\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       labelvalue:''\n    }\n  }\n  \n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n  HandlelablevalueChange=event=>{\n\n    this.setState({\n      labelvalue: event.target.value\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <Button\n          aria-owns={open ? \"simple-popper\" : undefined}\n          aria-haspopup=\"true\"\n          variant=\"contained\"\n          onClick={this.handleClick}\n        >\n          Add label\n        </Button>\n        <Popover\n          style={{ left: \"165.492px\" }}\n          id=\"simple-popper\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          <Typography className={classes.typography}>\n            <div>\n              <div>Label note</div>\n              <div>\n                <FormControl className={classes.margin}>\n                  <Input\n                    placeholder=\"Enter label name\"\n                    onChange={this.HandlelablevalueChange}\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <SearchIcon />\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              </div>\n              <Divider/>\n              {this.state.labelvalue!==''?(\n                 <div>\n                 <span>< AddRoundedIcon /></span>\n                 <span>  Create <b  fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}>\"{this.state.labelvalue}\"</b></span>\n\n             </div>\n              ):(null)\n                 \n              }\n             \n            </div>\n          </Typography>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}