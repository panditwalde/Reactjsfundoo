{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displaynotewithlabel.js\";\nimport React, { Component } from \"react\";\nimport { labelWithNote } from \"./Service\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AddArchive from \"./AddArchive\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport \"../Cssfile/TrashNote.css\";\nimport LabelOutlinedIcon from \"@material-ui/icons/LabelOutlined\";\nimport { connect } from \"react-redux\";\n\nclass Displaynotewithlabel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllLabelWithNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      let labelid = this.props.location.state.label.id;\n      this.setState({\n        labelid: this.props.label_id\n      });\n      labelWithNote(this.props.label_id, token).then(Response => {\n        console.log(\"label with notes\");\n        let array = [];\n        console.log(Response.data.data);\n\n        if (Response.data.data !== null) {\n          Response.data.data.forEach(element => {\n            array.push(element);\n          });\n          this.setState({\n            labelwithnote: array\n          }, () => {\n            console.log(\"labelwithnote\", array.slice());\n          });\n        }\n      });\n    };\n\n    this.state = {\n      labelwithnote: [],\n      labelid: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps.label_id);\n\n    if (this.props.label_id !== prevProps.label_id) {\n      console.log(\"in if\");\n      this.setState({\n        labelid: this.props.label_id\n      });\n      this.getAllLabelWithNotes();\n    }\n  }\n\n  render() {\n    console.log(this.state.labelwithnote);\n    return React.createElement(\"div\", {\n      className: this.props.drawer ? \"draweropen\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.state.labelwithnote.length !== 0 ? null : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        opacity: \".3\",\n        width: '800px',\n        alignItems: \"center\",\n        paddingTop: \"27%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(LabelOutlinedIcon, {\n      style: {\n        fontSize: \"8.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"No notes with this label yet\"), \" \"), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\",\n        paddingTop: '14%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, console.log(this.state.labelwithnote), this.state.labelwithnote.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"gridview\" : \"listview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: '1%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"unpin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: '2%'\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.view ? \"footer1\" : \"footer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      className: this.props.view ? null : \"footerpadding\",\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      onClick: () => this.handlepinunpin(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      refresh: this.getAllNotes,\n      onSelectLabel: this.handlesetLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    label_id: state.label_id\n  };\n};\n\nexport default connect(mapStateToProps, null)(Displaynotewithlabel);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displaynotewithlabel.js"],"names":["React","Component","labelWithNote","Card","Tooltip","Button","Snackbar","Typography","TextField","SetColor","AddReminder","Chip","Collaborator","AccountCircleIcon","AddArchive","Showmoreoption","LabelOutlinedIcon","connect","Displaynotewithlabel","constructor","props","getAllLabelWithNotes","token","localStorage","getItem","labelid","location","state","label","id","setState","label_id","then","Response","console","log","array","data","forEach","element","push","labelwithnote","slice","componentDidUpdate","prevProps","prevState","render","drawer","length","display","flexDirection","justifyContent","opacity","width","alignItems","paddingTop","fontSize","flexWrap","paddingLeft","map","note","padding","view","boxShadow","backgroundColor","color","borderRadius","handleDialogOpen","margin","title","disableUnderline","handlepinunpin","description","reminder","handleDelete","collabrators","col","getAllNotes","handlesetLabel","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { labelWithNote } from \"./Service\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AddArchive from \"./AddArchive\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport \"../Cssfile/TrashNote.css\";\nimport LabelOutlinedIcon from \"@material-ui/icons/LabelOutlined\";\nimport { connect } from \"react-redux\";\n\nclass Displaynotewithlabel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      labelwithnote: [],\n      labelid:''\n    };\n  }\n  getAllLabelWithNotes = () => {\n\n    let token = localStorage.getItem(\"Token\");\n    let labelid=this.props.location.state.label.id;\n\n    this.setState({labelid:this.props.label_id})\n    \n    labelWithNote(this.props.label_id, token).then(Response => {\n      console.log(\"label with notes\");\n      let array = [];\n      console.log(Response.data.data);\n         \n       if( Response.data.data!==null){\n        Response.data.data.forEach(element => {\n          array.push(element);\n        });\n        this.setState({\n          labelwithnote: array\n      \n        }, () =>{console.log(\"labelwithnote\",array.slice());\n        });\n\n       }\n     \n     \n    });\n  };\n\n  componentDidUpdate(prevProps,prevState) {\n\n        \n        console.log(prevProps.label_id);\n        \n\n      if(this.props.label_id !== prevProps.label_id){\n        console.log(\"in if\");\n        \n        this.setState({\n          labelid : this.props.label_id\n        })\n                  this.getAllLabelWithNotes();\n      }\n   \n  }\n  render() {\n\n          \n          console.log(this.state.labelwithnote);\n        \n         \n          \n     \n    return (\n      <div       className={this.props.drawer ? \"draweropen\": null}>\n\n\n{this.state.labelwithnote.length !== 0  ? null : (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                opacity: \".3\",\n                width:'800px',\n                alignItems: \"center\",\n                paddingTop: \"27%\"\n              }}\n            >\n              <LabelOutlinedIcon style={{ fontSize: \"8.5rem\" }} />{\" \"}\n              <b>No notes with this label yet\n</b>{\" \"}\n            </div>\n          )}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\",\n            paddingTop:'14%'\n          }}  \n        >\n          \n        \n         {console.log(  this.state.labelwithnote)}\n          {this.state.labelwithnote.map(note => (\n            <div    className= \"trashnoted\"  style={{ padding: 5 }}>\n              <Card \n              className= {this.props.view ?(\"gridview\"):(\"listview\")} \n                style={{\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    padding:'2%'\n\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                    style={{paddingTop:'1%'}}\n                  >\n                    <Tooltip title=\"unpin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    padding:'2%'\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}\n                >\n                  {note.reminder != null ? (\n                    <div\n                      style={{\n                        justifyContent: \"spacearound\",\n                        display: \"flex\"\n                      }}\n                    >\n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                    </div>\n                  ) : null}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\",\n                      paddingLeft: \"6px\"\n                    }}\n                  >\n\n                     \n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          <div>\n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"footerarea\">\n                  <div  className= {this.props.view ?(\"footer1\"):(\"footer2\")} \n                     \n                  \n                  >\n                    <AddReminder\n                       className= {this.props.view ?(null):(\"footerpadding\")}\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <AddArchive\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                      onClick={() => this.handlepinunpin(note.id)}                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        propsdisplaynote={note.id}\n                        refresh={this.getAllNotes}\n                        onSelectLabel={this.handlesetLabel}\n\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    label_id: state.label_id\n  };\n};\n\n\n\nexport default connect(mapStateToProps, null) (Displaynotewithlabel);\n"]},"metadata":{},"sourceType":"module"}