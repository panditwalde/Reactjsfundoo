{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport \"../Cssfile/ResetPassword.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { setNewPassword } from \"./Service\";\nexport class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(state => ({\n        showPassword: !state.showPassword\n      }));\n    };\n\n    this.handleLastNameChange = event => {\n      this.setState({\n        lastName: event.target.value\n      });\n      console.log(this.state.lastName);\n    };\n\n    this.resetpasswordhandle = () => {\n      console.log(\"ddgfgge\");\n      let error = this.state.error;\n      let Password = this.state.password;\n      let cofpassword = this.state.confirmpassword;\n      let isvalid = this.state.isvalid;\n\n      if (Password === \"\") {\n        isvalid = false;\n        error[\"Passwordvalid\"] = \"password is required\";\n      }\n\n      if (cofpassword === \"\") {\n        console.log(\"cfmpassowrddddfgggfddd\");\n        isvalid = false;\n        error[\"cofpassword\"] = \"confirm password is required\";\n      }\n\n      this.setState({\n        error: error\n      });\n      return isvalid;\n    };\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(this.state.password);\n    };\n\n    this.handleconfirmpasswordChange = event => {\n      this.setState({\n        confirmpassword: event.target.value\n      });\n      console.log(this.state.confirmpassword);\n    };\n\n    this.handleresetpasswordChange = () => {\n      let token = localStorage.getItem(\"Token\");\n      let array = {};\n      array.password = this.state.password;\n      array.cfmpassword = this.state.confirmpassword;\n      setNewPassword(token, array).then;\n    };\n\n    this.state = {\n      showPassword: false,\n      password: \"\",\n      confirmpassword: \"\",\n      isvalid: true,\n      error: {}\n    };\n    this.resetpasswordhandle = this.resetpasswordhandle.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"resetPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fundoo1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"f\"), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"u\"), React.createElement(\"span\", {\n      style: {\n        color: \"orange\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"n\"), React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"span\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"o\"), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"o\")), React.createElement(\"div\", {\n      className: \"resetPasswordtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"resetpassword\"))), React.createElement(\"div\", {\n      className: \"resetpassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      size: \"small\",\n      id: \"outlined-adornment-password\",\n      variant: \"outlined\",\n      name: \"password\",\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \"password\",\n      margin: \"dense\",\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          sytle: {\n            width: \"1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })\n      },\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        justifyContent: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, this.state.error.Passwordvalid), React.createElement(\"div\", {\n      className: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      size: \"small\",\n      margin: \"dense\",\n      name: \"cofpassword\",\n      id: \"outlined-adornment-password\",\n      variant: \"outlined\",\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \" confirm \",\n      value: this.state.confPassword,\n      onChange: this.handleChange(\"password\"),\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          sytle: {\n            width: \"1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        })))\n      },\n      onChange: this.handleconfirmpasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        justifyContent: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.state.error.cofpassword), React.createElement(\"div\", {\n      className: \"Resetbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleresetpasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"submit\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\nexport default ResetPassword;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/ResetPassword.js"],"names":["React","Component","TextField","Button","IconButton","InputAdornment","Visibility","VisibilityOff","setNewPassword","ResetPassword","constructor","props","handleChange","prop","event","setState","target","value","handleClickShowPassword","state","showPassword","handleLastNameChange","lastName","console","log","resetpasswordhandle","error","Password","password","cofpassword","confirmpassword","isvalid","handlePasswordChange","handleconfirmpasswordChange","handleresetpasswordChange","token","localStorage","getItem","array","cfmpassword","then","bind","render","color","endAdornment","width","justifyContent","display","Passwordvalid","confPassword"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Cssfile/ResetPassword.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { setNewPassword } from \"./Service\";\nexport class ResetPassword extends Component {\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPassword: false,\n      password:\"\",\n      confirmpassword:\"\",\n      isvalid:true,\n      error:{}\n    };\n\n    this.resetpasswordhandle = this.resetpasswordhandle.bind(this);\n  }\n\n  handleLastNameChange = event => {\n    this.setState({\n      lastName: event.target.value\n    });\n    console.log(this.state.lastName);\n  };\n\n\n  resetpasswordhandle =()=>{\n    console.log(\"ddgfgge\");\n    \n    let error = this.state.error;\n    let Password = this.state.password;\n    let cofpassword = this.state.confirmpassword;\n    let isvalid = this.state.isvalid;\n\n    \n      \n    if (Password ===\"\") {\n           \n      isvalid = false;\n      error[\"Passwordvalid\"] = \"password is required\";\n    }\n\n    if (cofpassword ===\"\") {\n      console.log(\"cfmpassowrddddfgggfddd\");\n      isvalid = false;\n      error[\"cofpassword\"] = \"confirm password is required\";\n    }\n    this.setState({\n      error: error\n    });\n    return isvalid;\n  };\n\n  handlePasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n    console.log(this.state.password);\n  };\n  \n  handleconfirmpasswordChange = event => {\n    this.setState({\n      confirmpassword: event.target.value\n    });\n    console.log(this.state.confirmpassword);\n  };\n  \n  handleresetpasswordChange = () => {\n    \n\n    let token = localStorage.getItem(\"Token\");\n     let array={};\n\n     array.password=this.state.password;\n     array.cfmpassword=this.state.confirmpassword;\n\n     setNewPassword(token,array).then\n\n\n\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"resetPassword\">\n        <div className=\"fundoo1\">\n          <span style={{ color: \"blue\" }}>f</span>\n          <span style={{ color: \"red\" }}>u</span>\n          <span style={{ color: \"orange\" }}>n</span>\n          <span style={{ color: \"blue\" }}>d</span>\n          <span style={{ color: \"green\" }}>o</span>\n          <span style={{ color: \"red\" }}>o</span>\n        </div>\n        <div className=\"resetPasswordtitle\">\n          <h2>\n            <b>resetpassword</b>\n          </h2>\n        </div>\n\n        <div className=\"resetpassword1\">\n        <TextField\n                size=\"small\"\n                id=\"outlined-adornment-password\"\n                variant=\"outlined\"\n                name=\"password\"\n                type={this.state.showPassword ? \"text\" : \"password\"}\n                label=\"password\"\n                margin=\"dense\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment\n                      position=\"end\"\n                      sytle={{ width: \"1px\" }}\n                    ></InputAdornment>\n                  )\n                }}\n                onChange={this.handlePasswordChange}\n              />\n        </div>\n        <span style={{ color: \"red\",justifyContent:\"flex-start\",display:\"flex\" }}>{this.state.error.Passwordvalid}</span>\n        <div className=\"password2\">\n        <TextField\n                size=\"small\"\n                margin=\"dense\"\n                name=\"cofpassword\"\n                id=\"outlined-adornment-password\"\n                variant=\"outlined\"\n                type={this.state.showPassword ? \"text\" : \"password\"}\n                label=\" confirm \"\n                value={this.state.confPassword}\n                onChange={this.handleChange(\"password\")}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\" sytle={{ width: \"1px\" }}>\n                      <IconButton\n                        aria-label=\"Toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                      >\n                        {this.state.showPassword ? (\n                          <VisibilityOff />\n                        ) : (\n                          <Visibility />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                onChange={this.handleconfirmpasswordChange}\n              />\n        </div>\n        <span style={{ color: \"red\" ,justifyContent:\"flex-start\",display:\"flex\"}}>{this.state.error.cofpassword }</span>\n\n        <div className=\"Resetbutton\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleresetpasswordChange}\n          >\n            submit\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}