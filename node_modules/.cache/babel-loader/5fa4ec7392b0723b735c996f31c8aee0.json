{"ast":null,"code":"import _objectSpread from \"/home/user/Desktop/new project/fundoo/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { TOGGLE_VIEW, ADD_REMINDER, ADD_ARCHIVE, ADD_PIN, ADD_COLLABRATOR, ADD_COLOR } from \"../Redux/actionType\";\nexport const initialState = {\n  view: true,\n  archive: false,\n  reminder: '',\n  color: '',\n  collabrator: {}\n};\n\nconst reducer = (State = initialState, action) => {\n  switch (action.type) {\n    case ADD_REMINDER:\n      {\n        return _objectSpread({}, State, {\n          reminder: action.payload\n        });\n      }\n\n    case ADD_COLOR:\n      {\n        return _objectSpread({}, State, {\n          color: action.payload\n        });\n      }\n\n    case ADD_COLLABRATOR:\n      {\n        return _objectSpread({}, State, {\n          collabrator: action.payload\n        });\n      }\n\n    case ADD_PIN:\n      {\n        return _objectSpread({}, State, {\n          view: !State.view\n        });\n      }\n\n    case ADD_ARCHIVE:\n      {\n        return _objectSpread({}, State, {\n          archive: !State.view\n        });\n      }\n\n    case TOGGLE_VIEW:\n      {\n        return _objectSpread({}, State, {\n          view: !State.view\n        });\n      }\n\n    default:\n      return State;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/Redux/reducer.js"],"names":["TOGGLE_VIEW","ADD_REMINDER","ADD_ARCHIVE","ADD_PIN","ADD_COLLABRATOR","ADD_COLOR","initialState","view","archive","reminder","color","collabrator","reducer","State","action","type","payload"],"mappings":";AAAA,SAAUA,WAAV,EAAuBC,YAAvB,EAAoCC,WAApC,EAAgDC,OAAhD,EAAwDC,eAAxD,EAAwEC,SAAxE,QAAwF,qBAAxF;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,IAAI,EAAE,IADoB;AAE1BC,EAAAA,OAAO,EAAC,KAFkB;AAG1BC,EAAAA,QAAQ,EAAC,EAHiB;AAI1BC,EAAAA,KAAK,EAAC,EAJoB;AAK1BC,EAAAA,WAAW,EAAC;AALc,CAArB;;AAQP,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AAEG,SAAMd,YAAN;AAAmB;AAClB,iCACKY,KADL;AAEEJ,UAAAA,QAAQ,EAACK,MAAM,CAACE;AAFlB;AAMA;;AAGD,SAAMX,SAAN;AAAgB;AACd,iCACKQ,KADL;AAEEH,UAAAA,KAAK,EAACI,MAAM,CAACE;AAFf;AAID;;AAEA,SAAKZ,eAAL;AAAqB;AACnB,iCACKS,KADL;AAEEF,UAAAA,WAAW,EAACG,MAAM,CAACE;AAFrB;AAID;;AAGF,SAAKb,OAAL;AAAc;AACb,iCACKU,KADL;AAEEN,UAAAA,IAAI,EAAE,CAACM,KAAK,CAACN;AAFf;AAID;;AAED,SAAKL,WAAL;AAAkB;AAChB,iCACKW,KADL;AAEEL,UAAAA,OAAO,EAAE,CAACK,KAAK,CAACN;AAFlB;AAID;;AAED,SAAKP,WAAL;AAAkB;AAChB,iCACKa,KADL;AAEEN,UAAAA,IAAI,EAAE,CAACM,KAAK,CAACN;AAFf;AAID;;AAED;AACE,aAAOM,KAAP;AAjDJ;AAmDD,CApDD;;AAsDA,eAAeD,OAAf","sourcesContent":["import {  TOGGLE_VIEW ,ADD_REMINDER,ADD_ARCHIVE,ADD_PIN,ADD_COLLABRATOR,ADD_COLOR} from \"../Redux/actionType\";\n\nexport const initialState = {\n  view: true,\n  archive:false,\n  reminder:'',\n  color:'',\n  collabrator:{}\n};\n\nconst reducer = (State = initialState, action) => {\n  switch (action.type) {\n \n     case  ADD_REMINDER:{\n      return{\n        ...State,\n        reminder:action.payload\n\n       }\n       ;\n     }\n\n\n     case  ADD_COLOR:{\n       return{\n         ...State,\n         color:action.payload\n       }\n     }\n    \n      case ADD_COLLABRATOR:{\n        return{\n          ...State,\n          collabrator:action.payload\n        }\n      }\n\n\n     case ADD_PIN: {\n      return {\n        ...State,\n        view: !State.view\n      };\n    }\n\n    case ADD_ARCHIVE: {\n      return {\n        ...State,\n        archive: !State.view\n      };\n    }\n\n    case TOGGLE_VIEW: {\n      return {\n        ...State,\n        view: !State.view\n      };\n    }\n\n    default:\n      return State;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}