{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/SetColor.js\";\nconst colorsPallete = [{\n  colorName: \"White\",\n  colorCode: \"#ffffff\"\n}, {\n  colorName: \"Red\",\n  colorCode: \"#ea2e2e\"\n}, {\n  colorName: \"Orange\",\n  colorCode: \"#ffb600\"\n}, {\n  colorName: \"Yellow\",\n  colorCode: \"#e1e82e\"\n}, {\n  colorName: \"Green\",\n  colorCode: \"#ccff90\"\n}, {\n  colorName: \"Teal\",\n  colorCode: \"#a7ffeb\"\n}, {\n  colorName: \"Blue\",\n  colorCode: \"#281bd6\"\n}, {\n  colorName: \"Dark blue\",\n  colorCode: \"#aecbfa\"\n}, {\n  colorName: \"Purple\",\n  colorCode: \"#d7adfb\"\n}, {\n  colorName: \"Pink\",\n  colorCode: \"#fdcfe8\"\n}, {\n  colorName: \"Dark Brown\",\n  colorCode: \"#e6c9a7\"\n}, {\n  colorName: \"Gray\",\n  colorCode: \"#e8eaed\"\n}];\n\nclass MouseOverPopover extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handlePopoverOpen = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n      event.stopPropagation();\n    };\n\n    this.handlePopoverClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      \"aria-owns\": open ? \"mouse-over-popover\" : undefined,\n      \"aria-haspopup\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \" Change color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(PaletteOutlinedIcon, {\n      onMouseEnter: this.handlePopoverOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(Popover, {\n      style: {\n        top: \"-16%\"\n      },\n      id: \"mouse-over-popover\",\n      className: classes.popover,\n      classes: {\n        paper: classes.paper\n      },\n      open: open,\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"120px\",\n        margin: \"auto\",\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, colorsPallete.map(usercolor => React.createElement(\"div\", {\n      style: {\n        padding: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.handleColorChange,\n      style: {\n        backgroundColor: usercolor.colorName\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nMouseOverPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MouseOverPopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/SetColor.js"],"names":["colorsPallete","colorName","colorCode","MouseOverPopover","React","Component","state","anchorEl","handlePopoverOpen","event","setState","currentTarget","stopPropagation","handlePopoverClose","render","classes","props","open","Boolean","undefined","top","popover","paper","vertical","horizontal","position","width","margin","display","flexWrap","flexDirection","map","usercolor","padding","handleColorChange","backgroundColor","propTypes","PropTypes","object","isRequired","withStyles","styles"],"mappings":"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","sourcesContent":["\nconst colorsPallete = [\n  {\n    colorName: \"White\",\n    colorCode: \"#ffffff\"\n  },\n  {\n    colorName: \"Red\",\n    colorCode: \"#ea2e2e\"\n  },\n  {\n    colorName: \"Orange\",\n    colorCode: \"#ffb600\"\n  },\n  {\n    colorName: \"Yellow\",\n    colorCode: \"#e1e82e\"\n  },\n  {\n    colorName: \"Green\",\n    colorCode: \"#ccff90\"\n  },\n  {\n    colorName: \"Teal\",\n    colorCode: \"#a7ffeb\"\n  },\n  {\n    colorName: \"Blue\",\n    colorCode: \"#281bd6\"\n  },\n  {\n    colorName: \"Dark blue\",\n    colorCode: \"#aecbfa\"\n  },\n  {\n    colorName: \"Purple\",\n    colorCode: \"#d7adfb\"\n  },\n  {\n    colorName: \"Pink\",\n    colorCode: \"#fdcfe8\"\n  },\n  {\n    colorName: \"Dark Brown\",\n    colorCode: \"#e6c9a7\"\n  },\n  {\n    colorName: \"Gray\",\n    colorCode: \"#e8eaed\"\n  }\n];\n\n\n\nclass MouseOverPopover extends React.Component {\n  state = {\n    anchorEl: null\n  };\n\n  handlePopoverOpen = event => {\n    this.setState({ anchorEl: event.currentTarget });\n    event.stopPropagation();\n  };\n\n  handlePopoverClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <Typography\n          aria-owns={open ? \"mouse-over-popover\" : undefined}\n          aria-haspopup=\"true\"\n          \n        >\n          <Tooltip title=\" Change color\">\n            <PaletteOutlinedIcon onMouseEnter={this.handlePopoverOpen}\n          />\n          </Tooltip>\n        </Typography>\n\n        <Popover\n          \n          style={{ top: \"-16%\" }}\n          id=\"mouse-over-popover\"\n          className={classes.popover}\n          classes={{\n            paper: classes.paper\n          }}\n          open={open}\n          anchorEl={anchorEl}\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"left\"\n          }}\n          \n        >\n          <div\n            style={{\n              position: \"relative\",\n              width: \"120px\",\n              margin: \"auto\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\"\n            }}\n          >\n            {colorsPallete.map(usercolor => (\n              <div style={{ padding: \"3px\" }}>\n                <IconButton   \n                  onClick={this.handleColorChange}\n                  style={{ backgroundColor: usercolor.colorName }}\n                ></IconButton>\n              </div>\n            ))}\n          </div>\n        </Popover>\n      </div>\n    );\n  }\n}\n\nMouseOverPopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(MouseOverPopover);\n"]},"metadata":{},"sourceType":"module"}