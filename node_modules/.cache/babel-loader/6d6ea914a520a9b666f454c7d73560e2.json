{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/ResetPassword.js\";\nimport React, { Component } from \"react\";\nimport \"../Cssfile/ResetPassword.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nexport class ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = prop => event => {\n      this.setState({\n        [prop]: event.target.value\n      });\n    };\n\n    this.handleClickShowPassword = () => {\n      this.setState(state => ({\n        showPassword: !state.showPassword\n      }));\n    };\n\n    this.resetpasswordhandle = () => {\n      console.log(\"ddgfgge\");\n      let error = this.state.error;\n      let Password = this.state.password;\n      let cofpassword = this.state.confirmpassword;\n      let isvalid = this.state.isvalid;\n\n      if (Password === \"\") {\n        isvalid = false;\n        error[\"Passwordvalid\"] = \"password is required\";\n      }\n\n      if (cofpassword === \"\") {\n        console.log(\"cfmpassowrddddfgggfddd\");\n        isvalid = false;\n        error[\"cofpassword\"] = \"confirm password is required\";\n      }\n\n      this.setState({\n        error: error\n      });\n      return isvalid;\n    };\n\n    this.handlePasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n      console.log(this.state.password);\n    };\n\n    this.handlecfrmpasswordChange = event => {\n      this.setState({\n        confirmpassword: event.target.value\n      });\n      console.log(this.state.confirmpassword);\n    };\n\n    this.handleresetpasswordChange = () => {\n      if (this.resetpasswordhandle() == true) {\n        console.log(\"handleregister\");\n\n        if (this.state.password != this.state.confPassword) {\n          alert(\"both passwords should be same\");\n        } else {}\n      }\n    };\n\n    this.state = {\n      showPassword: false,\n      password: \"\",\n      confirmpassword: \"\",\n      isvalid: true,\n      error: {}\n    };\n    this.resetpasswordhandle = this.resetpasswordhandle.bind(this);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"resetPassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fundoo1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"f\"), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"u\"), React.createElement(\"span\", {\n      style: {\n        color: \"orange\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"n\"), React.createElement(\"span\", {\n      style: {\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"span\", {\n      style: {\n        color: \"green\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"o\"), React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"o\")), React.createElement(\"div\", {\n      className: \"resetPasswordtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"resetpassword\"))), React.createElement(\"div\", {\n      className: \"resetpassword1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-adornment-password\",\n      margin: \"dense\",\n      name: \"Passwordvalid\",\n      size: \"small\",\n      variant: \"outlined\",\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      onChange: this.handleChange(\"password\"),\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          sytle: {\n            width: \"1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })))\n      },\n      onClick: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        justifyContent: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, this.state.error.Passwordvalid), React.createElement(\"div\", {\n      className: \"password2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      size: \"small\",\n      margin: \"dense\",\n      name: \"cofpassword\",\n      id: \"outlined-adornment-password\",\n      variant: \"outlined\",\n      type: this.state.showPassword ? \"text\" : \"password\",\n      label: \" confirm \",\n      value: this.state.confirmpassword,\n      onChange: this.handleChange(\"password\"),\n      InputProps: {\n        endAdornment: React.createElement(InputAdornment, {\n          position: \"end\",\n          sytle: {\n            width: \"1px\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          \"aria-label\": \"Toggle password visibility\",\n          onClick: this.handleClickShowPassword,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, this.state.showPassword ? React.createElement(VisibilityOff, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }) : React.createElement(Visibility, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        })))\n      },\n      onChange: this.handlecfrmpasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        justifyContent: \"flex-start\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.state.error.cofpassword), React.createElement(\"div\", {\n      className: \"Resetbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleresetpasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"submit\"), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\nexport default ResetPassword;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/ResetPassword.js"],"names":["React","Component","TextField","Button","IconButton","OutlinedInput","InputLabel","InputAdornment","FormHelperText","FormControl","Visibility","VisibilityOff","ResetPassword","constructor","props","handleChange","prop","event","setState","target","value","handleClickShowPassword","state","showPassword","resetpasswordhandle","console","log","error","Password","password","cofpassword","confirmpassword","isvalid","handlePasswordChange","handlecfrmpasswordChange","handleresetpasswordChange","confPassword","alert","bind","render","color","endAdornment","width","justifyContent","display","Passwordvalid"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../Cssfile/ResetPassword.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nexport class ResetPassword extends Component {\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPassword: false,\n      password:\"\",\n      confirmpassword:\"\",\n      isvalid:true,\n      error:{}\n    };\n\n    this.resetpasswordhandle = this.resetpasswordhandle.bind(this);\n  }\n  resetpasswordhandle =()=>{\n    console.log(\"ddgfgge\");\n    \n    let error = this.state.error;\n    let Password = this.state.password;\n    let cofpassword = this.state.confirmpassword;\n    let isvalid = this.state.isvalid;\n\n    \n      \n    if (Password ===\"\") {\n           \n      isvalid = false;\n      error[\"Passwordvalid\"] = \"password is required\";\n    }\n\n    if (cofpassword ===\"\") {\n      console.log(\"cfmpassowrddddfgggfddd\");\n      isvalid = false;\n      error[\"cofpassword\"] = \"confirm password is required\";\n    }\n    this.setState({\n      error: error\n    });\n    return isvalid;\n  };\n\n  handlePasswordChange = event => {\n    this.setState({\n      password: event.target.value\n    });\n    console.log(this.state.password);\n  };\n  \n  handlecfrmpasswordChange = event => {\n    this.setState({\n      confirmpassword: event.target.value\n    });\n    console.log(this.state.confirmpassword);\n  };\n  \n  handleresetpasswordChange = () => {\n    if (this.resetpasswordhandle() == true) {\n\n      console.log(\"handleregister\");\n\n      if (this.state.password != this.state.confPassword) {\n        alert(\"both passwords should be same\");\n      } else {\n      }\n    }\n  };\n\n\n\n  render() {\n    return (\n      <div className=\"resetPassword\">\n        <div className=\"fundoo1\">\n          <span style={{ color: \"blue\" }}>f</span>\n          <span style={{ color: \"red\" }}>u</span>\n          <span style={{ color: \"orange\" }}>n</span>\n          <span style={{ color: \"blue\" }}>d</span>\n          <span style={{ color: \"green\" }}>o</span>\n          <span style={{ color: \"red\" }}>o</span>\n        </div>\n        <div className=\"resetPasswordtitle\">\n          <h2>\n            <b>resetpassword</b>\n          </h2>\n        </div>\n\n        <div className=\"resetpassword1\">\n          <TextField\n            id=\"outlined-adornment-password\"\n            margin=\"dense\"\n            name=\"Passwordvalid\"\n            size=\"small\"\n            variant=\"outlined\"\n            type={this.state.showPassword ? \"text\" : \"password\"}\n            label=\"Password\"\n            value={this.state.password}\n\n            onChange={this.handleChange(\"password\")}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\" sytle={{ width: \"1px\" }}>\n                  <IconButton\n                    aria-label=\"Toggle password visibility\"\n                    onClick={this.handleClickShowPassword}\n                  >\n                    {this.state.showPassword ? (\n                      <VisibilityOff />\n                    ) : (\n                      <Visibility />\n                    )}\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            onClick={this.handlePasswordChange}\n          />\n        </div>\n        <span style={{ color: \"red\",justifyContent:\"flex-start\",display:\"flex\" }}>{this.state.error.Passwordvalid}</span>\n        <div className=\"password2\">\n        <TextField\n                size=\"small\"\n                margin=\"dense\"\n                name=\"cofpassword\"\n                id=\"outlined-adornment-password\"\n                variant=\"outlined\"\n                type={this.state.showPassword ? \"text\" : \"password\"}\n                label=\" confirm \"\n                value={this.state.confirmpassword}\n                onChange={this.handleChange(\"password\")}\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\" sytle={{ width: \"1px\" }}>\n                      <IconButton\n                        aria-label=\"Toggle password visibility\"\n                        onClick={this.handleClickShowPassword}\n                      >\n                        {this.state.showPassword ? (\n                          <VisibilityOff />\n                        ) : (\n                          <Visibility />\n                        )}\n                      </IconButton>\n                    </InputAdornment>\n                  )\n                }}\n                \n                onChange={this.handlecfrmpasswordChange}\n              />\n        </div>\n        <span style={{ color: \"red\" ,justifyContent:\"flex-start\",display:\"flex\"}}>{this.state.error.cofpassword }</span>\n\n        <div className=\"Resetbutton\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={this.handleresetpasswordChange}\n          >\n            submit\n          </Button>\n          <Button variant=\"contained\" color=\"secondary\">\n            Cancel\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}