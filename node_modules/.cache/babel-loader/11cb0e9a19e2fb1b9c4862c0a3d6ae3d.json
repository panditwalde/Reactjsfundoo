{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Datetimepicker.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"../Cssfile/addReminder.css\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport { MuiPickersUtilsProvider, TimePicker, DatePicker } from \"material-ui-pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { addReminder } from \"./Service\";\nimport { ADD_REMINDER } from \"../Redux/actionType\";\nconst theme = createMuiTheme({\n  overrides: {\n    MuiPopover: {\n      paper: {\n        width: \"16%\"\n      }\n    } // ,\n    // typography: {\n    //   margin: theme.spacing.unit * 2\n    // }\n\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClose1 = () => {\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.addReminder = () => {};\n\n    this.handleClose1 = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleClose = () => {\n      // let currentDate = this.state.currentDate;\n      // let selectedDate = this.state.selectedReminder;\n      // let currentTime = this.state.currentDate.getTime();\n      // let selectedTime = this.state.selectedReminder.getTime();\n      // console.log(\"current\" + currentDate);\n      // console.log(\"select\" + selectedDate);\n      // console.log(\"current\" + currentTime);\n      // console.log(\"select\" + selectedTime);\n      // if (currentDate.localeCompare(selectedDate) === 0) {\n      //   if (currentTime < selectedTime) {\n      //     this.addReminder();\n      //   } else {\n      //     alert(\"Select correct time and date\");\n      //   }\n      // } else {\n      //   if (currentDate.localeCompare(selectedDate) < 0) {\n      //     this.addReminder();\n      //   } else {\n      //     alert(\"Select correct time and date\");\n      //   }\n      // }\n      let noteid = this.props.propsnoteid;\n      let token = localStorage.getItem(\"Token\");\n      let date = this.state.selectedReminder;\n      this.props.onSelectReminder1(date);\n      console.log(\"date\" + date);\n      addReminder(date, noteid, token).then(Response => {\n        console.log(Response.data);\n        this.props.refresh1();\n        this.setState({\n          opensnackbar: true\n        });\n      });\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleDateChange = date => {\n      console.log(date);\n      let newDate = new Date(date);\n      console.log(newDate.toLocaleString());\n      this.setState({\n        selectedReminder: newDate.toLocaleString()\n      });\n      console.log(\"userdatedddd\" + newDate);\n    };\n\n    this.state = {\n      selectedReminder: new Date(),\n      currentDate: new Date(),\n      opensnackbar: false\n    };\n  }\n\n  render() {\n    const anchorEl = this.state.anchorEl;\n    const selectedReminder = this.state.selectedReminder;\n    const currentDate = this.state.currentDate;\n    const open = Boolean(anchorEl);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      onClick: this.handleClick,\n      className: \"pickdatetime\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(AccessTimeIcon, {\n      fontSize: \"inherit\",\n      style: {\n        position: \"fixed\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: \"32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \" Pick date & time\")), React.createElement(Popover, {\n      style: {\n        top: \"-150px\",\n        borderRadius: \"4%\",\n        width: \"18%\"\n      },\n      id: \"simple-popper\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(ArrowBackIcon, {\n      style: {\n        position: \"fixed\",\n        fontSize: \"22px\"\n      },\n      onClick: this.handleClose1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        marginLeft: \"32px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \" Pick date & time\")), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        flexDirection: \"column\",\n        padding: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(DatePicker, {\n      margin: \"normal\",\n      label: \"Date picker\",\n      value: currentDate,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(TimePicker, {\n      margin: \"normal\",\n      label: \"Time picker\",\n      value: currentDate,\n      onChange: this.handleDateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      onClick: this.handleClose,\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        padding: \"4%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Save\")), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Add Reminder\"),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  return {\n    reminder: state.reminder\n  };\n};\n\nvar temp = \"hello\";\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReminders: temp => dispatch(ADD_REMINDER(temp))\n  };\n};\n\nexport default SimplePopover;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Datetimepicker.js"],"names":["React","PropTypes","Popover","AccessTimeIcon","ArrowBackIcon","MuiThemeProvider","createMuiTheme","Snackbar","CloseIcon","Button","Divider","IconButton","connect","moment","MuiPickersUtilsProvider","TimePicker","DatePicker","DateFnsUtils","addReminder","ADD_REMINDER","theme","overrides","MuiPopover","paper","width","SimplePopover","Component","constructor","props","handleClose1","setState","opensnackbar","state","anchorEl","handleClick","event","currentTarget","handleClose","noteid","propsnoteid","token","localStorage","getItem","date","selectedReminder","onSelectReminder1","console","log","then","Response","data","refresh1","handleDateChange","newDate","Date","toLocaleString","currentDate","render","open","Boolean","position","marginLeft","top","borderRadius","vertical","horizontal","fontSize","display","justifyContent","flexDirection","padding","propTypes","classes","object","isRequired","mapStateToProps","reminder","temp","mapDispatchToProps","dispatch","addReminders"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Popover from \"@material-ui/core/Popover\";\nimport \"../Cssfile/addReminder.css\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Button from '@material-ui/core/Button';\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment'\n\nimport {\n  MuiPickersUtilsProvider,\n  TimePicker,\n  DatePicker\n} from \"material-ui-pickers\";\n\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { addReminder } from \"./Service\";\nimport { ADD_REMINDER } from \"../Redux/actionType\";\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiPopover: {\n      paper: {\n        width: \"16%\"\n      }\n    }\n    // ,\n    // typography: {\n    //   margin: theme.spacing.unit * 2\n    // }\n  }\n});\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedReminder: new Date(),\n      currentDate: new Date(),\n      opensnackbar:false,\n\n    };\n  }\n\n  handleClose1 = () => {\n    this.setState({\n      opensnackbar:false    });\n  };\n\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  addReminder = () => {\n     \n  };\n  handleClose1=()=>{\n    this.setState({\n      anchorEl: null\n    });\n  }\n  handleClose = () => {\n    // let currentDate = this.state.currentDate;\n    // let selectedDate = this.state.selectedReminder;\n\n    // let currentTime = this.state.currentDate.getTime();\n    // let selectedTime = this.state.selectedReminder.getTime();\n\n    // console.log(\"current\" + currentDate);\n    // console.log(\"select\" + selectedDate);\n    // console.log(\"current\" + currentTime);\n    // console.log(\"select\" + selectedTime);\n\n    // if (currentDate.localeCompare(selectedDate) === 0) {\n    //   if (currentTime < selectedTime) {\n    //     this.addReminder();\n    //   } else {\n    //     alert(\"Select correct time and date\");\n    //   }\n    // } else {\n    //   if (currentDate.localeCompare(selectedDate) < 0) {\n    //     this.addReminder();\n    //   } else {\n    //     alert(\"Select correct time and date\");\n    //   }\n    // }\n    let noteid = this.props.propsnoteid;\n    let token = localStorage.getItem(\"Token\");\n    let date = this.state.selectedReminder;\n    this.props.onSelectReminder1(date);\n\n    console.log(\"date\" + date);\n\n    addReminder(date, noteid, token).then(Response => {\n      console.log(Response.data);\n      this.props.refresh1()\n      this.setState({opensnackbar:true})\n\n    });\n\n    this.setState({\n      anchorEl: null\n    });\n  };\n\n\n  handleDateChange = date => {\n    console.log(date);\n\n    let newDate = new Date(date);\n    console.log(newDate.toLocaleString());\n \n    this.setState({\n      selectedReminder: newDate.toLocaleString()\n    });\n    console.log(\"userdatedddd\" + newDate);\n  };\n \n\n\n  \n\n  render() {\n\n    const { anchorEl } = this.state;\n    const { selectedReminder } = this.state;\n    const { currentDate } = this.state;\n\n    \n\n    const open = Boolean(anchorEl);\n\n    return (\n      <div>\n        <div onClick={this.handleClick} className=\"pickdatetime\">\n          <AccessTimeIcon fontSize=\"inherit\" style={{ position: \"fixed\" }} />\n          <span style={{ marginLeft: \"32px\" }}> Pick date & time</span>\n        </div>\n        <Popover\n          style={{ top: \"-150px\", borderRadius: \"4%\", width: \"18%\" }}\n          id=\"simple-popper\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          <div className=\"main\">\n            <ArrowBackIcon style={{ position: \"fixed\", fontSize: \"22px\" }} onClick={this.handleClose1} />\n            <span style={{ marginLeft: \"32px\" }}> Pick date & time</span>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              flexDirection: \"column\",\n              padding: \"4%\"\n            }}\n          >\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <MuiThemeProvider theme={theme}>\n                <DatePicker\n                  margin=\"normal\"\n                  label=\"Date picker\"\n                  value={currentDate}\n                  onChange={this.handleDateChange}\n                />\n\n                <TimePicker\n                  margin=\"normal\"\n                  label=\"Time picker\"\n                  value={currentDate}\n                  onChange={this.handleDateChange}\n                />\n              </MuiThemeProvider>\n            </MuiPickersUtilsProvider>\n          </div>\n\n          <div\n            onClick={this.handleClose}\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"4%\"\n            }}\n          >\n            Save\n          </div>\n        </Popover>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Add Reminder</span>}\n          action={[\n            <Button key=\"undo\" color=\"secondary\" size=\"small\" onClick={this.handleClose1}>\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>,\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\n\nconst mapStateToProps = state => {\n  return {\n    reminder: state.reminder\n  };\n};\nvar temp = \"hello\"\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addReminders: (temp) => dispatch(ADD_REMINDER(temp))\n  };\n};\nexport default SimplePopover;\n"]},"metadata":{},"sourceType":"module"}