{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/EditLabel.js\";\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { Card, Tooltip } from \"@material-ui/core\";\nimport { addLabel, DisplayAllLabel } from \"./Service\";\n\nclass AlertDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.Handlelabeldata = event => {\n      this.setState({\n        createLabel: event.target.value\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.getAllLabel = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllLabel(token).then(Response => {\n        let array = [];\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      }).catch(err => {\n        console.log(\"Note not found\");\n      });\n    };\n\n    this.handleClickCreatelabel = () => {\n      console.log(\"hello\" + this.state.createLabel);\n      let token = localStorage.getItem(\"Token\");\n      addLabel(this.state.createLabel, token).then(Response => {\n        console.log(\"label created..\");\n        this.getAllLabel();\n      }).catch(err => {\n        console.log(\"label not created..\");\n      });\n    };\n\n    this.state = {\n      allLable: [],\n      createLabel: \"\"\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Edit labels\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        flexDirection: \"column\",\n        width: \"120%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Edit Labels\")), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-around\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Cancel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(ClearIcon, {\n      style: {\n        paddingTop: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), React.createElement(TextField, {\n      id: \"standard-dense\",\n      placeholder: \"Create new label\",\n      margin: \"dense\",\n      style: {\n        paddingLeft: \"5%\"\n      },\n      onChange: this.Handlelabeldata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \"Create label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(CheckIcon, {\n      style: {\n        paddingLeft: \"5%\",\n        paddingTop: \"10px\"\n      },\n      onClick: this.handleClickCreatelabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.allLable.map(label => React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        paddingTop: \"5%\",\n        paddingBottom: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        paddingTop: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, label.lable_title), React.createElement(Tooltip, {\n      title: \"Rename label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(EditOutlinedIcon, {\n      style: {\n        paddingTop: \"5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }))) //\n    //\n    )), React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        paddingTop: \"5%\"\n      },\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Done\")))));\n  }\n\n}\n\nexport default AlertDialog;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/EditLabel.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Typography","ClearIcon","TextField","CheckIcon","Divider","IconButton","EditOutlinedIcon","Card","Tooltip","addLabel","DisplayAllLabel","AlertDialog","Component","constructor","props","state","open","handleClickOpen","setState","Handlelabeldata","event","createLabel","target","value","handleClose","getAllLabel","token","localStorage","getItem","then","Response","array","data","forEach","element","console","log","push","allLable","catch","err","handleClickCreatelabel","UNSAFE_componentWillMount","render","display","justifyContent","flexDirection","width","paddingTop","paddingLeft","map","label","paddingBottom","lable_title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport TextField from \"@material-ui/core/TextField\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport { Divider, IconButton } from \"@material-ui/core\";\nimport EditOutlinedIcon from \"@material-ui/icons/EditOutlined\";\nimport { Card, Tooltip } from \"@material-ui/core\";\nimport { addLabel, DisplayAllLabel } from \"./Service\";\n\nclass AlertDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allLable: [],\n      createLabel: \"\"\n    };\n  }\n\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  Handlelabeldata = event => {\n    this.setState({\n      createLabel: event.target.value\n    });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n  getAllLabel = () => {\n    let token = localStorage.getItem(\"Token\");\n    DisplayAllLabel(token)\n      .then(Response => {\n        let array = [];\n\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      })\n      .catch(err => {\n        console.log(\"Note not found\");\n      });\n  };\n  handleClickCreatelabel = () => {\n    console.log(\"hello\" + this.state.createLabel);\n    let token = localStorage.getItem(\"Token\");\n\n    addLabel(this.state.createLabel, token)\n      .then(Response => {\n        console.log(\"label created..\");\n        this.getAllLabel();\n      })\n      .catch(err => {\n        console.log(\"label not created..\");\n      });\n  };\n\n  render() {\n    return (\n      <div>\n        <div\n          variant=\"outlined\"\n          color=\"primary\"\n          onClick={this.handleClickOpen}\n        >\n          Edit labels\n        </div>\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <Typography>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                flexDirection: \"column\",\n                width: \"120%\"\n              }}\n            >\n              <div >\n                <b>Edit Labels</b>\n              </div>\n              <div  \n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-around\",\n                  flexDirection: \"row\"\n                }}\n              >\n                <Tooltip title=\"Cancel\">\n                  <ClearIcon style={{ paddingTop: \"10px\" }} />\n                </Tooltip>\n                <TextField\n                  id=\"standard-dense\"\n                  placeholder=\"Create new label\"\n                  margin=\"dense\"\n                  style={{ paddingLeft: \"5%\" }}\n                  onChange={this.Handlelabeldata}\n                />\n                <Tooltip title=\"Create label\">\n                  <CheckIcon\n                    style={{ paddingLeft: \"5%\", paddingTop: \"10px\" }}\n                    onClick={this.handleClickCreatelabel}\n                  />\n                </Tooltip>\n              </div>\n              <div>\n                {this.state.allLable.map(label => (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      paddingTop: \"5%\",\n                      paddingBottom: \"5%\"\n                    }}\n                  >\n                    <span>\n                      {/* <editshowordelete  deleteidprops={label.id} refresh={this.getAllLabel}/> */}\n                    </span>\n                    <span style={{ paddingTop: \"5%\" }}>\n                      {label.lable_title}\n                    </span>\n                    <Tooltip title=\"Rename label\">\n                      <EditOutlinedIcon style={{ paddingTop: \"5%\" }} />\n                    </Tooltip>\n                  </div>\n\n                  //\n                  //\n                ))}\n              </div>\n              <Divider />\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  paddingTop: \"5%\"\n                }}\n                onClick={this.handleClose}\n              >\n                Done\n              </div>\n            </div>\n          </Typography>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default AlertDialog;\n"]},"metadata":{},"sourceType":"module"}