{"ast":null,"code":"import _objectWithoutProperties from \"/home/user/Desktop/new project/fundoo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Practiece.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { Divider, TextField, InputBase } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInputBase: {\n      input: {\n        width: \"513px\",\n        height: \"1.875em\",\n        paddingLeft: \"8px\"\n      }\n    }\n  }\n});\n\nclass SimpleDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.doneClickhandle = event => {\n      this.setState({\n        collaboratorData: event.target.value\n      });\n      console.log(this.state.collaboratorData);\n      this.setState({\n        done: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.props.onClose(this.props.selectedValue);\n    };\n\n    this.donenotClickhandle = () => {\n      let collaboratorinfo = {}; // collaboratorData.noteid=;\n      // collaboratorData.colaboratorId=;\n\n      this.setState({\n        done: false\n      });\n    };\n\n    this.handleListItemClick = value => {\n      this.props.onClose(value);\n    };\n\n    this.handleClickClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      done: false,\n      collaboratorData: ''\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          classes = _this$props.classes,\n          onClose = _this$props.onClose,\n          selectedValue = _this$props.selectedValue,\n          other = _objectWithoutProperties(_this$props, [\"classes\", \"onClose\", \"selectedValue\"]);\n\n    return React.createElement(Dialog, Object.assign({\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\"\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        width: \"600px\",\n        flexDirection: \"column\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        padding: \"2%\",\n        fontSize: \"large\",\n        fontFamily: \"inherit\",\n        fontStyle: \"unset\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Collaborators\")), React.createElement(\"span\", {\n      style: {\n        padding: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \" \", React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      style: {\n        padding: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-start\",\n        flexDirection: \"row\",\n        padding: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(PersonAddIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(InputBase, {\n      width: \"600px\",\n      id: \"standard-basic\",\n      placeholder: \"Person or email to share with\",\n      onChange: this.doneClickhandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), this.state.done !== false ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(DoneOutlinedIcon, {\n      onClick: this.donenotClickhandle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })) : null), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end \",\n        flexDirection: \"row\",\n        padding: \" 3%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        marginRight: \"56px\"\n      },\n      onClick: this.handleClickClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = value => {\n      this.setState({\n        selectedValue: value,\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Open simple dialog\"), React.createElement(Tooltip, {\n      title: \"Collaborator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      fill: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }))), React.createElement(SimpleDialogWrapped, {\n      selectedValue: this.state.selectedValue,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SimpleDialogDemo;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Practiece.js"],"names":["React","PropTypes","withStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","Divider","TextField","InputBase","PersonAddIcon","MuiThemeProvider","createMuiTheme","DoneOutlinedIcon","styles","avatar","backgroundColor","color","theme","overrides","MuiInputBase","input","width","height","paddingLeft","SimpleDialog","Component","constructor","props","doneClickhandle","event","setState","collaboratorData","target","value","console","log","state","done","handleClose","onClose","selectedValue","donenotClickhandle","collaboratorinfo","handleListItemClick","handleClickClose","open","render","classes","other","display","flexWrap","flexDirection","padding","fontSize","fontFamily","fontStyle","justifyContent","marginRight","propTypes","object","isRequired","func","string","SimpleDialogWrapped","SimpleDialogDemo","handleClickOpen"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Typography from \"@material-ui/core/Typography\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport { Divider, TextField, InputBase } from \"@material-ui/core\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport DoneOutlinedIcon from \"@material-ui/icons/DoneOutlined\";\n\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\n\nconst theme = createMuiTheme({\n  overrides: {\n    MuiInputBase: {\n      input: {\n        width: \"513px\",\n        height: \"1.875em\",\n        paddingLeft: \"8px\"\n      }\n    }\n  }\n});\n\nclass SimpleDialog extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      done: false,\n      collaboratorData:''\n    };\n  }\n  doneClickhandle = event => {\n\n    this.setState({\n      collaboratorData: event.target.value\n    });\n    console.log(this.state.collaboratorData);\n    \n    \n     \n    this.setState({ done: true });\n  };\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n  donenotClickhandle=()=>{\n\n    let collaboratorinfo = {};\n      // collaboratorData.noteid=;\n      // collaboratorData.colaboratorId=;\n\n\n    this.setState({ done: false });\n  }\n  handleListItemClick = value => {\n    this.props.onClose(value);\n  };\n\n  handleClickClose = () => {\n    \n         \n   \n    \n\n    this.setState({\n      open: false\n    });\n  };\n  render() {\n    const { classes, onClose, selectedValue, ...other } = this.props;\n\n    return (\n      <Dialog\n        onClose={this.handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        {...other}\n      >\n        <MuiThemeProvider theme={theme}>\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              width: \"600px\",\n              flexDirection: \"column\"\n            }}\n          >\n            <span\n              style={{\n                padding: \"2%\",\n                fontSize: \"large\",\n                fontFamily: \"inherit\",\n                fontStyle: \"unset\"\n              }}\n            >\n              <b>Collaborators</b>\n            </span>\n            <span style={{ padding: \"2%\" }}>\n              {\" \"}\n              <Divider />\n            </span>\n            <span style={{ padding: \"1%\" }}>\n              <Avatar></Avatar>\n            </span>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-start\",\n                flexDirection: \"row\",\n                padding: \"1%\"\n              }}\n            >\n              <span>\n                <Avatar>\n                  <PersonAddIcon />\n                </Avatar>\n              </span>\n              <span>\n                <InputBase\n                  width=\"600px\"\n                  id=\"standard-basic\"\n                  placeholder=\"Person or email to share with\"\n                  onChange={this.doneClickhandle}\n                />\n              </span>\n              {this.state.done !== false ? (\n                <span>\n                  <DoneOutlinedIcon  onClick={this.donenotClickhandle}  />\n                </span>\n              ) : null}\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end \",\n                flexDirection: \"row\",\n                padding: \" 3%\"\n              }}\n            >\n              <span\n                style={{ marginRight: \"56px\" }}\n                onClick={this.handleClickClose}\n              >\n                Cancel\n              </span>\n              <span>Save</span>\n            </div>\n          </div>\n        </MuiThemeProvider>\n      </Dialog>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  state = {\n    open: false\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true\n    });\n  };\n\n  handleClose = value => {\n    this.setState({ selectedValue: value, open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <br />\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n         \n        >\n          Open simple dialog\n        </Button>\n\n        <Tooltip title=\"Collaborator\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"#000\"\n                    >\n                      <path d=\"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\" />\n                    </svg>\n                  </Tooltip>\n        <SimpleDialogWrapped\n          selectedValue={this.state.selectedValue}\n          open={this.state.open}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SimpleDialogDemo;\n"]},"metadata":{},"sourceType":"module"}