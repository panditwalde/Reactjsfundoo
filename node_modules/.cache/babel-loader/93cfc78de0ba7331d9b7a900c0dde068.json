{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js\";\nimport React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport { Redirect } from 'react-router-dom';\nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdatetitle = event => {\n      this.setState({\n        title: event.target.value\n      });\n      console.log(\"ddd\" + this.state.title);\n    };\n\n    this.handleUpdatedescription = event => {\n      this.setState({\n        description: event.target.value\n      });\n      console.log(this.state.description);\n    };\n\n    this.handleClose = () => {\n      console.log(\"close \");\n      this.setState({\n        dialogOpen: false\n      });\n      let updatenote = {};\n      console.log(this.state.title);\n      console.log(this.state.description);\n      updatenote.title = this.state.title;\n      updatenote.description = this.state.description;\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.state.notearr.id;\n      editNote(updatenote, noteid, token).then(Response => {\n        console.log(\"update note\");\n        this.getAllNotes();\n      }).catch(err => {\n        console.log(\"not update note\");\n      });\n    };\n\n    this.getAllNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllNotes(token).then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (element.trash === false && element.archive === false && element.pin === false) {\n            array.push(element);\n          }\n\n          console.log(array);\n\n          if (element.archive === false && element.trash === false && element.pin === true) {\n            array1.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n        console.log(\"a\" + array);\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.handleDialogOpen = note => {\n      console.log(note);\n      this.setState({\n        dialogOpen: !this.state.dialogOpen,\n        notearr: note\n      });\n    };\n\n    this.handlepinunpin = noteid => {\n      let token = localStorage.getItem(\"Token\");\n      pinUnpin(token, noteid).then(Response => {\n        console.log(\"pinunpin done\");\n        this.getAllNotes();\n      }).catch(err => {\n        console.log(\"not done error\");\n      });\n    };\n\n    this.handleDelete = noteid => {\n      let token = localStorage.getItem(\"Token\");\n      removeReminder(noteid, token).then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n      }).catch({// console.log(\"fail..\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn = true;\n\n    if (_token == null) {\n      loggedIn = false;\n    }\n\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnake\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(CreateNote, {\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), this.state.pinUnpinArray.length !== 0 ? React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"8%\",\n        paddingLeft: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"PINNED\") : null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.state.pinUnpinArray.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"222px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"unpin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-around\",\n        display: \"flex\",\n        padding: \"12px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    })))))))), this.state.pinUnpinArray.length !== 0 ? React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingTop: \"6%\",\n        paddingLeft: \"11%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"OTHERS\") : null, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\",\n        paddingTop: \"6%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, this.state.allNote.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"222px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-around\",\n        display: \"flex\",\n        padding: \"12px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }), React.createElement(AddArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }))))))), React.createElement(Dialog, {\n      open: this.state.dialogOpen,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 522\n      },\n      __self: this\n    }, this.state.notearr !== null ? React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"484px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: this.state.notearr.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatetitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatedescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: this.state.notearr.reminder,\n      onDelete: () => this.handleDelete(this.state.notearr.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-around\",\n        display: \"flex\",\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 622\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Remind me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630\n      },\n      __self: this\n    }, React.createElement(AddAlertOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 631\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      title: \"Collaborator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      fill: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 641\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \" Change color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(PaletteOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    })), React.createElement(AddArchive, {\n      propsarchivenote: this.state.notearr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 647\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 648\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: this.state.notearr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"close\"))))) : null)), React.createElement(Snackbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662\n      },\n      __self: this\n    }, \"ddd\"));\n  }\n\n}\nexport default Displaynotes;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displaynotes.js"],"names":["React","Component","Card","Tooltip","Button","Snackbar","AddAlertOutlinedIcon","PaletteOutlinedIcon","Dialog","DisplayAllNotes","editNote","removeReminder","pinUnpin","Showmoreoption","AddArchive","TextField","SetColor","AddReminder","Chip","CreateNote","Collaborator","AccountCircleIcon","Redirect","Displaynotes","constructor","props","handleUpdatetitle","event","setState","title","target","value","console","log","state","handleUpdatedescription","description","handleClose","dialogOpen","updatenote","token","localStorage","getItem","noteid","notearr","id","then","Response","getAllNotes","catch","err","array","array1","data","forEach","element","trash","archive","pin","push","allNote","pinUnpinArray","handleDialogOpen","note","handlepinunpin","handleDelete","loggedIn","open","more","opensnake","UNSAFE_componentWillMount","render","length","display","width","flexWrap","flexDirection","paddingTop","paddingLeft","map","padding","boxShadow","backgroundColor","color","borderRadius","justifyContent","margin","disableUnderline","reminder","collabrators","col","paddingBottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,mBAAhD;AACA,OAAO,6BAAP;AACA,OAAOC,oBAAP,MAAiC,qCAAjC;AACA,OAAOC,mBAAP,MAAgC,oCAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,cAApC,EAAoDC,QAApD,QAAoE,WAApE;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,0BAAP;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,OAAO,MAAMC,YAAN,SAA2BtB,SAA3B,CAAqC;AAC1CuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,iBArBmB,GAqBCC,KAAK,IAAI;AAC3B,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADR,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQ,KAAKC,KAAL,CAAWL,KAA/B;AACD,KA1BkB;;AAAA,SA4BnBM,uBA5BmB,GA4BOR,KAAK,IAAI;AACjC,WAAKC,QAAL,CAAc;AACZQ,QAAAA,WAAW,EAAET,KAAK,CAACG,MAAN,CAAaC;AADd,OAAd;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,WAAvB;AACD,KAjCkB;;AAAA,SAmCnBC,WAnCmB,GAmCL,MAAM;AAClBL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,WAAKL,QAAL,CAAc;AACZU,QAAAA,UAAU,EAAE;AADA,OAAd;AAIA,UAAIC,UAAU,GAAG,EAAjB;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,KAAvB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWE,WAAvB;AAEAG,MAAAA,UAAU,CAACV,KAAX,GAAmB,KAAKK,KAAL,CAAWL,KAA9B;AACAU,MAAAA,UAAU,CAACH,WAAX,GAAyB,KAAKF,KAAL,CAAWE,WAApC;AACA,UAAII,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,UAAIC,MAAM,GAAG,KAAKT,KAAL,CAAWU,OAAX,CAAmBC,EAAhC;AAEAnC,MAAAA,QAAQ,CAAC6B,UAAD,EAAaI,MAAb,EAAqBH,KAArB,CAAR,CACGM,IADH,CACQC,QAAQ,IAAI;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,aAAKe,WAAL;AACD,OAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OAPH;AAQD,KA1DkB;;AAAA,SA4DnBe,WA5DmB,GA4DL,MAAM;AAClB,UAAIR,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAEAjC,MAAAA,eAAe,CAAC+B,KAAD,CAAf,CACGM,IADH,CACQC,QAAQ,IAAI;AAChB,YAAII,KAAK,GAAG,EAAZ;AACA,YAAIC,MAAM,GAAG,EAAb;AACAL,QAAAA,QAAQ,CAACM,IAAT,CAAcA,IAAd,CAAmBC,OAAnB,CAA2BC,OAAO,IAAI;AACpC,cACEA,OAAO,CAACC,KAAR,KAAkB,KAAlB,IACAD,OAAO,CAACE,OAAR,KAAoB,KADpB,IAEAF,OAAO,CAACG,GAAR,KAAgB,KAHlB,EAIE;AACAP,YAAAA,KAAK,CAACQ,IAAN,CAAWJ,OAAX;AACD;;AACDvB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;;AACA,cACEI,OAAO,CAACE,OAAR,KAAoB,KAApB,IACAF,OAAO,CAACC,KAAR,KAAkB,KADlB,IAEAD,OAAO,CAACG,GAAR,KAAgB,IAHlB,EAIE;AACAN,YAAAA,MAAM,CAACO,IAAP,CAAYJ,OAAZ;AACD;AACF,SAhBD;AAiBA,aAAK3B,QAAL,CAAc;AACZgC,UAAAA,OAAO,EAAET;AADG,SAAd;AAIAnB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAMkB,KAAlB;AAEA,aAAKvB,QAAL,CAAc;AACZiC,UAAAA,aAAa,EAAET;AADH,SAAd;AAGApB,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAM,KAAKC,KAAL,CAAW2B,aAA7B;AACD,OA/BH,EAgCGZ,KAhCH,CAgCSC,GAAG,IAAI;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,OAlCH;AAmCD,KAlGkB;;AAAA,SAoGnB6B,gBApGmB,GAoGAC,IAAI,IAAI;AACzB/B,MAAAA,OAAO,CAACC,GAAR,CAAY8B,IAAZ;AACA,WAAKnC,QAAL,CAAc;AACZU,QAAAA,UAAU,EAAE,CAAC,KAAKJ,KAAL,CAAWI,UADZ;AAEZM,QAAAA,OAAO,EAAEmB;AAFG,OAAd;AAID,KA1GkB;;AAAA,SA4GnBC,cA5GmB,GA4GFrB,MAAM,IAAI;AACzB,UAAIH,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA9B,MAAAA,QAAQ,CAAC4B,KAAD,EAAQG,MAAR,CAAR,CACGG,IADH,CACQC,QAAQ,IAAI;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AAEA,aAAKe,WAAL;AACD,OALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OARH;AASD,KAvHkB;;AAAA,SAyHnBgC,YAzHmB,GAyHJtB,MAAM,IAAI;AACvB,UAAIH,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA/B,MAAAA,cAAc,CAACgC,MAAD,EAASH,KAAT,CAAd,CACGM,IADH,CACQC,QAAQ,IAAI;AAChBf,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAKe,WAAL;AACD,OAJH,EAKGC,KALH,CAKS,CACL;AADK,OALT;AAQD,KAnIkB;;AAEjB,QAAIT,MAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;;AACA,QAAIwB,QAAQ,GAAG,IAAf;;AACA,QAAI1B,MAAK,IAAI,IAAb,EAAmB;AACjB0B,MAAAA,QAAQ,GAAG,KAAX;AACD;;AACD,SAAKhC,KAAL,GAAa;AACXiC,MAAAA,IAAI,EAAE,KADK;AAEX7B,MAAAA,UAAU,EAAE,KAFD;AAGX8B,MAAAA,IAAI,EAAE,KAHK;AAIXR,MAAAA,OAAO,EAAE,EAJE;AAKXhB,MAAAA,OAAO,EAAE,IALE;AAMXf,MAAAA,KAAK,EAAE,EANI;AAOXO,MAAAA,WAAW,EAAE,EAPF;AAQXyB,MAAAA,aAAa,EAAE,EARJ;AASXK,MAAAA,QATW;AAUXG,MAAAA;AAVW,KAAb;AAYD;;AAkHDC,EAAAA,yBAAyB,GAAG;AAC1B,SAAKtB,WAAL;AACD;;AAEDuB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKrC,KAAL,CAAWgC,QAAX,KAAwB,KAA5B,EAAmC;AAEjC,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAAiC;;AACnC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKlB,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKG,KAAKd,KAAL,CAAW2B,aAAX,CAAyBW,MAAzB,KAAoC,CAApC,GACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,aAAa,EAAE,KAJV;AAKLC,QAAAA,UAAU,EAAE,IALP;AAMLC,QAAAA,WAAW,EAAE;AANR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAaG,IAlBN,EAoBE;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,aAAa,EAAE,KAJV;AAKLE,QAAAA,WAAW,EAAE;AALR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAK5C,KAAL,CAAW2B,aAAX,CAAyBkB,GAAzB,CAA6BhB,IAAI,IAChC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAEiB,QAAAA,OAAO,EAAE;AAAX,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAE,OADF;AAELO,QAAAA,SAAS,EAAE,6BAFN;AAGLC,QAAAA,eAAe,EAAEnB,IAAI,CAACoB,KAHjB;AAILC,QAAAA,YAAY,EAAE;AAJT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AACE,MAAA,KAAK,EAAE;AACLX,QAAAA,OAAO,EAAE,MADJ;AAELY,QAAAA,cAAc,EAAE;AAFX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKvB,gBAAL,CAAsBC,IAAtB,CADjB;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,KAAK,EAAEvB,IAAI,CAAClC,KAJd;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,MANX;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,UAAU,EAAE;AACV0D,QAAAA,gBAAgB,EAAE;AADR,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAoBE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKvB,cAAL,CAAoBD,IAAI,CAAClB,EAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,CAAC,EAAC,4EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CAJF,CApBF,CARF,EAgDE;AACE,MAAA,KAAK,EAAE;AACLwC,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OADT;AAKE,MAAA,OAAO,EAAE,MAAM,KAAKX,gBAAL,CAAsBC,IAAtB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,GAPH,EAQE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,KAAK,EAAEvB,IAAI,CAAC3B,WAHd;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACVmD,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAhDF,EAoEE;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLG,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGb,IAAI,CAACyB,QAAL,IAAiB,IAAjB,GACC;AACE,MAAA,KAAK,EAAE;AACLH,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAES,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,KAAK,EAAEnB,IAAI,CAACyB,QAFd;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAKvB,YAAL,CAAkBF,IAAI,CAAClB,EAAvB,CAHlB;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAcG,IArBN,EAsBE;AACE,MAAA,KAAK,EAAE;AACLwC,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLK,QAAAA,WAAW,EAAE;AAHR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGf,IAAI,CAAC0B,YAAL,IAAqB,IAArB,GACG1B,IAAI,CAAC0B,YAAL,CAAkBV,GAAlB,CAAsBW,GAAG,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADH,GAQG,IAfN,CAtBF,CApEF,EA6GE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,cAAc,EAAE,cADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLO,QAAAA,OAAO,EAAE,MAHJ;AAILW,QAAAA,aAAa,EAAE;AAJV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,WAAD;AACE,MAAA,iBAAiB,EAAE5B,IAAI,CAAClB,EAD1B;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAYE,oBAAC,YAAD;AACE,MAAA,iBAAiB,EAAEe,IAAI,CAAClB,EAD1B;AAEE,MAAA,iBAAiB,EACfkB,IAAI,CAAC0B,YAAL,KAAsB,IAAtB,GAA6B1B,IAAI,CAAC0B,YAAlC,GAAiD,IAHrD;AAKE,MAAA,OAAO,EAAE,KAAKzC,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAoBE,oBAAC,QAAD;AACE,MAAA,cAAc,EAAEe,IAAI,CAAClB,EADvB;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAwBE,oBAAC,UAAD;AACE,MAAA,gBAAgB,EAAEe,IAAI,CAAClB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EA4BE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAEe,IAAI,CAAClB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,CADF,CA7GF,CADF,CADD,CATH,CApBF,EAqLG,KAAKd,KAAL,CAAW2B,aAAX,CAAyBW,MAAzB,KAAoC,CAApC,GACC;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,aAAa,EAAE,KAJV;AAKLC,QAAAA,UAAU,EAAE,IALP;AAMLC,QAAAA,WAAW,EAAE;AANR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,GAaG,IAlMN,EAoME;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,OAAO,EAAE,MADJ;AAELC,QAAAA,KAAK,EAAE,OAFF;AAGLC,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,aAAa,EAAE,KAJV;AAKLE,QAAAA,WAAW,EAAE,IALR;AAMLD,QAAAA,UAAU,EAAE;AANP,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUG,KAAK3C,KAAL,CAAW0B,OAAX,CAAmBmB,GAAnB,CAAuBhB,IAAI,IAC1B;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAEiB,QAAAA,OAAO,EAAE;AAAX,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAE,OADF;AAELO,QAAAA,SAAS,EAAE,6BAFN;AAGLC,QAAAA,eAAe,EAAEnB,IAAI,CAACoB,KAHjB;AAILC,QAAAA,YAAY,EAAE;AAJT,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE;AACE,MAAA,KAAK,EAAE;AACLX,QAAAA,OAAO,EAAE,MADJ;AAELY,QAAAA,cAAc,EAAE;AAFX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKvB,gBAAL,CAAsBC,IAAtB,CADjB;AAEE,MAAA,EAAE,EAAC,qBAFL;AAGE,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE;AAAV,OAHT;AAIE,MAAA,KAAK,EAAEvB,IAAI,CAAClC,KAJd;AAKE,MAAA,SAAS,MALX;AAME,MAAA,SAAS,MANX;AAOE,MAAA,MAAM,EAAC,QAPT;AAQE,MAAA,UAAU,EAAE;AACV0D,QAAAA,gBAAgB,EAAE;AADR,OARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAoBE;AACE,MAAA,SAAS,EAAC,YADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKvB,cAAL,CAAoBD,IAAI,CAAClB,EAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,CAAC,EAAC,6GAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CAJF,CApBF,CARF,EAgDE;AACE,MAAA,KAAK,EAAE;AACLwC,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OADT;AAKE,MAAA,OAAO,EAAE,MAAM,KAAKX,gBAAL,CAAsBC,IAAtB,CALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,GAPH,EAQE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,KAAK,EAAEvB,IAAI,CAAC3B,WAHd;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACVmD,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAhDF,EAoEE;AACE,MAAA,KAAK,EAAE;AACLF,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLG,QAAAA,aAAa,EAAE;AAHV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGb,IAAI,CAACyB,QAAL,IAAiB,IAAjB,GACC;AACE,MAAA,KAAK,EAAE;AACLH,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAES,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,KAAK,EAAEnB,IAAI,CAACyB,QAFd;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAKvB,YAAL,CAAkBF,IAAI,CAAClB,EAAvB,CAHlB;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADD,GAcG,IArBN,EAsBE;AACE,MAAA,KAAK,EAAE;AACLwC,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLK,QAAAA,WAAW,EAAE;AAHR,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGf,IAAI,CAAC0B,YAAL,IAAqB,IAArB,GACG1B,IAAI,CAAC0B,YAAL,CAAkBV,GAAlB,CAAsBW,GAAG,IACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADH,GAQG,IAfN,CAtBF,CApEF,EA4GE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5GF,EA8GE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLL,QAAAA,cAAc,EAAE,cADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLO,QAAAA,OAAO,EAAE,MAHJ;AAILW,QAAAA,aAAa,EAAE;AAJV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,WAAD;AACE,MAAA,iBAAiB,EAAE5B,IAAI,CAAClB,EAD1B;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAYE,oBAAC,YAAD;AACE,MAAA,iBAAiB,EAAEe,IAAI,CAAClB,EAD1B;AAEE,MAAA,iBAAiB,EACfkB,IAAI,CAAC0B,YAAL,KAAsB,IAAtB,GAA6B1B,IAAI,CAAC0B,YAAlC,GAAiD,IAHrD;AAKE,MAAA,OAAO,EAAE,KAAKzC,WALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,EAoBE,oBAAC,QAAD;AACE,MAAA,cAAc,EAAEe,IAAI,CAAClB,EADvB;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBF,EAwBE,oBAAC,UAAD;AACE,MAAA,gBAAgB,EAAEe,IAAI,CAAClB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EA4BE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAEe,IAAI,CAAClB,EADzB;AAEE,MAAA,OAAO,EAAE,KAAKG,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,CADF,CA9GF,CADF,CADD,CAVH,EAmKE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWI,UADnB;AAEE,MAAA,OAAO,EAAE,KAAKD,WAFhB;AAGE,yBAAgB,qBAHlB;AAIE,MAAA,KAAK,EAAE;AAAEqC,QAAAA,KAAK,EAAE;AAAT,OAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKxC,KAAL,CAAWU,OAAX,KAAuB,IAAvB,GACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,KAAK,EAAE;AAAEoC,QAAAA,OAAO,EAAE;AAAX,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AACLN,QAAAA,KAAK,EAAE,OADF;AAELO,QAAAA,SAAS,EAAE,6BAFN;AAGLC,QAAAA,eAAe,EAAE,KAAKhD,KAAL,CAAWU,OAAX,CAAmBuC;AAH/B,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AACE,MAAA,KAAK,EAAE;AACLV,QAAAA,OAAO,EAAE,MADJ;AAELY,QAAAA,cAAc,EAAE;AAFX,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,YAAY,EAAE,KAAKpD,KAAL,CAAWU,OAAX,CAAmBf,KAHnC;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACV0D,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAUE,MAAA,QAAQ,EAAE,KAAK7D,iBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAqBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,CAAC,EAAC,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,CAAC,EAAC,6GAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CADF,CArBF,CAPF,EA6CE;AACE,MAAA,KAAK,EAAE;AACL2D,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,SAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,KAAK,EAAE;AAAEa,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,YAAY,EAAE,KAAKpD,KAAL,CAAWU,OAAX,CAAmBR,WAHnC;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,SAAS,MALX;AAME,MAAA,MAAM,EAAC,QANT;AAOE,MAAA,UAAU,EAAE;AACVmD,QAAAA,gBAAgB,EAAE;AADR,OAPd;AAUE,MAAA,QAAQ,EAAE,KAAKpD,uBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA7CF,EA0EE;AACE,MAAA,KAAK,EAAE;AACLkD,QAAAA,cAAc,EAAE,aADX;AAELZ,QAAAA,OAAO,EAAE;AAFJ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME,oBAAC,IAAD;AACE,MAAA,KAAK,EAAE;AAAES,QAAAA,eAAe,EAAE;AAAnB,OADT;AAEE,MAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWU,OAAX,CAAmB4C,QAF5B;AAGE,MAAA,QAAQ,EAAE,MAAM,KAAKvB,YAAL,CAAkB,KAAK/B,KAAL,CAAWU,OAAX,CAAmBC,EAArC,CAHlB;AAIE,MAAA,OAAO,EAAC,UAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CA1EF,EA2FE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAE;AACLwC,QAAAA,cAAc,EAAE,cADX;AAELZ,QAAAA,OAAO,EAAE,MAFJ;AAGLI,QAAAA,UAAU,EAAE,MAHP;AAILc,QAAAA,aAAa,EAAE;AAJV,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CARF,EAWE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAC,4BADR;AAEE,MAAA,KAAK,EAAC,IAFR;AAGE,MAAA,MAAM,EAAC,IAHT;AAIE,MAAA,OAAO,EAAC,WAJV;AAKE,MAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOE;AAAM,MAAA,CAAC,EAAC,gPAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF,CAXF,EAsBE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtBF,EAyBE,oBAAC,UAAD;AAAY,MAAA,gBAAgB,EAAE,KAAKzD,KAAL,CAAWU,OAAX,CAAmBC,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA0BE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,cAAD;AACE,MAAA,gBAAgB,EAAE,KAAKX,KAAL,CAAWU,OAAX,CAAmBC,EADvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA1BF,EA+BE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKR,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/BF,CADF,CA3FF,CADF,CADD,GAkIG,IAxIN,CAnKF,CApMF,EAmfE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnfF,CADF;AAyfD;;AAvoByC;AA0oB5C,eAAed,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card, Tooltip, Button, Snackbar } from \"@material-ui/core\";\nimport \"../Cssfile/Displaynotes.css\";\nimport AddAlertOutlinedIcon from \"@material-ui/icons/AddAlertOutlined\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\nimport { Dialog } from \"@material-ui/core\";\nimport { DisplayAllNotes, editNote, removeReminder, pinUnpin } from \"./Service\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport AddArchive from \"./AddArchive\";\nimport \"../Cssfile/TrashNote.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport CreateNote from \"./CreateNote\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport {Redirect} from 'react-router-dom'\n  \nexport class Displaynotes extends Component {\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn = true;\n    if (token == null) {\n      loggedIn = false;\n    }\n    this.state = {\n      open: false,\n      dialogOpen: false,\n      more: false,\n      allNote: [],\n      notearr: null,\n      title: \"\",\n      description: \"\",\n      pinUnpinArray: [],\n      loggedIn,\n      opensnake\n    };\n  }\n\n  handleUpdatetitle = event => {\n    this.setState({\n      title: event.target.value\n    });\n    console.log(\"ddd\" + this.state.title);\n  };\n\n  handleUpdatedescription = event => {\n    this.setState({\n      description: event.target.value\n    });\n    console.log(this.state.description);\n  };\n\n  handleClose = () => {\n    console.log(\"close \");\n    this.setState({\n      dialogOpen: false\n    });\n\n    let updatenote = {};\n    console.log(this.state.title);\n    console.log(this.state.description);\n\n    updatenote.title = this.state.title;\n    updatenote.description = this.state.description;\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.state.notearr.id;\n\n    editNote(updatenote, noteid, token)\n      .then(Response => {\n        console.log(\"update note\");\n        this.getAllNotes();\n      })\n      .catch(err => {\n        console.log(\"not update note\");\n      });\n  };\n\n  getAllNotes = () => {\n    let token = localStorage.getItem(\"Token\");\n\n    DisplayAllNotes(token)\n      .then(Response => {\n        let array = [];\n        let array1 = [];\n        Response.data.data.forEach(element => {\n          if (\n            element.trash === false &&\n            element.archive === false &&\n            element.pin === false\n          ) {\n            array.push(element);\n          }\n          console.log(array);\n          if (\n            element.archive === false &&\n            element.trash === false &&\n            element.pin === true\n          ) {\n            array1.push(element);\n          }\n        });\n        this.setState({\n          allNote: array\n        });\n\n        console.log(\"a\" + array);\n\n        this.setState({\n          pinUnpinArray: array1\n        });\n        console.log(\"b\" + this.state.pinUnpinArray);\n      })\n      .catch(err => {\n        console.log(\"error\");\n      });\n  };\n\n  handleDialogOpen = note => {\n    console.log(note);\n    this.setState({\n      dialogOpen: !this.state.dialogOpen,\n      notearr: note\n    });\n  };\n\n  handlepinunpin = noteid => {\n    let token = localStorage.getItem(\"Token\");\n    pinUnpin(token, noteid)\n      .then(Response => {\n        console.log(\"pinunpin done\");\n        \n        this.getAllNotes();\n      })\n      .catch(err => {\n        console.log(\"not done error\");\n      });\n  };\n\n  handleDelete = noteid => {\n    let token = localStorage.getItem(\"Token\");\n    removeReminder(noteid, token)\n      .then(Response => {\n        console.log(\"remove reminder\");\n        this.getAllNotes();\n      })\n      .catch({\n        // console.log(\"fail..\");\n      });\n  };\n\n  UNSAFE_componentWillMount() {\n    this.getAllNotes();\n  }\n\n  render() {\n    if (this.state.loggedIn === false) {\n\n      return <Redirect to=\"/login\"/>  }\n    return (\n      <div>\n        <div>\n          <CreateNote refresh={this.getAllNotes} />\n        </div>\n\n        {this.state.pinUnpinArray.length !== 0 ? (\n          <div\n            style={{\n              display: \"flex\",\n              width: \"800px\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              paddingTop: \"8%\",\n              paddingLeft: \"11%\"\n            }}\n          >\n            PINNED\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\"\n          }}\n        >\n          {this.state.pinUnpinArray.map(note => (\n            <div className=\"trashnoted\" style={{ padding: 5 }}>\n              <Card\n                style={{\n                  width: \"222px\",\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                  >\n                    <Tooltip title=\"unpin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4a2 2 0 0 0-2-2H9c-1.1 0-2 .9-2 2v7l-2 3v2h6v5l1 1 1-1v-5h6v-2l-2-3V4z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\"\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}\n                >\n                  {note.reminder != null ? (\n                    <div\n                      style={{\n                        justifyContent: \"spacearound\",\n                        display: \"flex\"\n                      }}\n                    >\n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                    </div>\n                  ) : null}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\",\n                      paddingLeft: \"6px\"\n                    }}\n                  >\n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          <div>\n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"footerarea\">\n                  <div\n                    style={{\n                      justifyContent: \"space-around\",\n                      display: \"flex\",\n                      padding: \"12px\",\n                      paddingBottom: \"13px\"\n                    }}\n                  >\n                    <AddReminder\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <AddArchive\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        propsdisplaynote={note.id}\n                        refresh={this.getAllNotes}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n        </div>\n        {this.state.pinUnpinArray.length !== 0 ? (\n          <div\n            style={{\n              display: \"flex\",\n              width: \"800px\",\n              flexWrap: \"wrap\",\n              flexDirection: \"row\",\n              paddingTop: \"6%\",\n              paddingLeft: \"11%\"\n            }}\n          >\n            OTHERS\n          </div>\n        ) : null}\n\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\",\n            paddingTop: \"6%\"\n          }}\n        >\n          {this.state.allNote.map(note => (\n            <div className=\"trashnoted\" style={{ padding: 5 }}>\n              <Card\n                style={{\n                  width: \"222px\",\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\"\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                  >\n                    <Tooltip title=\"pin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\"\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}\n                >\n                  {note.reminder != null ? (\n                    <div\n                      style={{\n                        justifyContent: \"spacearound\",\n                        display: \"flex\"\n                      }}\n                    >\n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                    </div>\n                  ) : null}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\",\n                      paddingLeft: \"6px\"\n                    }}\n                  >\n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          <div>\n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                </div>\n                <div></div>\n\n                <div className=\"footerarea\">\n                  <div\n                    style={{\n                      justifyContent: \"space-around\",\n                      display: \"flex\",\n                      padding: \"12px\",\n                      paddingBottom: \"13px\"\n                    }}\n                  >\n                    <AddReminder\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <AddArchive\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        propsdisplaynote={note.id}\n                        refresh={this.getAllNotes}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n\n          <Dialog\n            open={this.state.dialogOpen}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            style={{ width: \"100%\" }}\n          >\n            {this.state.notearr !== null ? (\n              <div className=\"trashnoted\" style={{ padding: 5 }}>\n                <Card\n                  style={{\n                    width: \"484px\",\n                    boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                    backgroundColor: this.state.notearr.color\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"standard-full-width\"\n                        style={{ margin: 8 }}\n                        defaultValue={this.state.notearr.title}\n                        multiline\n                        fullWidth\n                        margin=\"normal\"\n                        InputProps={{\n                          disableUnderline: true\n                        }}\n                        onChange={this.handleUpdatetitle}\n                      />\n                    </div>\n\n                    <div className=\"footerarea\">\n                      <Tooltip title=\"pin note \">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                          <path\n                            fill=\"#000\"\n                            d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                          />\n                        </svg>\n                      </Tooltip>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <TextField\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      defaultValue={this.state.notearr.description}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                      onChange={this.handleUpdatedescription}\n                    />\n                  </div>\n                  {/* {this.state.notearr.reminder !== null ? ( */}\n                  {/* <div>\n\n                     <Chip\n                       style={{ backgroundColor: \"#dedede\" }}\n                       label=\"Deletable Secondary Chip\"\n                       onDelete={this.handleDelete}\n                       variant=\"outlined\"\n                     />\n                   </div> */}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <Chip\n                      style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                      label={this.state.notearr.reminder}\n                      onDelete={() => this.handleDelete(this.state.notearr.id)}\n                      variant=\"outlined\"\n                    />\n                  </div>\n\n                  {/* ):(null)\n                 } */}\n\n                  <div className=\"footerarea\">\n                    <div\n                      style={{\n                        justifyContent: \"space-around\",\n                        display: \"flex\",\n                        paddingTop: \"13px\",\n                        paddingBottom: \"13px\"\n                      }}\n                    >\n                      <Tooltip title=\"Remind me\">\n                        <AddAlertOutlinedIcon />\n                      </Tooltip>\n                      <Tooltip title=\"Collaborator\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"#000\"\n                        >\n                          <path d=\"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\" />\n                        </svg>\n                      </Tooltip>\n                      <Tooltip title=\" Change color\">\n                        <PaletteOutlinedIcon />\n                      </Tooltip>\n                      <AddArchive propsarchivenote={this.state.notearr.id} />\n                      <Tooltip title=\" More\">\n                        <Showmoreoption\n                          propsdisplaynote={this.state.notearr.id}\n                        />\n                      </Tooltip>\n                      <Button onClick={this.handleClose}>close</Button>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            ) : null}\n          </Dialog>\n        </div>\n\n        <Snackbar>\n          ddd\n        </Snackbar>\n      </div>\n    );\n  }\n}\n\nexport default Displaynotes;\n"]},"metadata":{},"sourceType":"module"}