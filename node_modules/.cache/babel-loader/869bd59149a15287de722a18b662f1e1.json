{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Displaynotewithlabel.js\";\nimport React, { Component } from \"react\";\nimport { labelWithNote } from \"./Service\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AddArchive from \"./AddArchive\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport \"../Cssfile/TrashNote.css\";\nimport LabelOutlinedIcon from \"@material-ui/icons/LabelOutlined\";\nimport { connect } from \"react-redux\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport UnArchive from \"./UnArchive\";\nimport { Dialog } from \"@material-ui/core\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\n\nclass Displaynotewithlabel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllLabelWithNotes = () => {\n      let token = localStorage.getItem(\"Token\");\n      let labelid = this.props.location.state.label.id;\n      this.setState({\n        labelid: this.props.label_id\n      });\n      labelWithNote(this.props.label_id, token).then(Response => {\n        console.log(\"label with notes\");\n        let array = [];\n        console.log(Response.data.data);\n\n        if (Response.data.data !== null) {\n          Response.data.data.forEach(element => {\n            array.push(element);\n          });\n          this.setState({\n            labelwithnote: array\n          }, () => {\n            console.log(\"labelwithnote\", array.slice());\n          });\n        }\n      });\n    };\n\n    this.state = {\n      labelwithnote: [],\n      labelid: ''\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(prevProps.label_id);\n\n    if (this.props.label_id !== prevProps.label_id) {\n      console.log(\"in if\");\n      this.setState({\n        labelid: this.props.label_id\n      });\n      this.getAllLabelWithNotes();\n    }\n  }\n\n  render() {\n    console.log(this.state.labelwithnote);\n    return React.createElement(\"div\", {\n      className: this.props.drawer ? \"draweropen\" : null,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        width: \"800px\",\n        flexWrap: \"wrap\",\n        flexDirection: \"row\",\n        paddingLeft: \"8%\",\n        paddingTop: \"12%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.allNote.length !== 0 ? null : React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        opacity: \".3\",\n        alignItems: \"center\",\n        paddingLeft: \"25%\",\n        paddingTop: \"24%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(ArchiveOutlinedIcon, {\n      style: {\n        fontSize: \"7.5rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \" \", React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Your archived notes appear here\"), \" \"), this.state.allNote.map(note => React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: this.props.view ? \"listview\" : \"gridview\",\n      style: {\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: note.color,\n        borderRadius: \"10px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        padding: \"2%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      onClick: () => this.handleDialogOpen(note),\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      onClick: () => this.handlepinunpin(note.id),\n      style: {\n        paddingTop: \"1%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        padding: \"2%\"\n      },\n      onClick: () => this.handleDialogOpen(note),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \" \", React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      value: note.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, note.reminder != null ? React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: note.reminder,\n      onDelete: () => this.handleDelete(note.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })) : null, note.listOfLabels.length !== 1 ? note.listOfLabels.map(col => React.createElement(Chip, {\n      onClick: () => this.handleDeleteLabel(col.id),\n      size: \"small\",\n      label: col.lable_title,\n      style: {\n        width: \"95px\"\n      },\n      icon: React.createElement(\"div\", {\n        className: \"clearButton\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(ClearIcon, {\n        onClick: () => this.handleDeleteLabel(col.id),\n        fontSize: \"small\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      })),\n      clickable: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })) : null, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\",\n        paddingLeft: \"6px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, note.collabrators != null ? note.collabrators.map(col => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: col,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(AccountCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })))) : null)), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.props.view ? \"footer1\" : \"footer2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(AddReminder, {\n      propsRemindernote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), React.createElement(Collaborator, {\n      propsRemindernote: note.id,\n      propscollbratorid: note.collabrators !== null ? note.collabrators : null,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(SetColor, {\n      propsColornote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }), React.createElement(UnArchive, {\n      propsarchivenote: note.id,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: note.id,\n      onSelectLabel: this.handlesetLabel,\n      refresh: this.getAllNotes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }))))))), React.createElement(Dialog, {\n      open: this.state.dialogOpen,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, this.state.notearr !== null ? React.createElement(\"div\", {\n      className: \"trashnoted\",\n      style: {\n        padding: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: \"484px\",\n        boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n        backgroundColor: this.state.notearr.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.title,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatetitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"pin note \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fill: \"none\",\n      d: \"M0 0h24v24H0z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(\"path\", {\n      fill: \"#000\",\n      d: \"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-full-width\",\n      style: {\n        margin: 8\n      },\n      defaultValue: this.state.notearr.description,\n      multiline: true,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      onChange: this.handleUpdatedescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        justifyContent: \"spacearound\",\n        display: \"flex\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Chip, {\n      style: {\n        backgroundColor: \"#rgba(206, 206, 206, 0)\"\n      },\n      label: this.state.notearr.reminder,\n      onDelete: () => this.handleDelete(this.state.notearr.id),\n      variant: \"outlined\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"footerarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        justifyContent: \"space-around\",\n        display: \"flex\",\n        paddingTop: \"13px\",\n        paddingBottom: \"13px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      title: \"Remind me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(AddAlertOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    })), React.createElement(Tooltip, {\n      title: \"Collaborator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"24\",\n      height: \"24\",\n      viewBox: \"0 0 24 24\",\n      fill: \"#000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      d: \"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416\n      },\n      __self: this\n    }))), React.createElement(Tooltip, {\n      title: \" Change color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(PaletteOutlinedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    })), React.createElement(AddArchive, {\n      propsarchivenote: this.state.notearr.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      title: \" More\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, React.createElement(Showmoreoption, {\n      propsdisplaynote: this.state.notearr.id,\n      onSelectLabel: this.handlesetLabel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429\n      },\n      __self: this\n    }, \"close\"))))) : null)), React.createElement(Snackbar, {\n      key: messageInfo.key,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      onExited: this.handleExited,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, messageInfo.message),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    label_id: state.label_id\n  };\n};\n\nexport default connect(mapStateToProps, null)(Displaynotewithlabel);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Displaynotewithlabel.js"],"names":["React","Component","labelWithNote","Card","Tooltip","Button","Snackbar","Typography","TextField","SetColor","AddReminder","Chip","Collaborator","AccountCircleIcon","AddArchive","Showmoreoption","LabelOutlinedIcon","connect","ClearIcon","ArchiveOutlinedIcon","UnArchive","Dialog","PaletteOutlinedIcon","Displaynotewithlabel","constructor","props","getAllLabelWithNotes","token","localStorage","getItem","labelid","location","state","label","id","setState","label_id","then","Response","console","log","array","data","forEach","element","push","labelwithnote","slice","componentDidUpdate","prevProps","prevState","render","drawer","display","width","flexWrap","flexDirection","paddingLeft","paddingTop","allNote","length","justifyContent","opacity","alignItems","fontSize","map","note","padding","view","boxShadow","backgroundColor","color","borderRadius","handleDialogOpen","margin","title","disableUnderline","handlepinunpin","description","reminder","handleDelete","listOfLabels","col","handleDeleteLabel","lable_title","collabrators","getAllNotes","handlesetLabel","dialogOpen","handleClose","notearr","handleUpdatetitle","handleUpdatedescription","paddingBottom","messageInfo","key","vertical","horizontal","opensnackbar","handleExited","message","handleClose1","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { labelWithNote } from \"./Service\";\nimport { Card, Tooltip, Button, Snackbar, Typography } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SetColor from \"./SetColor\";\nimport AddReminder from \"./AddReminder\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Collaborator from \"./Collaborator\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AddArchive from \"./AddArchive\";\nimport Showmoreoption from \"./Showmoreoption\";\nimport \"../Cssfile/TrashNote.css\";\nimport LabelOutlinedIcon from \"@material-ui/icons/LabelOutlined\";\nimport { connect } from \"react-redux\";\nimport ClearIcon from '@material-ui/icons/Clear';\nimport ArchiveOutlinedIcon from \"@material-ui/icons/ArchiveOutlined\";\nimport UnArchive from \"./UnArchive\";\nimport { Dialog } from \"@material-ui/core\";\nimport PaletteOutlinedIcon from \"@material-ui/icons/PaletteOutlined\";\n\nclass Displaynotewithlabel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      labelwithnote: [],\n      labelid:''\n    };\n  }\n  getAllLabelWithNotes = () => {\n\n    let token = localStorage.getItem(\"Token\");\n    let labelid=this.props.location.state.label.id;\n\n    this.setState({labelid:this.props.label_id})\n    \n    labelWithNote(this.props.label_id, token).then(Response => {\n      console.log(\"label with notes\");\n      let array = [];\n      console.log(Response.data.data);\n         \n       if( Response.data.data!==null){\n        Response.data.data.forEach(element => {\n          array.push(element);\n        });\n        this.setState({\n          labelwithnote: array\n      \n        }, () =>{console.log(\"labelwithnote\",array.slice());\n        });\n\n       }\n     \n     \n    });\n  };\n\n  componentDidUpdate(prevProps,prevState) {\n\n        \n        console.log(prevProps.label_id);\n        \n\n      if(this.props.label_id !== prevProps.label_id){\n        console.log(\"in if\");\n        \n        this.setState({\n          labelid : this.props.label_id\n        })\n                  this.getAllLabelWithNotes();\n      }\n   \n  }\n  render() {\n\n          \n          console.log(this.state.labelwithnote);\n        \n         \n          \n     \n    return (\n      <div        className={this.props.drawer ? \"draweropen\": null}>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"800px\",\n            flexWrap: \"wrap\",\n            flexDirection: \"row\",\n            paddingLeft: \"8%\",\n            paddingTop: \"12%\"\n          }}\n        >\n          {this.state.allNote.length !== 0 ? null : (\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                opacity: \".3\",\n                alignItems: \"center\",\n                paddingLeft: \"25%\",\n                paddingTop: \"24%\"\n              }}\n            >\n              <ArchiveOutlinedIcon style={{ fontSize: \"7.5rem\" }} />{\" \"}\n              <b>Your archived notes appear here</b>{\" \"}\n            </div>\n          )}\n          {this.state.allNote.map(note => (\n            <div className=\"trashnoted\" style={{ padding: 5 }}>\n              <Card\n                className={this.props.view ? \"listview\" : \"gridview\"}\n                style={{\n                  boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                  backgroundColor: note.color,\n                  borderRadius: \"10px\"\n                }}\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    padding: \"2%\"\n                  }}\n                >\n                  <div>\n                    <TextField\n                      onClick={() => this.handleDialogOpen(note)}\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      value={note.title}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                    />\n                  </div>\n                  <div\n                    className=\"footerarea\"\n                    onClick={() => this.handlepinunpin(note.id)}\n                    style={{ paddingTop: \"1%\" }}\n                  >\n                    <Tooltip title=\"pin note \">\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\"\n                        height=\"24\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                        <path\n                          fill=\"#000\"\n                          d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                        />\n                      </svg>\n                    </Tooltip>\n                  </div>\n                </div>\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    padding: \"2%\"\n                  }}\n                  onClick={() => this.handleDialogOpen(note)}\n                >\n                  {\" \"}\n                  <TextField\n                    id=\"standard-full-width\"\n                    style={{ margin: 8 }}\n                    value={note.description}\n                    multiline\n                    fullWidth\n                    margin=\"normal\"\n                    InputProps={{\n                      disableUnderline: true\n                    }}\n                  />\n                </div>\n\n                <div\n                  style={{\n                    justifyContent: \"spacearound\",\n                    display: \"flex\",\n                    flexDirection: \"row\"\n                  }}\n                >\n                  {note.reminder != null ? (\n                    <div\n                      style={{\n                        justifyContent: \"spacearound\",\n                        display: \"flex\"\n                      }}\n                    >\n                      <Chip\n                        style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                        label={note.reminder}\n                        onDelete={() => this.handleDelete(note.id)}\n                        variant=\"outlined\"\n                      />\n                    </div>\n                  ) : null}\n\n{note.listOfLabels.length !== 1\n                       \n                        \n                       ? (note.listOfLabels.map(col => (\n                            \n                          \n                      \n                          \n                         <Chip\n                         onClick={() =>\n                           this.handleDeleteLabel(col.id) }\n                         size=\"small\"\n                         label={col.lable_title}\n                         style={{\n                         width: \"95px\"\n                         }}\n                         icon={\n                         <div className=\"clearButton\">\n \n                           \n                         <ClearIcon\n                         onClick={() =>\n                         this.handleDeleteLabel(col.id)\n                         }\n                         fontSize=\"small\"\n                         />\n                         </div>\n                         }\n                         clickable={true}\n                         />\n                         )))\n                       : null}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\",\n                      paddingLeft: \"6px\"\n                    }}\n                  >\n\n\n                    {note.collabrators != null\n                      ? note.collabrators.map(col => (\n                          <div>\n                            <Tooltip title={col}>\n                              <AccountCircleIcon />\n                            </Tooltip>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                </div>\n\n                <div className=\"footerarea\">\n                  <div\n                    className= {this.props.view ?(\"footer1\"):(\"footer2\")} \n                  >\n                    <AddReminder\n                      propsRemindernote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Collaborator\n                      propsRemindernote={note.id}\n                      propscollbratorid={\n                        note.collabrators !== null ? note.collabrators : null\n                      }\n                      refresh={this.getAllNotes}\n                    />\n\n                    <SetColor\n                      propsColornote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <UnArchive\n                      propsarchivenote={note.id}\n                      refresh={this.getAllNotes}\n                    />\n                    <Tooltip title=\" More\">\n                      <Showmoreoption\n                        propsdisplaynote={note.id}\n                        onSelectLabel={this.handlesetLabel}\n\n                        refresh={this.getAllNotes}\n                      />\n                    </Tooltip>\n                  </div>\n                </div>\n              </Card>\n            </div>\n          ))}\n          <Dialog\n            open={this.state.dialogOpen}\n            onClose={this.handleClose}\n            aria-labelledby=\"simple-dialog-title\"\n            style={{ width: \"100%\" }}\n          >\n            {this.state.notearr !== null ? (\n              <div className=\"trashnoted\" style={{ padding: 5 }}>\n                <Card\n                  style={{\n                    width: \"484px\",\n                    boxShadow: \"2px 2px 8px rgba(0,0,0,0.2)\",\n                    backgroundColor: this.state.notearr.color\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"space-between\"\n                    }}\n                  >\n                    <div>\n                      <TextField\n                        id=\"standard-full-width\"\n                        style={{ margin: 8 }}\n                        defaultValue={this.state.notearr.title}\n                        multiline\n                        fullWidth\n                        margin=\"normal\"\n                        InputProps={{\n                          disableUnderline: true\n                        }}\n                        onChange={this.handleUpdatetitle}\n                      />\n                    </div>\n\n                    <div className=\"footerarea\">\n                      <Tooltip title=\"pin note \">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n                          <path\n                            fill=\"#000\"\n                            d=\"M17 4v7l2 3v2h-6v5l-1 1-1-1v-5H5v-2l2-3V4c0-1.1.9-2 2-2h6c1.11 0 2 .89 2 2zM9 4v7.75L7.5 14h9L15 11.75V4H9z\"\n                          />\n                        </svg>\n                      </Tooltip>\n                    </div>\n                  </div>\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <TextField\n                      id=\"standard-full-width\"\n                      style={{ margin: 8 }}\n                      defaultValue={this.state.notearr.description}\n                      multiline\n                      fullWidth\n                      margin=\"normal\"\n                      InputProps={{\n                        disableUnderline: true\n                      }}\n                      onChange={this.handleUpdatedescription}\n                    />\n                  </div>\n                  {/* {this.state.notearr.reminder !== null ? ( */}\n                  {/* <div>\n\n                     <Chip\n                       style={{ backgroundColor: \"#dedede\" }}\n                       label=\"Deletable Secondary Chip\"\n                       onDelete={this.handleDelete}\n                       variant=\"outlined\"\n                     />\n                   </div> */}\n                  <div\n                    style={{\n                      justifyContent: \"spacearound\",\n                      display: \"flex\"\n                    }}\n                  >\n                    <Chip\n                      style={{ backgroundColor: \"#rgba(206, 206, 206, 0)\" }}\n                      label={this.state.notearr.reminder}\n                      onDelete={() => this.handleDelete(this.state.notearr.id)}\n                      variant=\"outlined\"\n                    />\n                  </div>\n\n                  {/* ):(null)\n                 } */}\n\n                  <div className=\"footerarea\">\n                    <div\n                      style={{\n                        justifyContent: \"space-around\",\n                        display: \"flex\",\n                        paddingTop: \"13px\",\n                        paddingBottom: \"13px\"\n                      }}\n                    >\n                      <Tooltip title=\"Remind me\">\n                        <AddAlertOutlinedIcon />\n                      </Tooltip>\n                      <Tooltip title=\"Collaborator\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"#000\"\n                        >\n                          <path d=\"M9 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0-6c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm0 7c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4zm6 5H3v-.99C3.2 16.29 6.3 15 9 15s5.8 1.29 6 2v1zm3-4v-3h-3V9h3V6h2v3h3v2h-3v3h-2z\" />\n                        </svg>\n                      </Tooltip>\n                      <Tooltip title=\" Change color\">\n                        <PaletteOutlinedIcon />\n                      </Tooltip>\n                      <AddArchive propsarchivenote={this.state.notearr.id} />\n                      <Tooltip title=\" More\">\n                        <Showmoreoption\n                          propsdisplaynote={this.state.notearr.id}\n                          onSelectLabel={this.handlesetLabel}\n                        />\n                      </Tooltip>\n                      <Button onClick={this.handleClose}>close</Button>\n                    </div>\n                  </div>\n                </Card>\n              </div>\n            ) : null}\n          </Dialog>\n        </div>\n        <Snackbar\n          key={messageInfo.key}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          onExited={this.handleExited}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">{messageInfo.message}</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.handleClose1}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    label_id: state.label_id\n  };\n};\n\n\n\nexport default connect(mapStateToProps, null) (Displaynotewithlabel);\n"]},"metadata":{},"sourceType":"module"}