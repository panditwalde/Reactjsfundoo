{"ast":null,"code":"import axios from \"axios\";\nexport function UserRegistration(regDto) {\n  return axios.post(\"http://localhost:8080/register\", regDto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function userLogin(logindto) {\n  return axios.post(\"http://localhost:8080/login\", logindto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function forgotPassword(email) {\n  return axios.post(\"http://localhost:8080/forgotpassword\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n      email: email\n    }\n  });\n}\nexport function setNewPassword(setpassworddto) {\n  return axios.post(\"http://localhost:8080/verfiy\", setpassworddto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\nexport function chanageprofile(file, token) {\n  console.log(\"file\" + file);\n  col;\n  return axios.post(\"http://localhost:8080/addprofile\", {\n    headers: {\n      'content-type': 'multipart/form-data',\n      file: file,\n      'token': token\n    }\n  });\n}\nexport function createNote(notedto, token) {\n  return axios.post(\"http://localhost:8081/createnote\", notedto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function DisplayAllNotes(token) {\n  return axios.get(\"http://localhost:8081/getallnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function deleteNote(noteid, token) {\n  return axios.delete(`http://localhost:8081/deletenote?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function editNote(notedto, noteid, token) {\n  return axios.put(\"http://localhost:8081/editnote\", notedto, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addIntrash(noteid, token) {\n  return axios.put(\"http://localhost:8081/trash\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function addInArchive(noteid, token) {\n  return axios.put(\"http://localhost:8081/archive\", {}, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function setColor(noteid, colorCode, token) {\n  return axios.put(\"http://localhost:8081/setcolor\", {}, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      noteid: noteid,\n      colorCode: colorCode,\n      token: token\n    }\n  });\n}\nexport function searchNote(note) {\n  return axios.get(\"http://localhost:8081/searchnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      note: note\n    }\n  });\n}","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Service.js"],"names":["axios","UserRegistration","regDto","post","headers","userLogin","logindto","forgotPassword","email","setNewPassword","setpassworddto","chanageprofile","file","token","console","log","col","createNote","notedto","DisplayAllNotes","get","deleteNote","noteid","delete","editNote","put","params","addIntrash","addInArchive","setColor","colorCode","searchNote","note"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport function UserRegistration(regDto) {\n  return axios.post(\"http://localhost:8080/register\", regDto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function userLogin(logindto) {\n\n  return axios.post(\"http://localhost:8080/login\", logindto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function forgotPassword(email) {\n  return axios.post(\n    \"http://localhost:8080/forgotpassword\",\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n        email: email\n      }\n    }\n  );\n}\n\nexport function setNewPassword(setpassworddto) {\n  return axios.post(\"http://localhost:8080/verfiy\", setpassworddto, {\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\"\n    }\n  });\n}\n\nexport function chanageprofile(file,token) {\n   console.log(\"file\"+file);\n   col\n   \n  return axios.post(\"http://localhost:8080/addprofile\", {\n    \n    headers:{\n      'content-type': 'multipart/form-data',\n      file:file,\n      'token':token\n  }\n  });\n}\n\nexport function createNote(notedto, token) {\n  return axios.post(\"http://localhost:8081/createnote\", notedto, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function DisplayAllNotes(token) {\n\n  return axios.get(\"http://localhost:8081/getallnote\", {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\nexport function deleteNote(noteid, token) {\n  \n  return axios.delete(`http://localhost:8081/deletenote?noteid=${noteid}`, {\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function editNote(notedto, noteid, token) {\n  \n  return axios.put(\"http://localhost:8081/editnote\", notedto, {\n    params: {\n      noteid: noteid\n    },\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n      token: token\n    }\n  });\n}\n\nexport function addIntrash(noteid, token) {\n  \n\n  return axios.put(\n    \"http://localhost:8081/trash\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function addInArchive(noteid, token) {\n  \n  return axios.put(\n    \"http://localhost:8081/archive\",\n    {},\n    {\n      params: {\n        noteid: noteid\n      },\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        token: token\n      }\n    }\n  );\n}\n\nexport function setColor(noteid, colorCode, token) {\n \n\n  return axios.put(\n    \"http://localhost:8081/setcolor\",\n    {},\n    {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        noteid: noteid,\n        colorCode: colorCode,\n        token: token\n      }\n    }\n  );\n}\n\nexport function searchNote(note) {\n\n  return axios.get(\n    \"http://localhost:8081/searchnote\",\n   \n    {\n\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        note: note\n      }\n    }\n  );\n}\n"]},"metadata":{},"sourceType":"module"}