{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Practiece.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n};\n\nclass SimpleDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClose = () => {\n      this.props.onClose(this.props.selectedValue);\n    };\n\n    this.handleListItemClick = value => {\n      this.props.onClose(value);\n    };\n  }\n\n  render() {\n    return React.createElement(Dialog, Object.assign({\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\"\n    }, other, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(DialogTitle, {\n      id: \"simple-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Set backup account\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string\n};\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = value => {\n      this.setState({\n        selectedValue: value,\n        open: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Open simple dialog\"), React.createElement(SimpleDialogWrapped, {\n      selectedValue: this.state.selectedValue,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default SimpleDialogDemo;","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Practiece.js"],"names":["React","PropTypes","withStyles","Button","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","styles","avatar","backgroundColor","color","SimpleDialog","Component","handleClose","props","onClose","selectedValue","handleListItemClick","value","render","other","propTypes","classes","object","isRequired","func","string","SimpleDialogWrapped","SimpleDialogDemo","state","open","handleClickOpen","setState"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport blue from '@material-ui/core/colors/blue';\n\nconst styles = {\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n};\n\nclass SimpleDialog extends React.Component {\n  handleClose = () => {\n    this.props.onClose(this.props.selectedValue);\n  };\n\n  handleListItemClick = value => {\n    this.props.onClose(value);\n  };\n\n  render() {\n\n    return (\n      <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" {...other}>\n        <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n        <div>\n         \n        </div>\n      </Dialog>\n    );\n  }\n}\n\nSimpleDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  selectedValue: PropTypes.string,\n};\n\nconst SimpleDialogWrapped = withStyles(styles)(SimpleDialog);\n\nclass SimpleDialogDemo extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = value => {\n    this.setState({ selectedValue: value, open: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <br />\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open simple dialog\n        </Button>\n        <SimpleDialogWrapped\n          selectedValue={this.state.selectedValue}\n          open={this.state.open}\n          onClose={this.handleClose}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SimpleDialogDemo;\n"]},"metadata":{},"sourceType":"module"}