{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Addlabel.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DisplayAllLabel, addLabelWithnote, updateLabelWithNote } from \"./Service\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider, IconButton } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      anchorEl: null\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        anchorEl: event.currentTarget\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        anchorEl: null\n      });\n    };\n\n    this.handleClose1 = () => {\n      this.setState({\n        opensnackbar: false\n      });\n    };\n\n    this.HandlelablevalueChange = event => {\n      this.setState({\n        labelvalue: event.target.value\n      });\n      let noteid = this.props.noteid2;\n      console.log(\"d\" + noteid);\n    };\n\n    this.getAllLabel = () => {\n      console.log(\"lable\");\n      let token = localStorage.getItem(\"Token\");\n      DisplayAllLabel(token).then(Response => {\n        let array = [];\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      }).catch(err => {\n        console.log(\"Note not found\");\n      });\n    };\n\n    this.handleAdd = labelid => {\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.props.noteid2;\n      updateLabelWithNote(labelid, noteid, token).then(Response => {\n        console.log(\"assign note\");\n        this.props.refresh();\n      }).catch(err => {\n        console.log(\"error\");\n      });\n    };\n\n    this.HandlelabelAddChange = () => {\n      console.log(\"ddd\");\n      let token = localStorage.getItem(\"Token\");\n      let noteid = this.props.noteid2;\n      let labeldto = {};\n      labeldto.lable_title = this.state.labelvalue;\n      this.state.alllabel1.push(this.state.labelvalue);\n      this.props.onSelectLabel1(this.state.alllabel1);\n      labeldto.noteid = noteid;\n      addLabelWithnote(labeldto, token).then(Response => {\n        console.log(\"label add with note\");\n        this.getAllLabel();\n        this.setState({\n          opensnackbar: true\n        });\n        this.props.refresh();\n      }).catch(err => {\n        console.log(\"label add not with note\");\n      });\n    };\n\n    let _token = localStorage.getItem(\"Token\");\n\n    let loggedIn;\n    this.state = {\n      labelvalue: \"\",\n      allLable: [],\n      alllabel1: [],\n      opensnackbar: false\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const anchorEl = this.state.anchorEl;\n    const open = Boolean(anchorEl);\n    console.log(\"all label\" + this.state.allLable);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      \"aria-owns\": open ? \"simple-popper\" : undefined,\n      onClick: this.handleClick,\n      style: {\n        paddingRight: \"12px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Add label\"), React.createElement(Popover, {\n      style: {\n        left: \"165.492px\",\n        top: \"-81px\"\n      },\n      id: \"simple-popper\",\n      open: open,\n      anchorEl: anchorEl,\n      onClose: this.handleClose,\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        padding: \"4.5%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Label note\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.margin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Enter label name\",\n      onChange: this.HandlelablevalueChange,\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(SearchIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }))), \"checked=\", true, this.state.allLable !== \"\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, this.state.allLable.map(label => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      onClick: () => this.handleAdd(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), label.lable_title))) : null, React.createElement(Divider, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), this.state.labelvalue !== \"\" ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(IconButton, {\n      onClick: this.HandlelabelAddChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(AddRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), \"Create\", React.createElement(\"b\", {\n      fullWidth: true,\n      margin: \"normal\",\n      InputProps: {\n        disableUnderline: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"\\\"\", this.state.labelvalue, \"\\\"\")) : null)), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"left\"\n      },\n      open: this.state.opensnackbar,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      ContentProps: {\n        \"aria-describedby\": \"message-id\"\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"new label Created\"),\n      action: [React.createElement(Button, {\n        key: \"undo\",\n        color: \"secondary\",\n        size: \"small\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"UNDO\"), React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"inherit\",\n        onClick: this.handleClose1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }));\n  }\n\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimplePopover);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Addlabel.js"],"names":["React","PropTypes","withStyles","Popover","Input","InputAdornment","FormControl","SearchIcon","AddRoundedIcon","Checkbox","DisplayAllLabel","addLabelWithnote","updateLabelWithNote","Snackbar","CloseIcon","Button","Divider","IconButton","styles","theme","typography","margin","spacing","unit","SimplePopover","Component","constructor","props","state","anchorEl","handleClick","event","setState","currentTarget","handleClose","handleClose1","opensnackbar","HandlelablevalueChange","labelvalue","target","value","noteid","noteid2","console","log","getAllLabel","token","localStorage","getItem","then","Response","array","data","forEach","element","push","allLable","catch","err","handleAdd","labelid","refresh","HandlelabelAddChange","labeldto","lable_title","alllabel1","onSelectLabel1","loggedIn","UNSAFE_componentWillMount","render","classes","open","Boolean","undefined","paddingRight","left","top","vertical","horizontal","padding","disableUnderline","map","label","id","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport AddRoundedIcon from \"@material-ui/icons/AddRounded\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { DisplayAllLabel, addLabelWithnote, updateLabelWithNote } from \"./Service\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Button from \"@material-ui/core/Button\";\nimport { Divider, IconButton } from \"@material-ui/core\";\n\nconst styles = theme => ({\n  typography: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass SimplePopover extends React.Component {\n  constructor(props) {\n    super(props);\n    let token = localStorage.getItem(\"Token\");\n    let loggedIn;\n    this.state = {\n      labelvalue: \"\",\n      allLable: [],\n      alllabel1: [],\n      opensnackbar: false\n    };\n  }\n\n  state = {\n    anchorEl: null\n  };\n\n  handleClick = event => {\n    this.setState({\n      anchorEl: event.currentTarget\n    });\n  };\n\n  handleClose = () => {\n    this.setState({\n      anchorEl: null\n    });\n  };\n  handleClose1 = () => {\n    this.setState({\n      opensnackbar: false\n    });\n  };\n\n  \n  HandlelablevalueChange = event => {\n    this.setState({\n      labelvalue: event.target.value\n    });\n    let noteid = this.props.noteid2;\n    console.log(\"d\" + noteid);\n  };\n  UNSAFE_componentWillMount() {\n    this.getAllLabel();\n  }\n  getAllLabel = () => {\n    console.log(\"lable\");\n\n    let token = localStorage.getItem(\"Token\");\n    DisplayAllLabel(token)\n      .then(Response => {\n        let array = [];\n\n        Response.data.data.forEach(element => {\n          console.log(element);\n          array.push(element);\n        });\n        this.setState({\n          allLable: array\n        });\n      })\n      .catch(err => {\n        console.log(\"Note not found\");\n      });\n  };\n\n  handleAdd = labelid => {\n    \n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.props.noteid2;\n\n    updateLabelWithNote(labelid,noteid,token).then(Response=>{\n          console.log(\"assign note\");\n          this.props.refresh();\n\n          \n    }).catch(err=>{\n      console.log(\"error\");\n      \n    })\n\n    \n  \n  };\n\n  HandlelabelAddChange = () => {\n    console.log(\"ddd\");\n\n    let token = localStorage.getItem(\"Token\");\n    let noteid = this.props.noteid2;\n    let labeldto = {};\n    labeldto.lable_title = this.state.labelvalue;\n\n    this.state.alllabel1.push(this.state.labelvalue);\n    this.props.onSelectLabel1(this.state.alllabel1);\n\n    labeldto.noteid = noteid;\n    addLabelWithnote(labeldto, token)\n      .then(Response => {\n        console.log(\"label add with note\");\n        this.getAllLabel();\n        this.setState({ opensnackbar: true });\n        this.props.refresh();\n      })\n      .catch(err => {\n        console.log(\"label add not with note\");\n      });\n  };\n  render() {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n    const open = Boolean(anchorEl);\n\n    console.log(\"all label\" + this.state.allLable);\n\n    return (\n      <div>\n        <div\n          aria-owns={open ? \"simple-popper\" : undefined}\n          onClick={this.handleClick}\n          style={{ paddingRight: \"12px\" }}\n        >\n          Add label\n        </div>\n        <Popover\n          style={{ left: \"165.492px\", top: \"-81px\" }}\n          id=\"simple-popper\"\n          open={open}\n          anchorEl={anchorEl}\n          onClose={this.handleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          <div style={{ padding: \"4.5%\" }}>\n            <div>Label note</div>\n            <div>\n              <FormControl className={classes.margin}>\n                <Input\n                  placeholder=\"Enter label name\"\n                  onChange={this.HandlelablevalueChange}\n                  fullWidth\n                  margin=\"normal\"\n                  InputProps={{\n                    disableUnderline: true\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <SearchIcon />\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            </div>\n            checked={true}\n            {this.state.allLable !== \"\" ? (\n              <div>\n                {this.state.allLable.map(label => (\n                  <div>\n                    <Checkbox  onClick={()=>this.handleAdd(label.id)} />\n                     \n                    {label.lable_title}\n                  </div>\n                ))}\n              </div>\n            ) : null}\n            <Divider />\n            {this.state.labelvalue !== \"\" ? (\n              <div>\n                <IconButton onClick={this.HandlelabelAddChange}>\n                  <AddRoundedIcon />\n                </IconButton>\n                Create\n                <b\n                  fullWidth\n                  margin=\"normal\"\n                  InputProps={{\n                    disableUnderline: true\n                  }}\n                >\n                  \"{this.state.labelvalue}\"\n                </b>\n              </div>\n            ) : null}\n          </div>\n          {/* </Typography> */}\n        </Popover>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"left\"\n          }}\n          open={this.state.opensnackbar}\n          autoHideDuration={6000}\n          onClose={this.handleClose}\n          ContentProps={{\n            \"aria-describedby\": \"message-id\"\n          }}\n          message={<span id=\"message-id\">new label Created</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={this.handleClose1}\n            >\n              UNDO\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose1}\n            >\n              <CloseIcon />\n            </IconButton>\n          ]}\n        />\n      </div>\n    );\n  }\n}\n\nSimplePopover.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(SimplePopover);\n"]},"metadata":{},"sourceType":"module"}