{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/AddReminder.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport RootRef from '@material-ui/core/RootRef';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  scrollContainer: {\n    height: 400,\n    overflow: 'auto',\n    marginBottom: theme.spacing.unit * 3\n  },\n  legend: {\n    marginTop: theme.spacing.unit * 2,\n    maxWidth: 300\n  },\n  paper: {\n    maxWidth: 400,\n    overflow: 'auto'\n  },\n  select: {\n    width: 200\n  },\n  popper: {\n    zIndex: 1,\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.common.white} transparent`\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.common.white} transparent transparent transparent`\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.common.white} transparent transparent`\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.common.white}`\n      }\n    }\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 7,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid'\n    }\n  }\n});\n\nclass AnchorPlayground extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arrow: false,\n      arrowRef: null,\n      disablePortal: false,\n      flip: true,\n      open: false,\n      placement: 'bottom',\n      preventOverflow: 'scrollParent'\n    };\n\n    this.handleChange = key => (event, value) => {\n      this.setState({\n        [key]: value\n      });\n    };\n\n    this.handleChangeTarget = key => event => {\n      this.setState({\n        [key]: event.target.value\n      });\n    };\n\n    this.handleClickButton = () => {\n      this.setState(state => ({\n        open: !state.open\n      }));\n    };\n\n    this.handleArrowRef = node => {\n      this.setState({\n        arrowRef: node\n      });\n    };\n\n    this.centerScroll = ref => {\n      if (!ref) {\n        return;\n      }\n\n      const container = ref.parentElement;\n      container.scrollTop = ref.clientHeight / 4;\n      container.scrollLeft = ref.clientWidth / 4;\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          open = _this$state.open,\n          placement = _this$state.placement,\n          disablePortal = _this$state.disablePortal,\n          flip = _this$state.flip,\n          preventOverflow = _this$state.preventOverflow,\n          arrow = _this$state.arrow,\n          arrowRef = _this$state.arrowRef;\n    const code = `\n\\`\\`\\`jsx\n<Popper\n  placement=\"${placement}\"\n  disablePortal={${disablePortal}}\n  modifiers={{\n    flip: {\n      enabled: ${flip},\n    },\n    preventOverflow: {\n      enabled: ${preventOverflow !== 'disabled'},\n      boundariesElement: '${preventOverflow === 'disabled' ? 'scrollParent' : preventOverflow}',\n    },\n    arrow: {\n      enabled: ${arrow},\n      element: arrowRef,\n    },\n  }}\n>\n\\`\\`\\`\n`;\n    const id = open ? 'scroll-playground' : null;\n    return React.createElement(\"div\", {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.scrollContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(RootRef, {\n      rootRef: this.centerScroll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      className: classes.scroll,\n      container: true,\n      alignItems: \"center\",\n      justify: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Button, {\n      buttonRef: node => {\n        this.anchorEl = node;\n      },\n      variant: \"contained\",\n      onClick: this.handleClickButton,\n      \"aria-describedby\": id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Toggle Popper\"), React.createElement(Typography, {\n      className: classes.legend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Scroll around this container to experiment with flip and preventOverflow modifiers.\"), React.createElement(Popper, {\n      id: id,\n      open: open,\n      anchorEl: this.anchorEl,\n      placement: placement,\n      disablePortal: disablePortal,\n      className: classes.popper,\n      modifiers: {\n        flip: {\n          enabled: flip\n        },\n        arrow: {\n          enabled: arrow,\n          element: arrowRef\n        },\n        preventOverflow: {\n          enabled: preventOverflow !== 'disabled',\n          boundariesElement: preventOverflow === 'disabled' ? 'scrollParent' : preventOverflow\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, arrow ? React.createElement(\"span\", {\n      className: classes.arrow,\n      ref: this.handleArrowRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }) : null, React.createElement(Paper, {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Use Google's location service?\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Let Google help apps determine location.\")), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClickButton,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Disagree\"), React.createElement(Button, {\n      onClick: this.handleClickButton,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, \"Agree\")))))))));\n  }\n\n}\n\nAnchorPlayground.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(AnchorPlayground);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/AddReminder.js"],"names":["React","PropTypes","withStyles","FormControlLabel","Grid","RootRef","Typography","Button","Popper","Paper","DialogActions","DialogContent","DialogContentText","DialogTitle","Switch","TextField","styles","theme","root","flexGrow","scrollContainer","height","overflow","marginBottom","spacing","unit","legend","marginTop","maxWidth","paper","select","width","popper","zIndex","top","left","borderWidth","borderColor","palette","common","white","bottom","marginLeft","right","marginRight","arrow","position","fontSize","content","margin","display","borderStyle","AnchorPlayground","Component","state","arrowRef","disablePortal","flip","open","placement","preventOverflow","handleChange","key","event","value","setState","handleChangeTarget","target","handleClickButton","handleArrowRef","node","centerScroll","ref","container","parentElement","scrollTop","clientHeight","scrollLeft","clientWidth","render","classes","props","code","id","scroll","anchorEl","enabled","element","boundariesElement","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport RootRef from '@material-ui/core/RootRef';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Popper from '@material-ui/core/Popper';\nimport Paper from '@material-ui/core/Paper';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  scrollContainer: {\n    height: 400,\n    overflow: 'auto',\n    marginBottom: theme.spacing.unit * 3,\n  },\n  \n  legend: {\n    marginTop: theme.spacing.unit * 2,\n    maxWidth: 300,\n  },\n  paper: {\n    maxWidth: 400,\n    overflow: 'auto',\n  },\n  select: {\n    width: 200,\n  },\n  popper: {\n    zIndex: 1,\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '0 1em 1em 1em',\n        borderColor: `transparent transparent ${theme.palette.common.white} transparent`,\n      },\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.9em',\n      width: '3em',\n      height: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 0 1em',\n        borderColor: `${theme.palette.common.white} transparent transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 1em 1em 0',\n        borderColor: `transparent ${theme.palette.common.white} transparent transparent`,\n      },\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.9em',\n      height: '3em',\n      width: '1em',\n      '&::before': {\n        borderWidth: '1em 0 1em 1em',\n        borderColor: `transparent transparent transparent ${theme.palette.common.white}`,\n      },\n    },\n  },\n  arrow: {\n    position: 'absolute',\n    fontSize: 7,\n    width: '3em',\n    height: '3em',\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: 0,\n      height: 0,\n      borderStyle: 'solid',\n    },\n  },\n});\n\nclass AnchorPlayground extends React.Component {\n  state = {\n    arrow: false,\n    arrowRef: null,\n    disablePortal: false,\n    flip: true,\n    open: false,\n    placement: 'bottom',\n    preventOverflow: 'scrollParent',\n  };\n\n  handleChange = key => (event, value) => {\n    this.setState({\n      [key]: value,\n    });\n  };\n\n  handleChangeTarget = key => event => {\n    this.setState({\n      [key]: event.target.value,\n    });\n  };\n\n  handleClickButton = () => {\n    this.setState(state => ({\n      open: !state.open,\n    }));\n  };\n\n  handleArrowRef = node => {\n    this.setState({\n      arrowRef: node,\n    });\n  };\n\n  centerScroll = ref => {\n    if (!ref) {\n      return;\n    }\n\n    const container = ref.parentElement;\n    container.scrollTop = ref.clientHeight / 4;\n    container.scrollLeft = ref.clientWidth / 4;\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { open, placement, disablePortal, flip, preventOverflow, arrow, arrowRef } = this.state;\n\n    const code = `\n\\`\\`\\`jsx\n<Popper\n  placement=\"${placement}\"\n  disablePortal={${disablePortal}}\n  modifiers={{\n    flip: {\n      enabled: ${flip},\n    },\n    preventOverflow: {\n      enabled: ${preventOverflow !== 'disabled'},\n      boundariesElement: '${preventOverflow === 'disabled' ? 'scrollParent' : preventOverflow}',\n    },\n    arrow: {\n      enabled: ${arrow},\n      element: arrowRef,\n    },\n  }}\n>\n\\`\\`\\`\n`;\n    const id = open ? 'scroll-playground' : null;\n\n    return (\n      <div className={classes.root}>\n        <div className={classes.scrollContainer}>\n          <RootRef rootRef={this.centerScroll}>\n            <Grid className={classes.scroll} container alignItems=\"center\" justify=\"center\">\n              <div>\n                <Button\n                  buttonRef={node => {\n                    this.anchorEl = node;\n                  }}\n                  variant=\"contained\"\n                  onClick={this.handleClickButton}\n                  aria-describedby={id}\n                >\n                  Toggle Popper\n                </Button>\n                <Typography className={classes.legend}>\n                  Scroll around this container to experiment with flip and preventOverflow\n                  modifiers.\n                </Typography>\n                <Popper\n                  id={id}\n                  open={open}\n                  anchorEl={this.anchorEl}\n                  placement={placement}\n                  disablePortal={disablePortal}\n                  className={classes.popper}\n                  modifiers={{\n                    flip: {\n                      enabled: flip,\n                    },\n                    arrow: {\n                      enabled: arrow,\n                      element: arrowRef,\n                    },\n                    preventOverflow: {\n                      enabled: preventOverflow !== 'disabled',\n                      boundariesElement:\n                        preventOverflow === 'disabled' ? 'scrollParent' : preventOverflow,\n                    },\n                  }}\n                >\n                  {arrow ? <span className={classes.arrow} ref={this.handleArrowRef} /> : null}\n                  <Paper className={classes.paper}>\n                    <DialogTitle>{\"Use Google's location service?\"}</DialogTitle>\n                    <DialogContent>\n                      <DialogContentText>\n                        Let Google help apps determine location.\n                      </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                      <Button onClick={this.handleClickButton} color=\"primary\">\n                        Disagree\n                      </Button>\n                      <Button onClick={this.handleClickButton} color=\"primary\">\n                        Agree\n                      </Button>\n                    </DialogActions>\n                  </Paper>\n                </Popper>\n              </div>\n            </Grid>\n          </RootRef>\n        </div>\n              </div>\n    );\n  }\n}\n\nAnchorPlayground.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AnchorPlayground);\n"]},"metadata":{},"sourceType":"module"}