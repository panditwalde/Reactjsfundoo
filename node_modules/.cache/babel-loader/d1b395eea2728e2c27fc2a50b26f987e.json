{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/new project/fundoo/src/component/Practiece.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content'\n  },\n  formControl: {\n    marginTop: theme.spacing.unit * 2,\n    minWidth: 120\n  },\n  formControlLabel: {\n    marginTop: theme.spacing.unit\n  }\n});\n\nclass MaxWidthDialog extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      fullWidth: true,\n      maxWidth: 'sm'\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleMaxWidthChange = event => {\n      this.setState({\n        maxWidth: event.target.value\n      });\n    };\n\n    this.handleFullWidthChange = event => {\n      this.setState({\n        fullWidth: event.target.checked\n      });\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleClickOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Open max-width dialog\"), React.createElement(Dialog, {\n      fullWidth: this.state.fullWidth,\n      maxWidth: this.state.maxWidth,\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"max-width-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(DialogContentText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"You can set my maximum width and whether to adapt or not.\"), React.createElement(\"form\", {\n      className: classes.form,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"max-width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"maxWidth\"), React.createElement(Select, {\n      value: this.state.maxWidth,\n      onChange: this.handleMaxWidthChange,\n      inputProps: {\n        name: 'max-width',\n        id: 'max-width'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      value: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"false\"), React.createElement(MenuItem, {\n      value: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"xs\"), React.createElement(MenuItem, {\n      value: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"sm\"), React.createElement(MenuItem, {\n      value: \"md\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"md\"), React.createElement(MenuItem, {\n      value: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"lg\"), React.createElement(MenuItem, {\n      value: \"xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"xl\"))), React.createElement(FormControlLabel, {\n      className: classes.formControlLabel,\n      control: React.createElement(Switch, {\n        checked: this.state.fullWidth,\n        onChange: this.handleFullWidthChange,\n        value: \"fullWidth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      label: \"Full width\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nMaxWidthDialog.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(MaxWidthDialog);","map":{"version":3,"sources":["/home/user/Desktop/new project/fundoo/src/component/Practiece.js"],"names":["React","PropTypes","withStyles","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","FormControl","FormControlLabel","InputLabel","MenuItem","Select","Switch","styles","theme","form","display","flexDirection","margin","width","formControl","marginTop","spacing","unit","minWidth","formControlLabel","MaxWidthDialog","Component","state","open","fullWidth","maxWidth","handleClickOpen","setState","handleClose","handleMaxWidthChange","event","target","value","handleFullWidthChange","checked","render","classes","props","name","id","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\n\nconst styles = theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing.unit * 2,\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing.unit,\n  },\n});\n\nclass MaxWidthDialog extends React.Component {\n  state = {\n    open: false,\n    fullWidth: true,\n    maxWidth: 'sm',\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleMaxWidthChange = event => {\n    this.setState({ maxWidth: event.target.value });\n  };\n\n  handleFullWidthChange = event => {\n    this.setState({ fullWidth: event.target.checked });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\n          Open max-width dialog\n        </Button>\n        <Dialog\n          fullWidth={this.state.fullWidth}\n          maxWidth={this.state.maxWidth}\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"max-width-dialog-title\"\n        >\n          <DialogContent>\n            <DialogContentText>\n              You can set my maximum width and whether to adapt or not.\n            </DialogContentText>\n            <form className={classes.form} noValidate>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\n                <Select\n                  value={this.state.maxWidth}\n                  onChange={this.handleMaxWidthChange}\n                  inputProps={{\n                    name: 'max-width',\n                    id: 'max-width',\n                  }}\n                >\n                  <MenuItem value={false}>false</MenuItem>\n                  <MenuItem value=\"xs\">xs</MenuItem>\n                  <MenuItem value=\"sm\">sm</MenuItem>\n                  <MenuItem value=\"md\">md</MenuItem>\n                  <MenuItem value=\"lg\">lg</MenuItem>\n                  <MenuItem value=\"xl\">xl</MenuItem>\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                className={classes.formControlLabel}\n                control={\n                  <Switch\n                    checked={this.state.fullWidth}\n                    onChange={this.handleFullWidthChange}\n                    value=\"fullWidth\"\n                  />\n                }\n                label=\"Full width\"\n              />\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </React.Fragment>\n    );\n  }\n}\n\nMaxWidthDialog.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(MaxWidthDialog);\n"]},"metadata":{},"sourceType":"module"}