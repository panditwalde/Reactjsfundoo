(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(['exports'], factory);
    } else if (typeof exports !== "undefined") {
        factory(exports);
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports);
        global.utils = mod.exports;
    }
})(this, function (exports) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    var hasDocument = typeof document !== 'undefined';
    var vendorEvents = [{
        hidden: 'hidden',
        event: 'visibilitychange',
        state: 'visibilityState'
    }, {
        hidden: 'webkitHidden',
        event: 'webkitvisibilitychange',
        state: 'webkitVisibilityState'
    }, {
        hidden: 'mozHidden',
        event: 'mozvisibilitychange',
        state: 'mozVisibilityState'
    }, {
        hidden: 'msHidden',
        event: 'msvisibilitychange',
        state: 'msVisibilityState'
    }, {
        hidden: 'oHidden',
        event: 'ovisibilitychange',
        state: 'oVisibilityState'
    }];

    var isSupported = exports.isSupported = hasDocument && Boolean(document.addEventListener);

    var visibility = exports.visibility = function () {
        if (!isSupported) {
            return null;
        }
        for (var i = 0; i < vendorEvents.length; i++) {
            var event = vendorEvents[i];
            if (event.hidden in document) {
                return event;
            }
        }
        // otherwise it's not supported
        return null;
    }();

    var getVisibilityState = exports.getVisibilityState = function getVisibilityState(_ref) {
        var hidden = _ref.hidden,
            state = _ref.state;

        return {
            documentHidden: document[hidden],
            visibilityState: document[state]
        };
    };

    var getHandlerArgs = exports.getHandlerArgs = function getHandlerArgs() {
        var hidden = visibility.hidden,
            state = visibility.state;

        return [!document[hidden], document[state]];
    };
});